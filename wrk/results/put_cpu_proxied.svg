<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="917"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="917"> </text>
<g id="frames">
<g>
<title>all (735 samples, 100.00%)</title><rect x="10.0" y="883.0" width="1180.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="894.0">all</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.27%)</title><rect x="10.0" y="867.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.27%)</title><rect x="10.0" y="851.0" width="3.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.27%)</title><rect x="10.0" y="835.0" width="3.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.14%)</title><rect x="10.0" y="819.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.14%)</title><rect x="10.0" y="803.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (1 samples, 0.14%)</title><rect x="10.0" y="787.0" width="1.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.14%)</title><rect x="11.6" y="819.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="14.6" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.14%)</title><rect x="13.2" y="867.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="16.2" y="878.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.14%)</title><rect x="13.2" y="851.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.2" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.14%)</title><rect x="13.2" y="835.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="16.2" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.14%)</title><rect x="13.2" y="819.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="16.2" y="830.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.30.so (1 samples, 0.14%)</title><rect x="13.2" y="803.0" width="1.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="16.2" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.68%)</title><rect x="14.8" y="867.0" width="8.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="17.8" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.68%)</title><rect x="14.8" y="851.0" width="8.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="17.8" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.68%)</title><rect x="14.8" y="835.0" width="8.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="17.8" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (5 samples, 0.68%)</title><rect x="14.8" y="819.0" width="8.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="17.8" y="830.0"></text>
</g>
<g>
<title>[not_walkable] (2 samples, 0.27%)</title><rect x="22.8" y="867.0" width="3.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="25.8" y="878.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.14%)</title><rect x="26.1" y="867.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="29.1" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.14%)</title><rect x="26.1" y="851.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="29.1" y="862.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.54%)</title><rect x="27.7" y="867.0" width="6.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="30.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.14%)</title><rect x="30.9" y="851.0" width="1.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="33.9" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.14%)</title><rect x="30.9" y="835.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="33.9" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.14%)</title><rect x="32.5" y="851.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="35.5" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="32.5" y="835.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="35.5" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="32.5" y="819.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="35.5" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.run (443 samples, 60.27%)</title><rect x="34.1" y="867.0" width="711.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.1" y="878.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (443 samples, 60.27%)</title><rect x="34.1" y="851.0" width="711.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.1" y="862.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (443 samples, 60.27%)</title><rect x="34.1" y="835.0" width="711.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="37.1" y="846.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>InlineCacheBuffer (1 samples, 0.14%)</title><rect x="34.1" y="819.0" width="1.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="37.1" y="830.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.41%)</title><rect x="35.7" y="819.0" width="4.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="38.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (287 samples, 39.05%)</title><rect x="40.5" y="819.0" width="460.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="43.5" y="830.0">java/util/concurrent/ThreadPoolExecutor.getTask</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (287 samples, 39.05%)</title><rect x="40.5" y="803.0" width="460.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="43.5" y="814.0">java/util/concurrent/SynchronousQueue.take</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (286 samples, 38.91%)</title><rect x="42.1" y="787.0" width="459.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.1" y="798.0">java/util/concurrent/SynchronousQueue$TransferStack.transfer</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (2 samples, 0.27%)</title><rect x="42.1" y="771.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="45.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.27%)</title><rect x="42.1" y="755.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="45.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (284 samples, 38.64%)</title><rect x="45.3" y="771.0" width="456.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="48.3" y="782.0">java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (283 samples, 38.50%)</title><rect x="46.9" y="755.0" width="454.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="49.9" y="766.0">java/util/concurrent/locks/LockSupport.park</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (33 samples, 4.49%)</title><rect x="448.3" y="739.0" width="53.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="451.3" y="750.0">jdk/i..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.30.so (1 samples, 0.14%)</title><rect x="451.5" y="723.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="454.5" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.14%)</title><rect x="453.1" y="723.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="456.1" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (16 samples, 2.18%)</title><rect x="454.7" y="723.0" width="25.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="457.7" y="734.0">U..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.27%)</title><rect x="454.7" y="707.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="457.7" y="718.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.27%)</title><rect x="457.9" y="707.0" width="3.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="460.9" y="718.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.41%)</title><rect x="461.1" y="707.0" width="4.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="464.1" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.14%)</title><rect x="464.3" y="691.0" width="1.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="467.3" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.14%)</title><rect x="465.9" y="707.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="468.9" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (6 samples, 0.82%)</title><rect x="467.6" y="707.0" width="9.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="470.6" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.41%)</title><rect x="472.4" y="691.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="475.4" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.14%)</title><rect x="472.4" y="675.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="475.4" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.27%)</title><rect x="474.0" y="675.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="477.0" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.14%)</title><rect x="477.2" y="707.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="480.2" y="718.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.14%)</title><rect x="478.8" y="707.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="481.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 1.77%)</title><rect x="480.4" y="723.0" width="20.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="483.4" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_wait (9 samples, 1.22%)</title><rect x="480.4" y="707.0" width="14.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="483.4" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.54%)</title><rect x="488.4" y="691.0" width="6.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="491.4" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.54%)</title><rect x="488.4" y="675.0" width="6.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="491.4" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.41%)</title><rect x="490.0" y="659.0" width="4.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="493.0" y="670.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.41%)</title><rect x="490.0" y="643.0" width="4.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="493.0" y="654.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.41%)</title><rect x="490.0" y="627.0" width="4.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="493.0" y="638.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.27%)</title><rect x="490.0" y="611.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="493.0" y="622.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.27%)</title><rect x="490.0" y="595.0" width="3.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="493.0" y="606.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.27%)</title><rect x="490.0" y="579.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="493.0" y="590.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.27%)</title><rect x="490.0" y="563.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="493.0" y="574.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.14%)</title><rect x="493.2" y="611.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="496.2" y="622.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.14%)</title><rect x="493.2" y="595.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="496.2" y="606.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.41%)</title><rect x="494.8" y="707.0" width="4.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="497.8" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.14%)</title><rect x="499.7" y="707.0" width="1.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="502.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/TableFlusher$$Lambda$135/929233421.run (9 samples, 1.22%)</title><rect x="501.3" y="819.0" width="14.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="504.3" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/TableFlusher.lambda$flush$0 (9 samples, 1.22%)</title><rect x="501.3" y="803.0" width="14.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="504.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/DAOImpl.flushAndOpen (9 samples, 1.22%)</title><rect x="501.3" y="787.0" width="14.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="504.3" y="798.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.14%)</title><rect x="501.3" y="771.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="504.3" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (1 samples, 0.14%)</title><rect x="501.3" y="755.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="504.3" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (1 samples, 0.14%)</title><rect x="501.3" y="739.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="504.3" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (1 samples, 0.14%)</title><rect x="501.3" y="723.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="504.3" y="734.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (1 samples, 0.14%)</title><rect x="501.3" y="707.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="504.3" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (1 samples, 0.14%)</title><rect x="501.3" y="691.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="504.3" y="702.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (1 samples, 0.14%)</title><rect x="501.3" y="675.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="504.3" y="686.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (1 samples, 0.14%)</title><rect x="501.3" y="659.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="504.3" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (1 samples, 0.14%)</title><rect x="501.3" y="643.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="504.3" y="654.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (1 samples, 0.14%)</title><rect x="501.3" y="627.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="504.3" y="638.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.14%)</title><rect x="501.3" y="611.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="504.3" y="622.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.14%)</title><rect x="501.3" y="595.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="504.3" y="606.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (1 samples, 0.14%)</title><rect x="501.3" y="579.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="504.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.14%)</title><rect x="501.3" y="563.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="504.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/DAOImpl.flushEntries (8 samples, 1.09%)</title><rect x="502.9" y="771.0" width="12.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="505.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/Table.flushEntries (8 samples, 1.09%)</title><rect x="502.9" y="755.0" width="12.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="505.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (8 samples, 1.09%)</title><rect x="502.9" y="739.0" width="12.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="505.9" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (8 samples, 1.09%)</title><rect x="502.9" y="723.0" width="12.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="505.9" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (7 samples, 0.95%)</title><rect x="502.9" y="707.0" width="11.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="505.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (7 samples, 0.95%)</title><rect x="502.9" y="691.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="505.9" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (7 samples, 0.95%)</title><rect x="502.9" y="675.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="505.9" y="686.0"></text>
</g>
<g>
<title>__write (7 samples, 0.95%)</title><rect x="502.9" y="659.0" width="11.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="505.9" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.95%)</title><rect x="502.9" y="643.0" width="11.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="505.9" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.95%)</title><rect x="502.9" y="627.0" width="11.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="505.9" y="638.0"></text>
</g>
<g>
<title>__x64_sys_write (7 samples, 0.95%)</title><rect x="502.9" y="611.0" width="11.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="505.9" y="622.0"></text>
</g>
<g>
<title>ksys_write (7 samples, 0.95%)</title><rect x="502.9" y="595.0" width="11.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="505.9" y="606.0"></text>
</g>
<g>
<title>vfs_write (7 samples, 0.95%)</title><rect x="502.9" y="579.0" width="11.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="505.9" y="590.0"></text>
</g>
<g>
<title>__vfs_write (7 samples, 0.95%)</title><rect x="502.9" y="563.0" width="11.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="505.9" y="574.0"></text>
</g>
<g>
<title>new_sync_write (7 samples, 0.95%)</title><rect x="502.9" y="547.0" width="11.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="505.9" y="558.0"></text>
</g>
<g>
<title>ext4_file_write_iter (7 samples, 0.95%)</title><rect x="502.9" y="531.0" width="11.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="505.9" y="542.0"></text>
</g>
<g>
<title>__generic_file_write_iter (7 samples, 0.95%)</title><rect x="502.9" y="515.0" width="11.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="505.9" y="526.0"></text>
</g>
<g>
<title>generic_perform_write (7 samples, 0.95%)</title><rect x="502.9" y="499.0" width="11.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="505.9" y="510.0"></text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.14%)</title><rect x="502.9" y="483.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="505.9" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.14%)</title><rect x="502.9" y="467.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="505.9" y="478.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.14%)</title><rect x="502.9" y="451.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="505.9" y="462.0"></text>
</g>
<g>
<title>start_this_handle (1 samples, 0.14%)</title><rect x="502.9" y="435.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="505.9" y="446.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.14%)</title><rect x="502.9" y="419.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="505.9" y="430.0"></text>
</g>
<g>
<title>ext4_da_write_end (6 samples, 0.82%)</title><rect x="504.5" y="483.0" width="9.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="507.5" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_stop (3 samples, 0.41%)</title><rect x="504.5" y="467.0" width="4.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="507.5" y="478.0"></text>
</g>
<g>
<title>jbd2_journal_stop (3 samples, 0.41%)</title><rect x="504.5" y="451.0" width="4.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="507.5" y="462.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.14%)</title><rect x="506.1" y="435.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="509.1" y="446.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.14%)</title><rect x="506.1" y="419.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="509.1" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.14%)</title><rect x="506.1" y="403.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="509.1" y="414.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.14%)</title><rect x="507.7" y="435.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="510.7" y="446.0"></text>
</g>
<g>
<title>generic_write_end (3 samples, 0.41%)</title><rect x="509.3" y="467.0" width="4.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="512.3" y="478.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.27%)</title><rect x="509.3" y="451.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="512.3" y="462.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.27%)</title><rect x="509.3" y="435.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="512.3" y="446.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.27%)</title><rect x="509.3" y="419.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="512.3" y="430.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (2 samples, 0.27%)</title><rect x="509.3" y="403.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="512.3" y="414.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.14%)</title><rect x="510.9" y="387.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="513.9" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.14%)</title><rect x="510.9" y="371.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="513.9" y="382.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (1 samples, 0.14%)</title><rect x="510.9" y="355.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="513.9" y="366.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.14%)</title><rect x="510.9" y="339.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="513.9" y="350.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.14%)</title><rect x="510.9" y="323.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="513.9" y="334.0"></text>
</g>
<g>
<title>block_write_end (1 samples, 0.14%)</title><rect x="512.5" y="451.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="515.5" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.14%)</title><rect x="514.1" y="707.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="517.1" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.14%)</title><rect x="514.1" y="691.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.1" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.14%)</title><rect x="514.1" y="675.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="517.1" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.14%)</title><rect x="514.1" y="659.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="517.1" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.14%)</title><rect x="514.1" y="643.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="517.1" y="654.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.14%)</title><rect x="514.1" y="627.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="517.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$125/1737013724.run (143 samples, 19.46%)</title><rect x="515.7" y="819.0" width="229.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="518.7" y="830.0">ru/mail/polis/service/vaddya/H..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.lambda$schedulePutEntity$5 (143 samples, 19.46%)</title><rect x="515.7" y="803.0" width="229.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.7" y="814.0">ru/mail/polis/service/vaddya/H..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.putEntityLocal (55 samples, 7.48%)</title><rect x="515.7" y="787.0" width="88.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.7" y="798.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/DAOImpl.upsert (52 samples, 7.07%)</title><rect x="515.7" y="771.0" width="83.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="518.7" y="782.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/MemTablePool.upsert (52 samples, 7.07%)</title><rect x="515.7" y="755.0" width="83.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.7" y="766.0">ru/mail/p..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.27%)</title><rect x="515.7" y="739.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="518.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.27%)</title><rect x="515.7" y="723.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.27%)</title><rect x="515.7" y="707.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="518.7" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.14%)</title><rect x="515.7" y="691.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.7" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.14%)</title><rect x="515.7" y="675.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.7" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.14%)</title><rect x="515.7" y="659.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="518.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (1 samples, 0.14%)</title><rect x="517.3" y="691.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="520.3" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.14%)</title><rect x="517.3" y="675.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="520.3" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.14%)</title><rect x="517.3" y="659.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="520.3" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.14%)</title><rect x="517.3" y="643.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="520.3" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.14%)</title><rect x="517.3" y="627.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="520.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.14%)</title><rect x="518.9" y="739.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="521.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.14%)</title><rect x="518.9" y="723.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="521.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (1 samples, 0.14%)</title><rect x="518.9" y="707.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.14%)</title><rect x="518.9" y="691.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="521.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/MemTable.upsert (49 samples, 6.67%)</title><rect x="520.5" y="739.0" width="78.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="523.5" y="750.0">ru/mail/p..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.14%)</title><rect x="523.7" y="723.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="526.7" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.14%)</title><rect x="523.7" y="707.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="526.7" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.83] (1 samples, 0.14%)</title><rect x="523.7" y="691.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="526.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (46 samples, 6.26%)</title><rect x="525.3" y="723.0" width="73.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="528.3" y="734.0">java/uti..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.14%)</title><rect x="525.3" y="707.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="528.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (44 samples, 5.99%)</title><rect x="527.0" y="707.0" width="70.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="530.0" y="718.0">java/uti..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.14%)</title><rect x="527.0" y="691.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="530.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (2 samples, 0.27%)</title><rect x="528.6" y="691.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="531.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (2 samples, 0.27%)</title><rect x="528.6" y="675.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="531.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.27%)</title><rect x="531.8" y="691.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="534.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.14%)</title><rect x="531.8" y="675.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="534.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.14%)</title><rect x="531.8" y="659.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.14%)</title><rect x="531.8" y="643.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="534.8" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.14%)</title><rect x="531.8" y="627.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="534.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.14%)</title><rect x="533.4" y="675.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="536.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.14%)</title><rect x="533.4" y="659.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="536.4" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.14%)</title><rect x="533.4" y="643.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="536.4" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.14%)</title><rect x="533.4" y="627.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="536.4" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.14%)</title><rect x="533.4" y="611.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="536.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (39 samples, 5.31%)</title><rect x="535.0" y="691.0" width="62.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="538.0" y="702.0">java/u..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (39 samples, 5.31%)</title><rect x="535.0" y="675.0" width="62.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="538.0" y="686.0">java/n..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (20 samples, 2.72%)</title><rect x="565.5" y="659.0" width="32.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="568.5" y="670.0">ja..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (18 samples, 2.45%)</title><rect x="567.1" y="643.0" width="28.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.1" y="654.0">ja..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (11 samples, 1.50%)</title><rect x="571.9" y="627.0" width="17.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="574.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (1 samples, 0.14%)</title><rect x="589.6" y="627.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="592.6" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (1 samples, 0.14%)</title><rect x="589.6" y="611.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="592.6" y="622.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.41%)</title><rect x="591.2" y="627.0" width="4.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="594.2" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.14%)</title><rect x="596.0" y="643.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="599.0" y="654.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.14%)</title><rect x="597.6" y="707.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="600.6" y="718.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.14%)</title><rect x="597.6" y="691.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="600.6" y="702.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.14%)</title><rect x="597.6" y="675.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="600.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ByteBufferUtils.wrapString (3 samples, 0.41%)</title><rect x="599.2" y="771.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="602.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ByteBufferUtils.wrapString (3 samples, 0.41%)</title><rect x="599.2" y="755.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.41%)</title><rect x="599.2" y="739.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="602.2" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.41%)</title><rect x="599.2" y="723.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="602.2" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.41%)</title><rect x="599.2" y="707.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="602.2" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.41%)</title><rect x="599.2" y="691.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="602.2" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.41%)</title><rect x="599.2" y="675.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.41%)</title><rect x="599.2" y="659.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.2" y="670.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.14%)</title><rect x="602.4" y="643.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="605.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ServiceSession.sendEmptyResponse (88 samples, 11.97%)</title><rect x="604.0" y="787.0" width="141.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="607.0" y="798.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ServiceSession.send (88 samples, 11.97%)</title><rect x="604.0" y="771.0" width="141.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="607.0" y="782.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (88 samples, 11.97%)</title><rect x="604.0" y="755.0" width="141.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.0" y="766.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.14%)</title><rect x="605.6" y="739.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="608.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.14%)</title><rect x="605.6" y="723.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="608.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.14%)</title><rect x="605.6" y="707.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="608.6" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.14%)</title><rect x="605.6" y="691.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="608.6" y="702.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.14%)</title><rect x="605.6" y="675.0" width="1.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="608.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (82 samples, 11.16%)</title><rect x="607.2" y="739.0" width="131.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="610.2" y="750.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.68%)</title><rect x="607.2" y="723.0" width="8.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="610.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.41%)</title><rect x="610.4" y="707.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="613.4" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.41%)</title><rect x="610.4" y="691.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.41%)</title><rect x="610.4" y="675.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="613.4" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (77 samples, 10.48%)</title><rect x="615.3" y="723.0" width="123.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="618.3" y="734.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/net/Session.write (77 samples, 10.48%)</title><rect x="615.3" y="707.0" width="123.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="618.3" y="718.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.14%)</title><rect x="615.3" y="691.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="618.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (76 samples, 10.34%)</title><rect x="616.9" y="691.0" width="122.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="619.9" y="702.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (76 samples, 10.34%)</title><rect x="616.9" y="675.0" width="122.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.9" y="686.0">one/nio/net/Nat..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.14%)</title><rect x="618.5" y="659.0" width="1.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="621.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.95%)</title><rect x="620.1" y="659.0" width="11.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="623.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.95%)</title><rect x="620.1" y="643.0" width="11.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="623.1" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.95%)</title><rect x="620.1" y="627.0" width="11.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="623.1" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.27%)</title><rect x="621.7" y="611.0" width="3.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="624.7" y="622.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.27%)</title><rect x="624.9" y="611.0" width="3.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="627.9" y="622.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.14%)</title><rect x="626.5" y="595.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="629.5" y="606.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.14%)</title><rect x="626.5" y="579.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="629.5" y="590.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.27%)</title><rect x="628.1" y="611.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="631.1" y="622.0"></text>
</g>
<g>
<title>__send (67 samples, 9.12%)</title><rect x="631.3" y="659.0" width="107.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="634.3" y="670.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (65 samples, 8.84%)</title><rect x="634.5" y="643.0" width="104.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="637.5" y="654.0">entry_SYSCAL..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.14%)</title><rect x="634.5" y="627.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="637.5" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (64 samples, 8.71%)</title><rect x="636.1" y="627.0" width="102.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="639.1" y="638.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (63 samples, 8.57%)</title><rect x="637.7" y="611.0" width="101.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="640.7" y="622.0">__x64_sys_se..</text>
</g>
<g>
<title>__sys_sendto (63 samples, 8.57%)</title><rect x="637.7" y="595.0" width="101.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="640.7" y="606.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (59 samples, 8.03%)</title><rect x="637.7" y="579.0" width="94.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="640.7" y="590.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.27%)</title><rect x="637.7" y="563.0" width="3.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="640.7" y="574.0"></text>
</g>
<g>
<title>inet6_sendmsg (55 samples, 7.48%)</title><rect x="640.9" y="563.0" width="88.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="643.9" y="574.0">inet6_send..</text>
</g>
<g>
<title>tcp_sendmsg (55 samples, 7.48%)</title><rect x="640.9" y="547.0" width="88.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="643.9" y="558.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.14%)</title><rect x="640.9" y="531.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="643.9" y="542.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.14%)</title><rect x="642.5" y="531.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="645.5" y="542.0"></text>
</g>
<g>
<title>__release_sock (1 samples, 0.14%)</title><rect x="642.5" y="515.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="645.5" y="526.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.14%)</title><rect x="642.5" y="499.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="645.5" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.14%)</title><rect x="642.5" y="483.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="645.5" y="494.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.14%)</title><rect x="642.5" y="467.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="645.5" y="478.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.14%)</title><rect x="642.5" y="451.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="645.5" y="462.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.14%)</title><rect x="642.5" y="435.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="645.5" y="446.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.14%)</title><rect x="642.5" y="419.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="645.5" y="430.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.14%)</title><rect x="642.5" y="403.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="645.5" y="414.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.14%)</title><rect x="644.1" y="531.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="647.1" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (51 samples, 6.94%)</title><rect x="645.8" y="531.0" width="81.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="648.8" y="542.0">tcp_sendm..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.14%)</title><rect x="649.0" y="515.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="652.0" y="526.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.14%)</title><rect x="649.0" y="499.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="652.0" y="510.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.14%)</title><rect x="650.6" y="515.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="653.6" y="526.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.14%)</title><rect x="652.2" y="515.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="655.2" y="526.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.14%)</title><rect x="652.2" y="499.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="655.2" y="510.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (10 samples, 1.36%)</title><rect x="653.8" y="515.0" width="16.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="656.8" y="526.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 1.09%)</title><rect x="655.4" y="499.0" width="12.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="658.4" y="510.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (5 samples, 0.68%)</title><rect x="655.4" y="483.0" width="8.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="658.4" y="494.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.68%)</title><rect x="655.4" y="467.0" width="8.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="658.4" y="478.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.14%)</title><rect x="660.2" y="451.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="663.2" y="462.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.14%)</title><rect x="661.8" y="451.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="664.8" y="462.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.14%)</title><rect x="663.4" y="483.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="666.4" y="494.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.27%)</title><rect x="665.0" y="483.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="668.0" y="494.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.27%)</title><rect x="665.0" y="467.0" width="3.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="668.0" y="478.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.14%)</title><rect x="668.2" y="499.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="671.2" y="510.0"></text>
</g>
<g>
<title>tcp_push (35 samples, 4.76%)</title><rect x="669.8" y="515.0" width="56.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="672.8" y="526.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (35 samples, 4.76%)</title><rect x="669.8" y="499.0" width="56.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="672.8" y="510.0">__tcp_..</text>
</g>
<g>
<title>tcp_write_xmit (35 samples, 4.76%)</title><rect x="669.8" y="483.0" width="56.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="672.8" y="494.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (31 samples, 4.22%)</title><rect x="669.8" y="467.0" width="49.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="672.8" y="478.0">__tcp..</text>
</g>
<g>
<title>ip_queue_xmit (29 samples, 3.95%)</title><rect x="673.0" y="451.0" width="46.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="676.0" y="462.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (28 samples, 3.81%)</title><rect x="673.0" y="435.0" width="45.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="676.0" y="446.0">__ip..</text>
</g>
<g>
<title>ip_local_out (25 samples, 3.40%)</title><rect x="674.7" y="419.0" width="40.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="677.7" y="430.0">ip_..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.14%)</title><rect x="674.7" y="403.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="677.7" y="414.0"></text>
</g>
<g>
<title>ip_output (24 samples, 3.27%)</title><rect x="676.3" y="403.0" width="38.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="679.3" y="414.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (24 samples, 3.27%)</title><rect x="676.3" y="387.0" width="38.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="679.3" y="398.0">ip_..</text>
</g>
<g>
<title>__ip_finish_output (24 samples, 3.27%)</title><rect x="676.3" y="371.0" width="38.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="679.3" y="382.0">__i..</text>
</g>
<g>
<title>ip_finish_output2 (24 samples, 3.27%)</title><rect x="676.3" y="355.0" width="38.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="679.3" y="366.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (21 samples, 2.86%)</title><rect x="676.3" y="339.0" width="33.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="679.3" y="350.0">__..</text>
</g>
<g>
<title>do_softirq.part.0 (21 samples, 2.86%)</title><rect x="676.3" y="323.0" width="33.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="679.3" y="334.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (21 samples, 2.86%)</title><rect x="676.3" y="307.0" width="33.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="679.3" y="318.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (21 samples, 2.86%)</title><rect x="676.3" y="291.0" width="33.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="679.3" y="302.0">__..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.14%)</title><rect x="676.3" y="275.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="679.3" y="286.0"></text>
</g>
<g>
<title>net_rx_action (19 samples, 2.59%)</title><rect x="677.9" y="275.0" width="30.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="680.9" y="286.0">ne..</text>
</g>
<g>
<title>process_backlog (18 samples, 2.45%)</title><rect x="679.5" y="259.0" width="28.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="682.5" y="270.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (17 samples, 2.31%)</title><rect x="681.1" y="243.0" width="27.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="684.1" y="254.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (17 samples, 2.31%)</title><rect x="681.1" y="227.0" width="27.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="684.1" y="238.0">_..</text>
</g>
<g>
<title>ip_rcv (17 samples, 2.31%)</title><rect x="681.1" y="211.0" width="27.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="684.1" y="222.0">i..</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.14%)</title><rect x="681.1" y="195.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="684.1" y="206.0"></text>
</g>
<g>
<title>ip_rcv_finish (16 samples, 2.18%)</title><rect x="682.7" y="195.0" width="25.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="685.7" y="206.0">i..</text>
</g>
<g>
<title>ip_local_deliver (16 samples, 2.18%)</title><rect x="682.7" y="179.0" width="25.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="685.7" y="190.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (15 samples, 2.04%)</title><rect x="684.3" y="163.0" width="24.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="687.3" y="174.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (15 samples, 2.04%)</title><rect x="684.3" y="147.0" width="24.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="687.3" y="158.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (15 samples, 2.04%)</title><rect x="684.3" y="131.0" width="24.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="687.3" y="142.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.14%)</title><rect x="684.3" y="115.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="687.3" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.14%)</title><rect x="685.9" y="115.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="688.9" y="126.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.14%)</title><rect x="685.9" y="99.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="688.9" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (13 samples, 1.77%)</title><rect x="687.5" y="115.0" width="20.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="690.5" y="126.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.14%)</title><rect x="687.5" y="99.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="690.5" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (12 samples, 1.63%)</title><rect x="689.1" y="99.0" width="19.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="692.1" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (10 samples, 1.36%)</title><rect x="690.7" y="83.0" width="16.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="693.7" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (10 samples, 1.36%)</title><rect x="690.7" y="67.0" width="16.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="693.7" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 1.36%)</title><rect x="690.7" y="51.0" width="16.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="693.7" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 1.36%)</title><rect x="690.7" y="35.0" width="16.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="693.7" y="46.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.14%)</title><rect x="706.8" y="83.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="709.8" y="94.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.14%)</title><rect x="708.4" y="275.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="711.4" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.41%)</title><rect x="710.0" y="339.0" width="4.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="713.0" y="350.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.41%)</title><rect x="710.0" y="323.0" width="4.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="713.0" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.14%)</title><rect x="710.0" y="307.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="713.0" y="318.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.14%)</title><rect x="711.6" y="307.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="714.6" y="318.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.14%)</title><rect x="713.2" y="307.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="716.2" y="318.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.14%)</title><rect x="713.2" y="291.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="716.2" y="302.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.14%)</title><rect x="713.2" y="275.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="716.2" y="286.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.27%)</title><rect x="714.8" y="419.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="717.8" y="430.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.14%)</title><rect x="718.0" y="435.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="721.0" y="446.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.14%)</title><rect x="719.6" y="467.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="722.6" y="478.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.14%)</title><rect x="721.2" y="467.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="724.2" y="478.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.14%)</title><rect x="722.8" y="467.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="725.8" y="478.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.14%)</title><rect x="724.4" y="467.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="727.4" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.14%)</title><rect x="724.4" y="451.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="727.4" y="462.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.14%)</title><rect x="724.4" y="435.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="727.4" y="446.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.14%)</title><rect x="724.4" y="419.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="727.4" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.14%)</title><rect x="724.4" y="403.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="727.4" y="414.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.14%)</title><rect x="726.0" y="515.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="729.0" y="526.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.14%)</title><rect x="727.6" y="531.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="730.6" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.27%)</title><rect x="729.2" y="563.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="732.2" y="574.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.14%)</title><rect x="730.8" y="547.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="733.8" y="558.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.14%)</title><rect x="730.8" y="531.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="733.8" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.54%)</title><rect x="732.4" y="579.0" width="6.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="735.4" y="590.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.41%)</title><rect x="732.4" y="563.0" width="4.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="735.4" y="574.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.41%)</title><rect x="732.4" y="547.0" width="4.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="735.4" y="558.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.41%)</title><rect x="732.4" y="531.0" width="4.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="735.4" y="542.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.14%)</title><rect x="737.3" y="563.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="740.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.54%)</title><rect x="738.9" y="739.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="741.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.27%)</title><rect x="742.1" y="723.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="745.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.27%)</title><rect x="742.1" y="707.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.1" y="718.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (270 samples, 36.73%)</title><rect x="745.3" y="867.0" width="433.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="748.3" y="878.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.41%)</title><rect x="748.5" y="851.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="751.5" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.41%)</title><rect x="748.5" y="835.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="751.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.41%)</title><rect x="748.5" y="819.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="751.5" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (51 samples, 6.94%)</title><rect x="753.3" y="851.0" width="81.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.3" y="862.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (51 samples, 6.94%)</title><rect x="753.3" y="835.0" width="81.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="756.3" y="846.0">one/nio/n..</text>
</g>
<g>
<title>clock_gettime (3 samples, 0.41%)</title><rect x="759.7" y="819.0" width="4.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="762.7" y="830.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.14%)</title><rect x="763.0" y="803.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="766.0" y="814.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.14%)</title><rect x="763.0" y="787.0" width="1.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="766.0" y="798.0"></text>
</g>
<g>
<title>epoll_wait (44 samples, 5.99%)</title><rect x="764.6" y="819.0" width="70.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="767.6" y="830.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 4.63%)</title><rect x="780.6" y="803.0" width="54.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="783.6" y="814.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (34 samples, 4.63%)</title><rect x="780.6" y="787.0" width="54.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="783.6" y="798.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (31 samples, 4.22%)</title><rect x="785.4" y="771.0" width="49.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="788.4" y="782.0">__x64..</text>
</g>
<g>
<title>do_epoll_wait (31 samples, 4.22%)</title><rect x="785.4" y="755.0" width="49.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="788.4" y="766.0">do_ep..</text>
</g>
<g>
<title>__fdget (3 samples, 0.41%)</title><rect x="785.4" y="739.0" width="4.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="788.4" y="750.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.41%)</title><rect x="785.4" y="723.0" width="4.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="788.4" y="734.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.41%)</title><rect x="785.4" y="707.0" width="4.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="788.4" y="718.0"></text>
</g>
<g>
<title>ep_poll (27 samples, 3.67%)</title><rect x="790.2" y="739.0" width="43.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="793.2" y="750.0">ep_p..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (23 samples, 3.13%)</title><rect x="793.5" y="723.0" width="36.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="796.5" y="734.0">ep_..</text>
</g>
<g>
<title>ep_send_events_proc (20 samples, 2.72%)</title><rect x="795.1" y="707.0" width="32.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="798.1" y="718.0">ep..</text>
</g>
<g>
<title>ep_item_poll.isra.0 (11 samples, 1.50%)</title><rect x="804.7" y="691.0" width="17.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="807.7" y="702.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.68%)</title><rect x="814.3" y="675.0" width="8.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="817.3" y="686.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.41%)</title><rect x="822.4" y="691.0" width="4.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="825.4" y="702.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.27%)</title><rect x="827.2" y="707.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="830.2" y="718.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.14%)</title><rect x="830.4" y="723.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="833.4" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.14%)</title><rect x="832.0" y="723.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="835.0" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.14%)</title><rect x="832.0" y="707.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="835.0" y="718.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.14%)</title><rect x="832.0" y="691.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="835.0" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.14%)</title><rect x="832.0" y="675.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="835.0" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="832.0" y="659.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="835.0" y="670.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.14%)</title><rect x="833.6" y="739.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="836.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (214 samples, 29.12%)</title><rect x="835.2" y="851.0" width="343.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="838.2" y="862.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (213 samples, 28.98%)</title><rect x="836.8" y="835.0" width="342.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.8" y="846.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (90 samples, 12.24%)</title><rect x="836.8" y="819.0" width="144.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="839.8" y="830.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (64 samples, 8.71%)</title><rect x="840.0" y="803.0" width="102.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="843.0" y="814.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (64 samples, 8.71%)</title><rect x="840.0" y="787.0" width="102.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="843.0" y="798.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (61 samples, 8.30%)</title><rect x="840.0" y="771.0" width="97.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="843.0" y="782.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.27%)</title><rect x="840.0" y="755.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="843.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.entity (59 samples, 8.03%)</title><rect x="843.2" y="755.0" width="94.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="846.2" y="766.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.scheduleGetEntity (1 samples, 0.14%)</title><rect x="843.2" y="739.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="846.2" y="750.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (1 samples, 0.14%)</title><rect x="843.2" y="723.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="846.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.14%)</title><rect x="843.2" y="707.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="846.2" y="718.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (1 samples, 0.14%)</title><rect x="843.2" y="691.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.2" y="702.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (1 samples, 0.14%)</title><rect x="843.2" y="675.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="846.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (1 samples, 0.14%)</title><rect x="843.2" y="659.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="846.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.14%)</title><rect x="843.2" y="643.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="846.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.schedulePutEntity (53 samples, 7.21%)</title><rect x="844.8" y="739.0" width="85.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="847.8" y="750.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (53 samples, 7.21%)</title><rect x="844.8" y="723.0" width="85.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="847.8" y="734.0">one/nio/se..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (53 samples, 7.21%)</title><rect x="844.8" y="707.0" width="85.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="847.8" y="718.0">java/util/..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (53 samples, 7.21%)</title><rect x="844.8" y="691.0" width="85.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="847.8" y="702.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (53 samples, 7.21%)</title><rect x="844.8" y="675.0" width="85.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="847.8" y="686.0">one/nio/se..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (53 samples, 7.21%)</title><rect x="844.8" y="659.0" width="85.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="847.8" y="670.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (47 samples, 6.39%)</title><rect x="854.5" y="643.0" width="75.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="857.5" y="654.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (46 samples, 6.26%)</title><rect x="854.5" y="627.0" width="73.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="857.5" y="638.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (46 samples, 6.26%)</title><rect x="854.5" y="611.0" width="73.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="857.5" y="622.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (43 samples, 5.85%)</title><rect x="859.3" y="595.0" width="69.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="862.3" y="606.0">jdk/int..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.14%)</title><rect x="859.3" y="579.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="862.3" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.14%)</title><rect x="859.3" y="563.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="862.3" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.14%)</title><rect x="859.3" y="547.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="862.3" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.14%)</title><rect x="859.3" y="531.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="862.3" y="542.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.14%)</title><rect x="859.3" y="515.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="862.3" y="526.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.14%)</title><rect x="859.3" y="499.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="862.3" y="510.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.14%)</title><rect x="859.3" y="483.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="862.3" y="494.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.14%)</title><rect x="860.9" y="579.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="863.9" y="590.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.95%)</title><rect x="862.5" y="579.0" width="11.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="865.5" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.14%)</title><rect x="864.1" y="563.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="867.1" y="574.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.14%)</title><rect x="865.7" y="563.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="868.7" y="574.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.14%)</title><rect x="867.3" y="563.0" width="1.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="870.3" y="574.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.14%)</title><rect x="868.9" y="563.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="871.9" y="574.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.27%)</title><rect x="870.5" y="563.0" width="3.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="873.5" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (34 samples, 4.63%)</title><rect x="873.7" y="579.0" width="54.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="876.7" y="590.0">__pth..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 4.22%)</title><rect x="878.5" y="563.0" width="49.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="881.5" y="574.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (31 samples, 4.22%)</title><rect x="878.5" y="547.0" width="49.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="881.5" y="558.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_futex (29 samples, 3.95%)</title><rect x="881.8" y="531.0" width="46.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="884.8" y="542.0">__x6..</text>
</g>
<g>
<title>do_futex (29 samples, 3.95%)</title><rect x="881.8" y="515.0" width="46.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="884.8" y="526.0">do_f..</text>
</g>
<g>
<title>futex_wake (29 samples, 3.95%)</title><rect x="881.8" y="499.0" width="46.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="884.8" y="510.0">fute..</text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.14%)</title><rect x="888.2" y="483.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="891.2" y="494.0"></text>
</g>
<g>
<title>wake_up_q (24 samples, 3.27%)</title><rect x="889.8" y="483.0" width="38.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="892.8" y="494.0">wak..</text>
</g>
<g>
<title>try_to_wake_up (24 samples, 3.27%)</title><rect x="889.8" y="467.0" width="38.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="892.8" y="478.0">try..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (24 samples, 3.27%)</title><rect x="889.8" y="451.0" width="38.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="892.8" y="462.0">_ra..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (1 samples, 0.14%)</title><rect x="928.3" y="627.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="931.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ResponseUtils.isProxied (5 samples, 0.68%)</title><rect x="929.9" y="739.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="932.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.68%)</title><rect x="929.9" y="723.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="932.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.54%)</title><rect x="931.5" y="707.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="934.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.54%)</title><rect x="931.5" y="691.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="934.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.41%)</title><rect x="937.9" y="771.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="940.9" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.41%)</title><rect x="937.9" y="755.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="940.9" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.27%)</title><rect x="937.9" y="739.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="940.9" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.14%)</title><rect x="941.2" y="739.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="944.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.14%)</title><rect x="941.2" y="723.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="944.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.14%)</title><rect x="941.2" y="707.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="944.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.95%)</title><rect x="942.8" y="803.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="945.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.41%)</title><rect x="944.4" y="787.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="947.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.41%)</title><rect x="944.4" y="771.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="947.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.41%)</title><rect x="944.4" y="755.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="947.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.41%)</title><rect x="944.4" y="739.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.14%)</title><rect x="947.6" y="723.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="950.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.27%)</title><rect x="949.2" y="787.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="952.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.27%)</title><rect x="949.2" y="771.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="952.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.14%)</title><rect x="952.4" y="787.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="955.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1 samples, 0.14%)</title><rect x="952.4" y="771.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="955.4" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.14%)</title><rect x="952.4" y="755.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="955.4" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.14%)</title><rect x="952.4" y="739.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="955.4" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.14%)</title><rect x="952.4" y="723.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="955.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.54%)</title><rect x="954.0" y="803.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="957.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.27%)</title><rect x="955.6" y="787.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="958.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.14%)</title><rect x="958.8" y="787.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="961.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.14%)</title><rect x="958.8" y="771.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="961.8" y="782.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.14%)</title><rect x="958.8" y="755.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="961.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 1.77%)</title><rect x="960.4" y="803.0" width="20.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="963.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.95%)</title><rect x="970.1" y="787.0" width="11.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="973.1" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (123 samples, 16.73%)</title><rect x="981.3" y="819.0" width="197.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="984.3" y="830.0">one/nio/net/Session.read</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (119 samples, 16.19%)</title><rect x="982.9" y="803.0" width="191.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="985.9" y="814.0">one/nio/net/NativeSocket...</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.41%)</title><rect x="984.5" y="787.0" width="4.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="987.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 2.18%)</title><rect x="989.3" y="787.0" width="25.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="992.3" y="798.0">[..</text>
</g>
<g>
<title>[unknown] (16 samples, 2.18%)</title><rect x="989.3" y="771.0" width="25.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="992.3" y="782.0">[..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (14 samples, 1.90%)</title><rect x="989.3" y="755.0" width="22.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="992.3" y="766.0">J..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (1 samples, 0.14%)</title><rect x="990.9" y="739.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="993.9" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.27%)</title><rect x="992.5" y="739.0" width="3.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="995.5" y="750.0"></text>
</g>
<g>
<title>_init (1 samples, 0.14%)</title><rect x="995.7" y="739.0" width="1.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="998.7" y="750.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.14%)</title><rect x="995.7" y="723.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="998.7" y="734.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.14%)</title><rect x="995.7" y="707.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="998.7" y="718.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.14%)</title><rect x="995.7" y="691.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="998.7" y="702.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.14%)</title><rect x="995.7" y="675.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="998.7" y="686.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.14%)</title><rect x="995.7" y="659.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="998.7" y="670.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.14%)</title><rect x="995.7" y="643.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="998.7" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.14%)</title><rect x="995.7" y="627.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="998.7" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.95%)</title><rect x="997.3" y="739.0" width="11.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1000.3" y="750.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.14%)</title><rect x="997.3" y="723.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1000.3" y="734.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.14%)</title><rect x="999.0" y="723.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1002.0" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.14%)</title><rect x="1000.6" y="723.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1003.6" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.54%)</title><rect x="1002.2" y="723.0" width="6.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1005.2" y="734.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.41%)</title><rect x="1003.8" y="707.0" width="4.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1006.8" y="718.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (2 samples, 0.27%)</title><rect x="1008.6" y="739.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1011.6" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.27%)</title><rect x="1011.8" y="755.0" width="3.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1014.8" y="766.0"></text>
</g>
<g>
<title>__libc_recv (99 samples, 13.47%)</title><rect x="1015.0" y="787.0" width="158.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1018.0" y="798.0">__libc_recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (88 samples, 11.97%)</title><rect x="1032.7" y="771.0" width="141.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1035.7" y="782.0">entry_SYSCALL_64_a..</text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.27%)</title><rect x="1032.7" y="755.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1035.7" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (86 samples, 11.70%)</title><rect x="1035.9" y="755.0" width="138.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1038.9" y="766.0">do_syscall_64</text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.14%)</title><rect x="1037.5" y="739.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1040.5" y="750.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (84 samples, 11.43%)</title><rect x="1039.1" y="739.0" width="134.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1042.1" y="750.0">__x64_sys_recvfrom</text>
</g>
<g>
<title>__sys_recvfrom (82 samples, 11.16%)</title><rect x="1039.1" y="723.0" width="131.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1042.1" y="734.0">__sys_recvfrom</text>
</g>
<g>
<title>sock_recvmsg (76 samples, 10.34%)</title><rect x="1040.7" y="707.0" width="122.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1043.7" y="718.0">sock_recvmsg</text>
</g>
<g>
<title>inet6_recvmsg (72 samples, 9.80%)</title><rect x="1040.7" y="691.0" width="115.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1043.7" y="702.0">inet6_recvmsg</text>
</g>
<g>
<title>tcp_recvmsg (72 samples, 9.80%)</title><rect x="1040.7" y="675.0" width="115.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1043.7" y="686.0">tcp_recvmsg</text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.27%)</title><rect x="1047.1" y="659.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1050.1" y="670.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.14%)</title><rect x="1047.1" y="643.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1050.1" y="654.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.14%)</title><rect x="1048.7" y="643.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1051.7" y="654.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.14%)</title><rect x="1048.7" y="627.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1051.7" y="638.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.54%)</title><rect x="1050.3" y="659.0" width="6.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1053.3" y="670.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.54%)</title><rect x="1050.3" y="643.0" width="6.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1053.3" y="654.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.27%)</title><rect x="1053.5" y="627.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1056.5" y="638.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.27%)</title><rect x="1053.5" y="611.0" width="3.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1056.5" y="622.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.27%)</title><rect x="1053.5" y="595.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1056.5" y="606.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (61 samples, 8.30%)</title><rect x="1056.7" y="659.0" width="98.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1059.7" y="670.0">tcp_cleanup..</text>
</g>
<g>
<title>tcp_send_ack (61 samples, 8.30%)</title><rect x="1056.7" y="643.0" width="98.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1059.7" y="654.0">tcp_send_ack</text>
</g>
<g>
<title>__tcp_send_ack.part.0 (60 samples, 8.16%)</title><rect x="1056.7" y="627.0" width="96.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1059.7" y="638.0">__tcp_send_..</text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.41%)</title><rect x="1058.4" y="611.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1061.4" y="622.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.41%)</title><rect x="1058.4" y="595.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1061.4" y="606.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.27%)</title><rect x="1058.4" y="579.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1061.4" y="590.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.14%)</title><rect x="1060.0" y="563.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1063.0" y="574.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.14%)</title><rect x="1061.6" y="579.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1064.6" y="590.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (54 samples, 7.35%)</title><rect x="1063.2" y="611.0" width="86.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1066.2" y="622.0">__tcp_tran..</text>
</g>
<g>
<title>ip_queue_xmit (52 samples, 7.07%)</title><rect x="1066.4" y="595.0" width="83.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1069.4" y="606.0">ip_queue_..</text>
</g>
<g>
<title>__ip_queue_xmit (51 samples, 6.94%)</title><rect x="1066.4" y="579.0" width="81.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1069.4" y="590.0">__ip_queu..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.14%)</title><rect x="1068.0" y="563.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1071.0" y="574.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.14%)</title><rect x="1068.0" y="547.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1071.0" y="558.0"></text>
</g>
<g>
<title>ip_local_out (49 samples, 6.67%)</title><rect x="1069.6" y="563.0" width="78.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1072.6" y="574.0">ip_local_..</text>
</g>
<g>
<title>ip_output (48 samples, 6.53%)</title><rect x="1071.2" y="547.0" width="77.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1074.2" y="558.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.14%)</title><rect x="1072.8" y="531.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1075.8" y="542.0"></text>
</g>
<g>
<title>ip_finish_output (46 samples, 6.26%)</title><rect x="1074.4" y="531.0" width="73.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1077.4" y="542.0">ip_finis..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.54%)</title><rect x="1074.4" y="515.0" width="6.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1077.4" y="526.0"></text>
</g>
<g>
<title>__ip_finish_output (42 samples, 5.71%)</title><rect x="1080.8" y="515.0" width="67.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1083.8" y="526.0">__ip_fi..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.14%)</title><rect x="1080.8" y="499.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1083.8" y="510.0"></text>
</g>
<g>
<title>ip_finish_output2 (41 samples, 5.58%)</title><rect x="1082.4" y="499.0" width="65.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1085.4" y="510.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (34 samples, 4.63%)</title><rect x="1084.0" y="483.0" width="54.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1087.0" y="494.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (34 samples, 4.63%)</title><rect x="1084.0" y="467.0" width="54.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1087.0" y="478.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (33 samples, 4.49%)</title><rect x="1085.6" y="451.0" width="53.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1088.6" y="462.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (33 samples, 4.49%)</title><rect x="1085.6" y="435.0" width="53.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1088.6" y="446.0">__sof..</text>
</g>
<g>
<title>net_rx_action (32 samples, 4.35%)</title><rect x="1087.3" y="419.0" width="51.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1090.3" y="430.0">net_r..</text>
</g>
<g>
<title>process_backlog (31 samples, 4.22%)</title><rect x="1088.9" y="403.0" width="49.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1091.9" y="414.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (30 samples, 4.08%)</title><rect x="1090.5" y="387.0" width="48.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1093.5" y="398.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (30 samples, 4.08%)</title><rect x="1090.5" y="371.0" width="48.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1093.5" y="382.0">__ne..</text>
</g>
<g>
<title>ip_rcv (30 samples, 4.08%)</title><rect x="1090.5" y="355.0" width="48.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1093.5" y="366.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (30 samples, 4.08%)</title><rect x="1090.5" y="339.0" width="48.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1093.5" y="350.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (30 samples, 4.08%)</title><rect x="1090.5" y="323.0" width="48.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1093.5" y="334.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (30 samples, 4.08%)</title><rect x="1090.5" y="307.0" width="48.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1093.5" y="318.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (30 samples, 4.08%)</title><rect x="1090.5" y="291.0" width="48.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1093.5" y="302.0">ip_p..</text>
</g>
<g>
<title>tcp_v4_rcv (30 samples, 4.08%)</title><rect x="1090.5" y="275.0" width="48.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1093.5" y="286.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.41%)</title><rect x="1093.7" y="259.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1096.7" y="270.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.14%)</title><rect x="1098.5" y="259.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1101.5" y="270.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.14%)</title><rect x="1098.5" y="243.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1101.5" y="254.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (24 samples, 3.27%)</title><rect x="1100.1" y="259.0" width="38.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1103.1" y="270.0">tcp..</text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.41%)</title><rect x="1100.1" y="243.0" width="4.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1103.1" y="254.0"></text>
</g>
<g>
<title>tcp_rcv_established (21 samples, 2.86%)</title><rect x="1104.9" y="243.0" width="33.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1107.9" y="254.0">tc..</text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.27%)</title><rect x="1108.1" y="227.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1111.1" y="238.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.27%)</title><rect x="1108.1" y="211.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1111.1" y="222.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.27%)</title><rect x="1108.1" y="195.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1111.1" y="206.0"></text>
</g>
<g>
<title>tcp_ack (15 samples, 2.04%)</title><rect x="1111.3" y="227.0" width="24.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1114.3" y="238.0">t..</text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.14%)</title><rect x="1112.9" y="211.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1115.9" y="222.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.14%)</title><rect x="1114.5" y="211.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1117.5" y="222.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.14%)</title><rect x="1116.1" y="211.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1119.1" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 1.09%)</title><rect x="1117.8" y="211.0" width="12.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1120.8" y="222.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.68%)</title><rect x="1121.0" y="195.0" width="8.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1124.0" y="206.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.41%)</title><rect x="1121.0" y="179.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1124.0" y="190.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.41%)</title><rect x="1121.0" y="163.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1124.0" y="174.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.41%)</title><rect x="1121.0" y="147.0" width="4.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1124.0" y="158.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.27%)</title><rect x="1125.8" y="179.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1128.8" y="190.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.27%)</title><rect x="1125.8" y="163.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1128.8" y="174.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.14%)</title><rect x="1127.4" y="147.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1130.4" y="158.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.14%)</title><rect x="1127.4" y="131.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1130.4" y="142.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.14%)</title><rect x="1127.4" y="115.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1130.4" y="126.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.14%)</title><rect x="1129.0" y="195.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1132.0" y="206.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.14%)</title><rect x="1130.6" y="211.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1133.6" y="222.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.14%)</title><rect x="1132.2" y="211.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1135.2" y="222.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.14%)</title><rect x="1133.8" y="211.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1136.8" y="222.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.14%)</title><rect x="1135.4" y="227.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1138.4" y="238.0"></text>
</g>
<g>
<title>tcp_validate_incoming (1 samples, 0.14%)</title><rect x="1137.0" y="227.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1140.0" y="238.0"></text>
</g>
<g>
<title>dev_queue_xmit (6 samples, 0.82%)</title><rect x="1138.6" y="483.0" width="9.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1141.6" y="494.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.82%)</title><rect x="1138.6" y="467.0" width="9.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1141.6" y="478.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.54%)</title><rect x="1140.2" y="451.0" width="6.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1143.2" y="462.0"></text>
</g>
<g>
<title>__sock_wfree (1 samples, 0.14%)</title><rect x="1140.2" y="435.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1143.2" y="446.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.41%)</title><rect x="1141.8" y="435.0" width="4.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1144.8" y="446.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.14%)</title><rect x="1141.8" y="419.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1144.8" y="430.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.27%)</title><rect x="1143.4" y="419.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1146.4" y="430.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.27%)</title><rect x="1143.4" y="403.0" width="3.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1146.4" y="414.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.27%)</title><rect x="1143.4" y="387.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1146.4" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.14%)</title><rect x="1146.7" y="451.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1149.7" y="462.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.14%)</title><rect x="1146.7" y="435.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1149.7" y="446.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.14%)</title><rect x="1148.3" y="579.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1151.3" y="590.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.14%)</title><rect x="1149.9" y="611.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1152.9" y="622.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.14%)</title><rect x="1151.5" y="611.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1154.5" y="622.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.14%)</title><rect x="1153.1" y="627.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1156.1" y="638.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.14%)</title><rect x="1154.7" y="659.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1157.7" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.54%)</title><rect x="1156.3" y="691.0" width="6.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1159.3" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.41%)</title><rect x="1157.9" y="675.0" width="4.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1160.9" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.41%)</title><rect x="1157.9" y="659.0" width="4.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1160.9" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.68%)</title><rect x="1162.7" y="707.0" width="8.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1165.7" y="718.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.54%)</title><rect x="1162.7" y="691.0" width="6.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1165.7" y="702.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.54%)</title><rect x="1162.7" y="675.0" width="6.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1165.7" y="686.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.54%)</title><rect x="1162.7" y="659.0" width="6.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1165.7" y="670.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.14%)</title><rect x="1169.1" y="691.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1172.1" y="702.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.27%)</title><rect x="1170.7" y="723.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1173.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (3 samples, 0.41%)</title><rect x="1173.9" y="803.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1176.9" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.listen (3 samples, 0.41%)</title><rect x="1173.9" y="787.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1176.9" y="798.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.14%)</title><rect x="1177.2" y="771.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1180.2" y="782.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.14%)</title><rect x="1177.2" y="755.0" width="1.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1180.2" y="766.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.14%)</title><rect x="1177.2" y="739.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1180.2" y="750.0"></text>
</g>
<g>
<title>start_thread (7 samples, 0.95%)</title><rect x="1178.8" y="867.0" width="11.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1181.8" y="878.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (7 samples, 0.95%)</title><rect x="1178.8" y="851.0" width="11.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1181.8" y="862.0"></text>
</g>
<g>
<title>Thread::call_run() (7 samples, 0.95%)</title><rect x="1178.8" y="835.0" width="11.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.8" y="846.0"></text>
</g>
<g>
<title>GangWorker::loop() (7 samples, 0.95%)</title><rect x="1178.8" y="819.0" width="11.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1181.8" y="830.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (7 samples, 0.95%)</title><rect x="1178.8" y="803.0" width="11.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.8" y="814.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (7 samples, 0.95%)</title><rect x="1178.8" y="787.0" width="11.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.8" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (4 samples, 0.54%)</title><rect x="1178.8" y="771.0" width="6.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.8" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.41%)</title><rect x="1180.4" y="755.0" width="4.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.4" y="766.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.41%)</title><rect x="1185.2" y="771.0" width="4.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1188.2" y="782.0"></text>
</g>
</g>
</svg>
