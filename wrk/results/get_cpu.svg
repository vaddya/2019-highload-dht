<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1205"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1205"> </text>
<g id="frames">
<g>
<title>all (2,658 samples, 100.00%)</title><rect x="10.0" y="1171.0" width="1180.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="13.0" y="1182.0">all</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.30.so (1 samples, 0.04%)</title><rect x="10.0" y="1155.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="13.0" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.04%)</title><rect x="10.4" y="1155.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.4" y="1166.0"></text>
</g>
<g>
<title>Klass::klass_holder() const (1 samples, 0.04%)</title><rect x="10.9" y="1155.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.9" y="1166.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.08%)</title><rect x="11.3" y="1155.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="14.3" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.04%)</title><rect x="11.3" y="1139.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.3" y="1150.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="11.8" y="1139.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="14.8" y="1150.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="11.8" y="1123.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.8" y="1134.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="11.8" y="1107.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.8" y="1118.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="11.8" y="1091.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="14.8" y="1102.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (1 samples, 0.04%)</title><rect x="11.8" y="1075.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="14.8" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.08%)</title><rect x="12.2" y="1155.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.2" y="1166.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="12.7" y="1139.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.7" y="1150.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="12.7" y="1123.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="15.7" y="1134.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="12.7" y="1107.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.7" y="1118.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="12.7" y="1091.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="15.7" y="1102.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.04%)</title><rect x="12.7" y="1075.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.7" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (11 samples, 0.41%)</title><rect x="13.1" y="1155.0" width="4.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.1" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.30%)</title><rect x="14.4" y="1139.0" width="3.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="17.4" y="1150.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (7 samples, 0.26%)</title><rect x="14.4" y="1123.0" width="3.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="17.4" y="1134.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.23%)</title><rect x="14.4" y="1107.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="17.4" y="1118.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.04%)</title><rect x="14.4" y="1091.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="17.4" y="1102.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.04%)</title><rect x="14.4" y="1075.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="17.4" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.15%)</title><rect x="14.9" y="1091.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="17.9" y="1102.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (4 samples, 0.15%)</title><rect x="14.9" y="1075.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="17.9" y="1086.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (4 samples, 0.15%)</title><rect x="14.9" y="1059.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="17.9" y="1070.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (4 samples, 0.15%)</title><rect x="14.9" y="1043.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="17.9" y="1054.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (3 samples, 0.11%)</title><rect x="14.9" y="1027.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="17.9" y="1038.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.04%)</title><rect x="14.9" y="1011.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="17.9" y="1022.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.04%)</title><rect x="14.9" y="995.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="17.9" y="1006.0"></text>
</g>
<g>
<title>G1Policy::predict_yg_surv_rate(int, SurvRateGroup*) const (1 samples, 0.04%)</title><rect x="14.9" y="979.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="17.9" y="990.0"></text>
</g>
<g>
<title>OtherRegionsTable::occupied() const (2 samples, 0.08%)</title><rect x="15.3" y="1011.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="18.3" y="1022.0"></text>
</g>
<g>
<title>G1MonitoringSupport::update_eden_size() (1 samples, 0.04%)</title><rect x="16.2" y="1027.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="19.2" y="1038.0"></text>
</g>
<g>
<title>G1SurvivorRegions::length() const (1 samples, 0.04%)</title><rect x="16.2" y="1011.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="19.2" y="1022.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.04%)</title><rect x="16.7" y="1091.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="19.7" y="1102.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="17.1" y="1107.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="20.1" y="1118.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="17.5" y="1123.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="20.5" y="1134.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.04%)</title><rect x="18.0" y="1155.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="21.0" y="1166.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (18 samples, 0.68%)</title><rect x="18.4" y="1155.0" width="8.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="21.4" y="1166.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (18 samples, 0.68%)</title><rect x="18.4" y="1139.0" width="8.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="21.4" y="1150.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.04%)</title><rect x="18.4" y="1123.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="21.4" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (10 samples, 0.38%)</title><rect x="18.9" y="1123.0" width="4.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="21.9" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (6 samples, 0.23%)</title><rect x="18.9" y="1107.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="21.9" y="1118.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.15%)</title><rect x="21.5" y="1107.0" width="1.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="24.5" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (7 samples, 0.26%)</title><rect x="23.3" y="1123.0" width="3.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="26.3" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (6 samples, 0.23%)</title><rect x="23.3" y="1107.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="26.3" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (2 samples, 0.08%)</title><rect x="23.3" y="1091.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="26.3" y="1102.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="24.2" y="1091.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="27.2" y="1102.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.11%)</title><rect x="24.7" y="1091.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="27.7" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.08%)</title><rect x="25.1" y="1075.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="28.1" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.08%)</title><rect x="25.1" y="1059.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="28.1" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="25.5" y="1043.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="28.5" y="1054.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="25.5" y="1027.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="28.5" y="1038.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="25.5" y="1011.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="28.5" y="1022.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="26.0" y="1107.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="29.0" y="1118.0"></text>
</g>
<g>
<title>[not_walkable] (2 samples, 0.08%)</title><rect x="26.4" y="1155.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="29.4" y="1166.0"></text>
</g>
<g>
<title>[not_walkable_Java] (41 samples, 1.54%)</title><rect x="27.3" y="1155.0" width="18.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="30.3" y="1166.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="27.3" y="1139.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="30.3" y="1150.0"></text>
</g>
<g>
<title>G1CardTable::is_in_young(oopDesc*) const (1 samples, 0.04%)</title><rect x="27.3" y="1123.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="30.3" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="27.8" y="1139.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="30.8" y="1150.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.04%)</title><rect x="27.8" y="1123.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="30.8" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.08%)</title><rect x="28.2" y="1139.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="31.2" y="1150.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.04%)</title><rect x="28.6" y="1123.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="31.6" y="1134.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="29.1" y="1139.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="32.1" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.04%)</title><rect x="29.5" y="1139.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="32.5" y="1150.0"></text>
</g>
<g>
<title>clock_gettime (35 samples, 1.32%)</title><rect x="30.0" y="1139.0" width="15.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="33.0" y="1150.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.11%)</title><rect x="30.0" y="1123.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="33.0" y="1134.0"></text>
</g>
<g>
<title>clock_gettime (32 samples, 1.20%)</title><rect x="31.3" y="1123.0" width="14.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="34.3" y="1134.0"></text>
</g>
<g>
<title>[vdso] (27 samples, 1.02%)</title><rect x="33.5" y="1107.0" width="12.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="36.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.34%)</title><rect x="45.5" y="1155.0" width="4.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="48.5" y="1166.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.30.so (2 samples, 0.08%)</title><rect x="45.5" y="1139.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="48.5" y="1150.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.08%)</title><rect x="46.4" y="1139.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="49.4" y="1150.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (1 samples, 0.04%)</title><rect x="47.3" y="1139.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="50.3" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="47.3" y="1123.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="50.3" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="47.3" y="1107.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="50.3" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="47.3" y="1091.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="50.3" y="1102.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="47.3" y="1075.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="50.3" y="1086.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="47.3" y="1059.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="50.3" y="1070.0"></text>
</g>
<g>
<title>open (1 samples, 0.04%)</title><rect x="47.7" y="1139.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="50.7" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="47.7" y="1123.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="50.7" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="47.7" y="1107.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="50.7" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_openat (1 samples, 0.04%)</title><rect x="47.7" y="1091.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="50.7" y="1102.0"></text>
</g>
<g>
<title>do_sys_open (1 samples, 0.04%)</title><rect x="47.7" y="1075.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="50.7" y="1086.0"></text>
</g>
<g>
<title>do_filp_open (1 samples, 0.04%)</title><rect x="47.7" y="1059.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="50.7" y="1070.0"></text>
</g>
<g>
<title>path_openat (1 samples, 0.04%)</title><rect x="47.7" y="1043.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="50.7" y="1054.0"></text>
</g>
<g>
<title>alloc_empty_file (1 samples, 0.04%)</title><rect x="47.7" y="1027.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="50.7" y="1038.0"></text>
</g>
<g>
<title>__alloc_file (1 samples, 0.04%)</title><rect x="47.7" y="1011.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="50.7" y="1022.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.04%)</title><rect x="47.7" y="995.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="50.7" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (3 samples, 0.11%)</title><rect x="48.2" y="1139.0" width="1.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="51.2" y="1150.0"></text>
</g>
<g>
<title>[unknown_Java] (108 samples, 4.06%)</title><rect x="49.5" y="1155.0" width="48.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="52.5" y="1166.0">[unk..</text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (1 samples, 0.04%)</title><rect x="90.4" y="1139.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="93.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.11%)</title><rect x="90.8" y="1139.0" width="1.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="93.8" y="1150.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (3 samples, 0.11%)</title><rect x="90.8" y="1123.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="93.8" y="1134.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.15%)</title><rect x="92.1" y="1139.0" width="1.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="95.1" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.15%)</title><rect x="92.1" y="1123.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="95.1" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.15%)</title><rect x="92.1" y="1107.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="95.1" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.15%)</title><rect x="92.1" y="1091.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="95.1" y="1102.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.15%)</title><rect x="92.1" y="1075.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="95.1" y="1086.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.15%)</title><rect x="92.1" y="1059.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="95.1" y="1070.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.04%)</title><rect x="92.1" y="1043.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="95.1" y="1054.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.11%)</title><rect x="92.6" y="1043.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="95.6" y="1054.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.11%)</title><rect x="92.6" y="1027.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="95.6" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.11%)</title><rect x="92.6" y="1011.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="95.6" y="1022.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.30%)</title><rect x="93.9" y="1139.0" width="3.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="96.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,513 samples, 56.92%)</title><rect x="97.5" y="1155.0" width="671.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="100.5" y="1166.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,513 samples, 56.92%)</title><rect x="97.5" y="1139.0" width="671.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="100.5" y="1150.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,513 samples, 56.92%)</title><rect x="97.5" y="1123.0" width="671.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="100.5" y="1134.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (572 samples, 21.52%)</title><rect x="100.1" y="1107.0" width="254.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="103.1" y="1118.0">java/util/concurrent/CompletableFu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (5 samples, 0.19%)</title><rect x="101.0" y="1091.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="104.0" y="1102.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.11%)</title><rect x="101.5" y="1075.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="104.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$152/866147305.get (1 samples, 0.04%)</title><rect x="102.8" y="1075.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (273 samples, 10.27%)</title><rect x="103.2" y="1091.0" width="121.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="106.2" y="1102.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (271 samples, 10.20%)</title><rect x="103.2" y="1075.0" width="120.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="106.2" y="1086.0">java/util/concu..</text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="103.2" y="1059.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="106.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$150/1603050069.apply (270 samples, 10.16%)</title><rect x="103.7" y="1059.0" width="119.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="106.7" y="1070.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (269 samples, 10.12%)</title><rect x="104.1" y="1043.0" width="119.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="107.1" y="1054.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (269 samples, 10.12%)</title><rect x="104.1" y="1027.0" width="119.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.1" y="1038.0">jdk/internal/ne..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.08%)</title><rect x="104.1" y="1011.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="107.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.04%)</title><rect x="104.6" y="995.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="107.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (1 samples, 0.04%)</title><rect x="104.6" y="979.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="107.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.04%)</title><rect x="104.6" y="963.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (222 samples, 8.35%)</title><rect x="105.0" y="1011.0" width="98.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.0" y="1022.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (222 samples, 8.35%)</title><rect x="105.0" y="995.0" width="98.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.0" y="1006.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (222 samples, 8.35%)</title><rect x="105.0" y="979.0" width="98.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="108.0" y="990.0">jdk/internal..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (102 samples, 3.84%)</title><rect x="105.0" y="963.0" width="45.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.0" y="974.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (102 samples, 3.84%)</title><rect x="105.0" y="947.0" width="45.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="108.0" y="958.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (102 samples, 3.84%)</title><rect x="105.0" y="931.0" width="45.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="108.0" y="942.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$352/1505209664.apply (102 samples, 3.84%)</title><rect x="105.0" y="915.0" width="45.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="108.0" y="926.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (102 samples, 3.84%)</title><rect x="105.0" y="899.0" width="45.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.0" y="910.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (102 samples, 3.84%)</title><rect x="105.0" y="883.0" width="45.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.0" y="894.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$158/1087713702.apply (5 samples, 0.19%)</title><rect x="105.0" y="867.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (5 samples, 0.19%)</title><rect x="105.0" y="851.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="108.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (5 samples, 0.19%)</title><rect x="105.0" y="835.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (4 samples, 0.15%)</title><rect x="105.4" y="819.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (4 samples, 0.15%)</title><rect x="105.4" y="803.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.&lt;init&gt; (1 samples, 0.04%)</title><rect x="105.9" y="787.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.&lt;init&gt; (1 samples, 0.04%)</title><rect x="105.9" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (1 samples, 0.04%)</title><rect x="106.3" y="787.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="109.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (1 samples, 0.04%)</title><rect x="106.3" y="771.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="109.3" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="106.8" y="787.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="109.8" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="106.8" y="771.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="109.8" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="106.8" y="755.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="109.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$163/1625023506.apply (97 samples, 3.65%)</title><rect x="107.2" y="867.0" width="43.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="110.2" y="878.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (97 samples, 3.65%)</title><rect x="107.2" y="851.0" width="43.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="110.2" y="862.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.08%)</title><rect x="107.2" y="835.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.08%)</title><rect x="107.2" y="819.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (1 samples, 0.04%)</title><rect x="107.2" y="803.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.04%)</title><rect x="107.2" y="787.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="107.7" y="803.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="110.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="107.7" y="787.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (95 samples, 3.57%)</title><rect x="108.1" y="835.0" width="42.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="111.1" y="846.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (78 samples, 2.93%)</title><rect x="108.1" y="819.0" width="34.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="111.1" y="830.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (78 samples, 2.93%)</title><rect x="108.1" y="803.0" width="34.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="111.1" y="814.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$427/237799779.apply (77 samples, 2.90%)</title><rect x="108.6" y="787.0" width="34.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="111.6" y="798.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (77 samples, 2.90%)</title><rect x="108.6" y="771.0" width="34.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="111.6" y="782.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="109.0" y="755.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="112.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="109.0" y="739.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$469/399554666.get$Lambda (1 samples, 0.04%)</title><rect x="109.0" y="723.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="112.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.11%)</title><rect x="109.4" y="755.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="112.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.11%)</title><rect x="109.4" y="739.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="112.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.04%)</title><rect x="109.4" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="112.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.04%)</title><rect x="109.4" y="707.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="112.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.04%)</title><rect x="109.4" y="691.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="109.4" y="675.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="112.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.08%)</title><rect x="109.9" y="723.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.08%)</title><rect x="109.9" y="707.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.08%)</title><rect x="109.9" y="691.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="112.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.08%)</title><rect x="109.9" y="675.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="112.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.08%)</title><rect x="109.9" y="659.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="112.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2 samples, 0.08%)</title><rect x="109.9" y="643.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="112.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.08%)</title><rect x="109.9" y="627.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.08%)</title><rect x="109.9" y="611.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (2 samples, 0.08%)</title><rect x="109.9" y="595.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="112.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (2 samples, 0.08%)</title><rect x="109.9" y="579.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="112.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (2 samples, 0.08%)</title><rect x="109.9" y="563.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="112.9" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (2 samples, 0.08%)</title><rect x="109.9" y="547.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="112.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.08%)</title><rect x="109.9" y="531.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="112.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.08%)</title><rect x="109.9" y="515.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.08%)</title><rect x="109.9" y="499.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="112.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (2 samples, 0.08%)</title><rect x="109.9" y="483.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="112.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (2 samples, 0.08%)</title><rect x="109.9" y="467.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="112.9" y="478.0"></text>
</g>
<g>
<title>writev (2 samples, 0.08%)</title><rect x="109.9" y="451.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="112.9" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.08%)</title><rect x="109.9" y="435.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="112.9" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.08%)</title><rect x="109.9" y="419.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="112.9" y="430.0"></text>
</g>
<g>
<title>__x64_sys_writev (2 samples, 0.08%)</title><rect x="109.9" y="403.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="112.9" y="414.0"></text>
</g>
<g>
<title>do_writev (2 samples, 0.08%)</title><rect x="109.9" y="387.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="112.9" y="398.0"></text>
</g>
<g>
<title>vfs_writev (2 samples, 0.08%)</title><rect x="109.9" y="371.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="112.9" y="382.0"></text>
</g>
<g>
<title>do_iter_write (2 samples, 0.08%)</title><rect x="109.9" y="355.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="112.9" y="366.0"></text>
</g>
<g>
<title>do_iter_readv_writev (2 samples, 0.08%)</title><rect x="109.9" y="339.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="112.9" y="350.0"></text>
</g>
<g>
<title>sock_write_iter (2 samples, 0.08%)</title><rect x="109.9" y="323.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="112.9" y="334.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.08%)</title><rect x="109.9" y="307.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="112.9" y="318.0"></text>
</g>
<g>
<title>inet6_sendmsg (2 samples, 0.08%)</title><rect x="109.9" y="291.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="112.9" y="302.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.08%)</title><rect x="109.9" y="275.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="112.9" y="286.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (2 samples, 0.08%)</title><rect x="109.9" y="259.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="112.9" y="270.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.04%)</title><rect x="109.9" y="243.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="112.9" y="254.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.04%)</title><rect x="109.9" y="227.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="112.9" y="238.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.04%)</title><rect x="109.9" y="211.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="112.9" y="222.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.04%)</title><rect x="109.9" y="195.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="112.9" y="206.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.04%)</title><rect x="109.9" y="179.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="112.9" y="190.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.04%)</title><rect x="109.9" y="163.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="112.9" y="174.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.04%)</title><rect x="109.9" y="147.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="112.9" y="158.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.04%)</title><rect x="109.9" y="131.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="112.9" y="142.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.04%)</title><rect x="109.9" y="115.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="112.9" y="126.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.04%)</title><rect x="109.9" y="99.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="112.9" y="110.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.04%)</title><rect x="109.9" y="83.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="112.9" y="94.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="110.3" y="243.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="113.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (19 samples, 0.71%)</title><rect x="110.8" y="755.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (19 samples, 0.71%)</title><rect x="110.8" y="739.0" width="8.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="113.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (2 samples, 0.08%)</title><rect x="110.8" y="723.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2 samples, 0.08%)</title><rect x="110.8" y="707.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2 samples, 0.08%)</title><rect x="110.8" y="691.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="113.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (17 samples, 0.64%)</title><rect x="111.7" y="723.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (17 samples, 0.64%)</title><rect x="111.7" y="707.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="114.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (17 samples, 0.64%)</title><rect x="111.7" y="691.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="114.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (16 samples, 0.60%)</title><rect x="112.1" y="675.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="115.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (16 samples, 0.60%)</title><rect x="112.1" y="659.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (15 samples, 0.56%)</title><rect x="112.6" y="643.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="115.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (15 samples, 0.56%)</title><rect x="112.6" y="627.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="115.6" y="638.0"></text>
</g>
<g>
<title>__write (15 samples, 0.56%)</title><rect x="112.6" y="611.0" width="6.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="115.6" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.45%)</title><rect x="113.9" y="595.0" width="5.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="116.9" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.45%)</title><rect x="113.9" y="579.0" width="5.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="116.9" y="590.0"></text>
</g>
<g>
<title>__x64_sys_write (12 samples, 0.45%)</title><rect x="113.9" y="563.0" width="5.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="116.9" y="574.0"></text>
</g>
<g>
<title>ksys_write (12 samples, 0.45%)</title><rect x="113.9" y="547.0" width="5.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="116.9" y="558.0"></text>
</g>
<g>
<title>vfs_write (12 samples, 0.45%)</title><rect x="113.9" y="531.0" width="5.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="116.9" y="542.0"></text>
</g>
<g>
<title>__vfs_write (11 samples, 0.41%)</title><rect x="114.3" y="515.0" width="4.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="117.3" y="526.0"></text>
</g>
<g>
<title>new_sync_write (11 samples, 0.41%)</title><rect x="114.3" y="499.0" width="4.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="117.3" y="510.0"></text>
</g>
<g>
<title>pipe_write (10 samples, 0.38%)</title><rect x="114.8" y="483.0" width="4.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="117.8" y="494.0"></text>
</g>
<g>
<title>__wake_up_sync_key (8 samples, 0.30%)</title><rect x="114.8" y="467.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="117.8" y="478.0"></text>
</g>
<g>
<title>__wake_up_common_lock (8 samples, 0.30%)</title><rect x="114.8" y="451.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="117.8" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.30%)</title><rect x="114.8" y="435.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="117.8" y="446.0"></text>
</g>
<g>
<title>copy_page_from_iter (2 samples, 0.08%)</title><rect x="118.3" y="467.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="121.3" y="478.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="118.8" y="451.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="121.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (53 samples, 1.99%)</title><rect x="119.2" y="755.0" width="23.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="122.2" y="766.0">j..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.08%)</title><rect x="119.2" y="739.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="122.2" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.08%)</title><rect x="119.2" y="723.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="122.2" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.08%)</title><rect x="119.2" y="707.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="122.2" y="718.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.08%)</title><rect x="120.1" y="739.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="123.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (32 samples, 1.20%)</title><rect x="121.0" y="739.0" width="14.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.0" y="750.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (1 samples, 0.04%)</title><rect x="121.0" y="723.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.0" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="121.0" y="707.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="124.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="121.0" y="691.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.0" y="702.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$479/1948513388.get$Lambda (1 samples, 0.04%)</title><rect x="121.0" y="675.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.0" y="686.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$479/1948513388.&lt;init&gt; (1 samples, 0.04%)</title><rect x="121.0" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (3 samples, 0.11%)</title><rect x="121.4" y="723.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="124.4" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.11%)</title><rect x="121.4" y="707.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="124.4" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.11%)</title><rect x="121.4" y="691.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.4" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.11%)</title><rect x="121.4" y="675.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.4" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.11%)</title><rect x="121.4" y="659.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.4" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.11%)</title><rect x="121.4" y="643.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="124.4" y="654.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.08%)</title><rect x="121.9" y="627.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="124.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.08%)</title><rect x="121.9" y="611.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.9" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.08%)</title><rect x="121.9" y="595.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (14 samples, 0.53%)</title><rect x="122.8" y="723.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.08%)</title><rect x="123.2" y="707.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.2" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.08%)</title><rect x="123.2" y="691.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="123.2" y="675.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.04%)</title><rect x="123.2" y="659.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="126.2" y="670.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="123.2" y="643.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="126.2" y="654.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="123.6" y="675.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="126.6" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext (1 samples, 0.04%)</title><rect x="124.1" y="707.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="127.1" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (2 samples, 0.08%)</title><rect x="124.5" y="707.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="127.5" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (2 samples, 0.08%)</title><rect x="124.5" y="691.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="127.5" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (2 samples, 0.08%)</title><rect x="124.5" y="675.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="127.5" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="124.5" y="659.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.5" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="124.5" y="643.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="127.5" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.04%)</title><rect x="125.0" y="659.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.0" y="670.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (2 samples, 0.08%)</title><rect x="125.4" y="707.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="128.4" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.&lt;init&gt; (1 samples, 0.04%)</title><rect x="125.4" y="691.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="128.4" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSet.&lt;init&gt; (1 samples, 0.04%)</title><rect x="125.4" y="675.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="128.4" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.&lt;init&gt; (1 samples, 0.04%)</title><rect x="125.4" y="659.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.4" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (1 samples, 0.04%)</title><rect x="125.9" y="691.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="128.9" y="702.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.04%)</title><rect x="126.3" y="707.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="129.3" y="718.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (1 samples, 0.04%)</title><rect x="126.3" y="691.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.3" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="126.3" y="675.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="129.3" y="686.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$479/1948513388.test (5 samples, 0.19%)</title><rect x="126.8" y="707.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.8" y="718.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (2 samples, 0.08%)</title><rect x="128.1" y="691.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$94/2068598972.test (2 samples, 0.08%)</title><rect x="128.1" y="675.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="131.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (2 samples, 0.08%)</title><rect x="128.1" y="659.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.1" y="670.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$83/477376212.test (2 samples, 0.08%)</title><rect x="128.1" y="643.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="131.1" y="654.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (2 samples, 0.08%)</title><rect x="128.1" y="627.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="131.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1072377306.test (1 samples, 0.04%)</title><rect x="128.1" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="131.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (1 samples, 0.04%)</title><rect x="128.1" y="595.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="131.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="128.1" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="128.1" y="563.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="131.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="128.1" y="547.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (1 samples, 0.04%)</title><rect x="128.5" y="611.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="131.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (14 samples, 0.53%)</title><rect x="129.0" y="723.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.0" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (14 samples, 0.53%)</title><rect x="129.0" y="707.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="132.0" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (14 samples, 0.53%)</title><rect x="129.0" y="691.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="132.0" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="129.0" y="675.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="132.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="129.0" y="659.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="132.0" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.get$Lambda (1 samples, 0.04%)</title><rect x="129.0" y="643.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="132.0" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (13 samples, 0.49%)</title><rect x="129.4" y="675.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.4" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.accept (12 samples, 0.45%)</title><rect x="129.9" y="659.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="132.9" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (12 samples, 0.45%)</title><rect x="129.9" y="643.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.9" y="654.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3 samples, 0.11%)</title><rect x="130.8" y="627.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.8" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (2 samples, 0.08%)</title><rect x="131.2" y="611.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.2" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (2 samples, 0.08%)</title><rect x="131.2" y="595.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.08%)</title><rect x="132.1" y="627.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.08%)</title><rect x="132.1" y="611.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="135.1" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.get$Lambda (2 samples, 0.08%)</title><rect x="132.1" y="595.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.1" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.&lt;init&gt; (2 samples, 0.08%)</title><rect x="132.1" y="579.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="135.1" y="590.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="132.1" y="563.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="135.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$79/361268035.test (1 samples, 0.04%)</title><rect x="132.5" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="135.5" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.04%)</title><rect x="133.0" y="627.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="136.0" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.accept (1 samples, 0.04%)</title><rect x="133.0" y="611.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="136.0" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.04%)</title><rect x="133.0" y="595.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.0" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="133.0" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.0" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="133.0" y="563.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="136.0" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="133.0" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.0" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="133.0" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="136.0" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.15%)</title><rect x="133.4" y="627.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.4" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.08%)</title><rect x="133.4" y="611.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="136.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.08%)</title><rect x="133.4" y="595.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.08%)</title><rect x="133.4" y="579.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="136.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.04%)</title><rect x="133.4" y="563.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="136.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.04%)</title><rect x="133.9" y="563.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="136.9" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.08%)</title><rect x="134.3" y="611.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="137.3" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (2 samples, 0.08%)</title><rect x="134.3" y="595.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="137.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (3 samples, 0.11%)</title><rect x="135.2" y="739.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="138.2" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1 samples, 0.04%)</title><rect x="135.2" y="723.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.2" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.stringSize (1 samples, 0.04%)</title><rect x="135.2" y="707.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.2" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.08%)</title><rect x="135.6" y="723.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="138.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (2 samples, 0.08%)</title><rect x="135.6" y="707.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1806431167.invoke (2 samples, 0.08%)</title><rect x="135.6" y="691.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.08%)</title><rect x="135.6" y="675.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.04%)</title><rect x="135.6" y="659.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.6" y="670.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="135.6" y="643.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="138.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.04%)</title><rect x="136.1" y="659.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="139.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.04%)</title><rect x="136.1" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (2 samples, 0.08%)</title><rect x="136.5" y="739.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="139.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.04%)</title><rect x="136.5" y="723.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="139.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (1 samples, 0.04%)</title><rect x="137.0" y="723.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.04%)</title><rect x="137.0" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (12 samples, 0.45%)</title><rect x="137.4" y="739.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="140.4" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="137.4" y="723.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="140.4" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="137.4" y="707.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.4" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="137.4" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.4" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="137.4" y="675.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="140.4" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="137.4" y="659.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="140.4" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.38%)</title><rect x="137.9" y="723.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="140.9" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (2 samples, 0.08%)</title><rect x="138.7" y="707.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="141.7" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.08%)</title><rect x="139.6" y="707.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="142.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.08%)</title><rect x="139.6" y="691.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="142.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.08%)</title><rect x="139.6" y="675.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="142.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.08%)</title><rect x="139.6" y="659.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.6" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.getChar (1 samples, 0.04%)</title><rect x="140.1" y="643.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="143.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (4 samples, 0.15%)</title><rect x="140.5" y="707.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.5" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (4 samples, 0.15%)</title><rect x="140.5" y="691.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="143.5" y="702.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="142.3" y="723.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="145.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (16 samples, 0.60%)</title><rect x="142.7" y="819.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="145.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (10 samples, 0.38%)</title><rect x="142.7" y="803.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.38%)</title><rect x="142.7" y="787.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.38%)</title><rect x="142.7" y="771.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="145.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10 samples, 0.38%)</title><rect x="142.7" y="755.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="145.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10 samples, 0.38%)</title><rect x="142.7" y="739.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="145.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (4 samples, 0.15%)</title><rect x="142.7" y="723.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (4 samples, 0.15%)</title><rect x="142.7" y="707.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (4 samples, 0.15%)</title><rect x="142.7" y="691.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="145.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.15%)</title><rect x="142.7" y="675.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="145.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$DataPair.&lt;init&gt; (2 samples, 0.08%)</title><rect x="142.7" y="659.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="145.7" y="670.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.04%)</title><rect x="143.2" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="146.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.08%)</title><rect x="143.6" y="659.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="146.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.04%)</title><rect x="143.6" y="643.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.04%)</title><rect x="143.6" y="627.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="146.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.04%)</title><rect x="143.6" y="611.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="146.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.04%)</title><rect x="144.1" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="147.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.04%)</title><rect x="144.1" y="627.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="147.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5 samples, 0.19%)</title><rect x="144.5" y="723.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="147.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.run (5 samples, 0.19%)</title><rect x="144.5" y="707.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="147.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5 samples, 0.19%)</title><rect x="144.5" y="691.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (1 samples, 0.04%)</title><rect x="145.0" y="675.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.04%)</title><rect x="145.0" y="659.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="148.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (1 samples, 0.04%)</title><rect x="145.4" y="675.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="148.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1 samples, 0.04%)</title><rect x="145.8" y="675.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.04%)</title><rect x="146.3" y="675.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.04%)</title><rect x="146.3" y="659.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="149.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.04%)</title><rect x="146.3" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$589/1973295159.run (1 samples, 0.04%)</title><rect x="146.3" y="627.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="149.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.04%)</title><rect x="146.3" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.04%)</title><rect x="146.7" y="723.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="149.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.04%)</title><rect x="146.7" y="707.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="149.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.04%)</title><rect x="146.7" y="691.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="149.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.run (1 samples, 0.04%)</title><rect x="146.7" y="675.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.04%)</title><rect x="146.7" y="659.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1 samples, 0.04%)</title><rect x="146.7" y="643.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (1 samples, 0.04%)</title><rect x="146.7" y="627.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (6 samples, 0.23%)</title><rect x="147.2" y="803.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connectAsync (1 samples, 0.04%)</title><rect x="149.8" y="819.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="152.8" y="830.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.04%)</title><rect x="149.8" y="803.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$407/1578380851.run (1 samples, 0.04%)</title><rect x="149.8" y="787.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="152.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.lambda$connectAsync$0 (1 samples, 0.04%)</title><rect x="149.8" y="771.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="152.8" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.connect (1 samples, 0.04%)</title><rect x="149.8" y="755.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="152.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (1 samples, 0.04%)</title><rect x="149.8" y="739.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="152.8" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect (1 samples, 0.04%)</title><rect x="149.8" y="723.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.8" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.connect0 (1 samples, 0.04%)</title><rect x="149.8" y="707.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="152.8" y="718.0"></text>
</g>
<g>
<title>__libc_connect (1 samples, 0.04%)</title><rect x="149.8" y="691.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="152.8" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="149.8" y="675.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="152.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="149.8" y="659.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="152.8" y="670.0"></text>
</g>
<g>
<title>__x64_sys_connect (1 samples, 0.04%)</title><rect x="149.8" y="643.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="152.8" y="654.0"></text>
</g>
<g>
<title>__sys_connect (1 samples, 0.04%)</title><rect x="149.8" y="627.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="152.8" y="638.0"></text>
</g>
<g>
<title>inet_stream_connect (1 samples, 0.04%)</title><rect x="149.8" y="611.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="152.8" y="622.0"></text>
</g>
<g>
<title>__inet_stream_connect (1 samples, 0.04%)</title><rect x="149.8" y="595.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="152.8" y="606.0"></text>
</g>
<g>
<title>tcp_v6_connect (1 samples, 0.04%)</title><rect x="149.8" y="579.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="152.8" y="590.0"></text>
</g>
<g>
<title>tcp_v4_connect (1 samples, 0.04%)</title><rect x="149.8" y="563.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="152.8" y="574.0"></text>
</g>
<g>
<title>tcp_connect (1 samples, 0.04%)</title><rect x="149.8" y="547.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="152.8" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.04%)</title><rect x="149.8" y="531.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="152.8" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.04%)</title><rect x="149.8" y="515.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="152.8" y="526.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.04%)</title><rect x="149.8" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="152.8" y="510.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.04%)</title><rect x="149.8" y="483.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="152.8" y="494.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.04%)</title><rect x="149.8" y="467.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="152.8" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.04%)</title><rect x="149.8" y="451.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="152.8" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.04%)</title><rect x="149.8" y="435.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="152.8" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.04%)</title><rect x="149.8" y="419.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="152.8" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="149.8" y="403.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="152.8" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.04%)</title><rect x="149.8" y="387.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="152.8" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.04%)</title><rect x="149.8" y="371.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="152.8" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="149.8" y="355.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="152.8" y="366.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.04%)</title><rect x="149.8" y="339.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="152.8" y="350.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.04%)</title><rect x="149.8" y="323.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="152.8" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.04%)</title><rect x="149.8" y="307.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="152.8" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.04%)</title><rect x="149.8" y="291.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="152.8" y="302.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.04%)</title><rect x="149.8" y="275.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="152.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.04%)</title><rect x="149.8" y="259.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="152.8" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.04%)</title><rect x="149.8" y="243.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="152.8" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.04%)</title><rect x="149.8" y="227.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="152.8" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.04%)</title><rect x="149.8" y="211.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="152.8" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.04%)</title><rect x="149.8" y="195.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="152.8" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.04%)</title><rect x="149.8" y="179.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="152.8" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (1 samples, 0.04%)</title><rect x="149.8" y="163.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="152.8" y="174.0"></text>
</g>
<g>
<title>tcp_v6_conn_request (1 samples, 0.04%)</title><rect x="149.8" y="147.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="152.8" y="158.0"></text>
</g>
<g>
<title>tcp_v4_conn_request (1 samples, 0.04%)</title><rect x="149.8" y="131.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="152.8" y="142.0"></text>
</g>
<g>
<title>tcp_conn_request (1 samples, 0.04%)</title><rect x="149.8" y="115.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="152.8" y="126.0"></text>
</g>
<g>
<title>tcp_v4_init_seq (1 samples, 0.04%)</title><rect x="149.8" y="99.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="152.8" y="110.0"></text>
</g>
<g>
<title>secure_tcp_seq (1 samples, 0.04%)</title><rect x="149.8" y="83.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="152.8" y="94.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="149.8" y="67.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="152.8" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (120 samples, 4.51%)</title><rect x="150.3" y="963.0" width="53.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="153.3" y="974.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.08%)</title><rect x="150.3" y="947.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.08%)</title><rect x="150.3" y="931.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$350/1291528467.apply (2 samples, 0.08%)</title><rect x="150.3" y="915.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="153.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (1 samples, 0.04%)</title><rect x="150.7" y="899.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="153.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkCancelled (1 samples, 0.04%)</title><rect x="150.7" y="883.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (14 samples, 0.53%)</title><rect x="151.2" y="947.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="154.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (14 samples, 0.53%)</title><rect x="151.2" y="931.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.04%)</title><rect x="151.2" y="915.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (1 samples, 0.04%)</title><rect x="151.2" y="899.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="154.2" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="151.2" y="883.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="154.2" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="151.2" y="867.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="154.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$293/1705122973.accept (1 samples, 0.04%)</title><rect x="151.2" y="851.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (13 samples, 0.49%)</title><rect x="151.6" y="915.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="154.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (13 samples, 0.49%)</title><rect x="151.6" y="899.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.6" y="910.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="155.6" y="883.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.6" y="894.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.04%)</title><rect x="156.1" y="883.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="159.1" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.08%)</title><rect x="156.5" y="883.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (104 samples, 3.91%)</title><rect x="157.4" y="947.0" width="46.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="160.4" y="958.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (99 samples, 3.72%)</title><rect x="157.4" y="931.0" width="43.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.4" y="942.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (99 samples, 3.72%)</title><rect x="157.4" y="915.0" width="43.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="160.4" y="926.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.&lt;init&gt; (1 samples, 0.04%)</title><rect x="157.4" y="899.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="160.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.04%)</title><rect x="157.4" y="883.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="160.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (98 samples, 3.69%)</title><rect x="157.8" y="899.0" width="43.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="160.8" y="910.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$184/1238990080.apply (97 samples, 3.65%)</title><rect x="158.3" y="883.0" width="43.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="161.3" y="894.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (97 samples, 3.65%)</title><rect x="158.3" y="867.0" width="43.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="161.3" y="878.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (97 samples, 3.65%)</title><rect x="158.3" y="851.0" width="43.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="161.3" y="862.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (46 samples, 1.73%)</title><rect x="162.3" y="835.0" width="20.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="165.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (46 samples, 1.73%)</title><rect x="162.3" y="819.0" width="20.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="165.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (46 samples, 1.73%)</title><rect x="162.3" y="803.0" width="20.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="165.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.&lt;init&gt; (2 samples, 0.08%)</title><rect x="162.7" y="787.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="165.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.04%)</title><rect x="162.7" y="771.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (1 samples, 0.04%)</title><rect x="163.2" y="771.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="166.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$290/1393051360.apply (43 samples, 1.62%)</title><rect x="163.6" y="787.0" width="19.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (43 samples, 1.62%)</title><rect x="163.6" y="771.0" width="19.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (43 samples, 1.62%)</title><rect x="163.6" y="755.0" width="19.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (43 samples, 1.62%)</title><rect x="163.6" y="739.0" width="19.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (37 samples, 1.39%)</title><rect x="163.6" y="723.0" width="16.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="166.6" y="734.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (1 samples, 0.04%)</title><rect x="163.6" y="707.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.6" y="718.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (1 samples, 0.04%)</title><rect x="163.6" y="691.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.6" y="702.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode0 (1 samples, 0.04%)</title><rect x="163.6" y="675.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="166.6" y="686.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeBlock (1 samples, 0.04%)</title><rect x="163.6" y="659.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (34 samples, 1.28%)</title><rect x="164.0" y="707.0" width="15.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="167.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (34 samples, 1.28%)</title><rect x="164.0" y="691.0" width="15.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="167.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (34 samples, 1.28%)</title><rect x="164.0" y="675.0" width="15.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="167.0" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (33 samples, 1.24%)</title><rect x="164.5" y="659.0" width="14.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="167.5" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.04%)</title><rect x="164.5" y="643.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="167.5" y="654.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (28 samples, 1.05%)</title><rect x="164.9" y="643.0" width="12.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="167.9" y="654.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.04%)</title><rect x="165.8" y="627.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="168.8" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (1 samples, 0.04%)</title><rect x="166.3" y="627.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="169.3" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.11%)</title><rect x="166.7" y="627.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="169.7" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (3 samples, 0.11%)</title><rect x="166.7" y="611.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="169.7" y="622.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.15%)</title><rect x="168.0" y="627.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="171.0" y="638.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (3 samples, 0.11%)</title><rect x="168.5" y="611.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="171.5" y="622.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.04%)</title><rect x="169.4" y="595.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="172.4" y="606.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.04%)</title><rect x="169.8" y="627.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="172.8" y="638.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.04%)</title><rect x="170.3" y="627.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="173.3" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="170.7" y="627.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="173.7" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (2 samples, 0.08%)</title><rect x="171.2" y="627.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="174.2" y="638.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.04%)</title><rect x="172.0" y="627.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="175.0" y="638.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.11%)</title><rect x="172.5" y="627.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="175.5" y="638.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.04%)</title><rect x="172.9" y="611.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="175.9" y="622.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.04%)</title><rect x="173.4" y="611.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="176.4" y="622.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (8 samples, 0.30%)</title><rect x="173.8" y="627.0" width="3.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="176.8" y="638.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.11%)</title><rect x="174.7" y="611.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="177.7" y="622.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.08%)</title><rect x="176.0" y="611.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="179.0" y="622.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.04%)</title><rect x="176.9" y="611.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="179.9" y="622.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.04%)</title><rect x="176.9" y="595.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="179.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/1267556427.run (4 samples, 0.15%)</title><rect x="177.4" y="643.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="180.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (3 samples, 0.11%)</title><rect x="177.8" y="627.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="180.8" y="638.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (3 samples, 0.11%)</title><rect x="177.8" y="611.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.8" y="622.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (1 samples, 0.04%)</title><rect x="177.8" y="595.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="180.8" y="606.0"></text>
</g>
<g>
<title>java/lang/System.checkKey (1 samples, 0.04%)</title><rect x="177.8" y="579.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.04%)</title><rect x="177.8" y="563.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="180.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.04%)</title><rect x="177.8" y="547.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.8" y="558.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.04%)</title><rect x="177.8" y="531.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="180.8" y="542.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.08%)</title><rect x="178.3" y="595.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="181.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.08%)</title><rect x="178.3" y="579.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="181.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (2 samples, 0.08%)</title><rect x="179.1" y="707.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="182.1" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="179.1" y="691.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.1" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="179.1" y="675.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.1" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="179.1" y="659.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.1" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="179.1" y="643.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="182.1" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="179.1" y="627.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="182.1" y="638.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.04%)</title><rect x="179.1" y="611.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="182.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteBuffer (1 samples, 0.04%)</title><rect x="179.6" y="691.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.6" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putInt (1 samples, 0.04%)</title><rect x="179.6" y="675.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="182.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (6 samples, 0.23%)</title><rect x="180.0" y="723.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="183.0" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.11%)</title><rect x="180.0" y="707.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="183.0" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="180.5" y="691.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="183.5" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="180.5" y="675.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="183.5" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="180.5" y="659.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="183.5" y="670.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="180.9" y="691.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="183.9" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.11%)</title><rect x="181.4" y="707.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="184.4" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (1 samples, 0.04%)</title><rect x="181.8" y="691.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="184.8" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.04%)</title><rect x="182.2" y="691.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="185.2" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateLeft (1 samples, 0.04%)</title><rect x="182.2" y="675.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="185.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (42 samples, 1.58%)</title><rect x="182.7" y="835.0" width="18.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="185.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (42 samples, 1.58%)</title><rect x="182.7" y="819.0" width="18.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="185.7" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList.&lt;init&gt; (1 samples, 0.04%)</title><rect x="182.7" y="803.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="185.7" y="814.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.&lt;init&gt; (1 samples, 0.04%)</title><rect x="182.7" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="185.7" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (1 samples, 0.04%)</title><rect x="182.7" y="771.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="185.7" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 0.04%)</title><rect x="182.7" y="755.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="185.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.&lt;init&gt; (1 samples, 0.04%)</title><rect x="183.1" y="803.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="186.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (4 samples, 0.15%)</title><rect x="183.6" y="803.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.6" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="183.6" y="787.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="186.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="183.6" y="771.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.get$Lambda (1 samples, 0.04%)</title><rect x="183.6" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="186.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.&lt;init&gt; (1 samples, 0.04%)</title><rect x="183.6" y="739.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="186.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.04%)</title><rect x="184.0" y="787.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="187.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (1 samples, 0.04%)</title><rect x="184.0" y="771.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="187.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.&lt;init&gt; (1 samples, 0.04%)</title><rect x="184.0" y="755.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.0" y="766.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.04%)</title><rect x="184.0" y="739.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="187.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.08%)</title><rect x="184.5" y="787.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="187.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.08%)</title><rect x="184.5" y="771.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (2 samples, 0.08%)</title><rect x="184.5" y="755.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="187.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.04%)</title><rect x="184.9" y="739.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="187.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (1 samples, 0.04%)</title><rect x="185.4" y="803.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="188.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getUserHeaders (1 samples, 0.04%)</title><rect x="185.4" y="787.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="188.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (2 samples, 0.08%)</title><rect x="185.8" y="803.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="188.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (2 samples, 0.08%)</title><rect x="185.8" y="787.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="188.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (2 samples, 0.08%)</title><rect x="185.8" y="771.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="188.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="185.8" y="755.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="188.8" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="185.8" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="188.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.04%)</title><rect x="185.8" y="723.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="188.8" y="734.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.04%)</title><rect x="185.8" y="707.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="188.8" y="718.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.04%)</title><rect x="185.8" y="691.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="188.8" y="702.0"></text>
</g>
<g>
<title>java/util/LinkedList.removeFirst (1 samples, 0.04%)</title><rect x="186.2" y="755.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="189.2" y="766.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (1 samples, 0.04%)</title><rect x="186.2" y="739.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="189.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (33 samples, 1.24%)</title><rect x="186.7" y="803.0" width="14.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="189.7" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (33 samples, 1.24%)</title><rect x="186.7" y="787.0" width="14.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.7" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.04%)</title><rect x="186.7" y="771.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="189.7" y="782.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (19 samples, 0.71%)</title><rect x="187.1" y="771.0" width="8.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="190.1" y="782.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (2 samples, 0.08%)</title><rect x="188.0" y="755.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="191.0" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.04%)</title><rect x="188.9" y="755.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="191.9" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (1 samples, 0.04%)</title><rect x="188.9" y="739.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="191.9" y="750.0"></text>
</g>
<g>
<title>method_matches(Method const*, Symbol const*, bool, bool, bool) (1 samples, 0.04%)</title><rect x="188.9" y="723.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="191.9" y="734.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.04%)</title><rect x="189.4" y="755.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="192.4" y="766.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (6 samples, 0.23%)</title><rect x="189.8" y="755.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="192.8" y="766.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.04%)</title><rect x="190.7" y="739.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="193.7" y="750.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.08%)</title><rect x="191.1" y="739.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="194.1" y="750.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.04%)</title><rect x="192.0" y="739.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="195.0" y="750.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (6 samples, 0.23%)</title><rect x="192.5" y="755.0" width="2.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="195.5" y="766.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.04%)</title><rect x="192.5" y="739.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="195.5" y="750.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.19%)</title><rect x="192.9" y="739.0" width="2.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="195.9" y="750.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.08%)</title><rect x="192.9" y="723.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="195.9" y="734.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.04%)</title><rect x="193.3" y="707.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="196.3" y="718.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.08%)</title><rect x="193.8" y="723.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="196.8" y="734.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.04%)</title><rect x="194.7" y="723.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="197.7" y="734.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.04%)</title><rect x="195.1" y="755.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="198.1" y="766.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.04%)</title><rect x="195.1" y="739.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="198.1" y="750.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.08%)</title><rect x="195.6" y="771.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="198.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$194/211908476.run (10 samples, 0.38%)</title><rect x="196.5" y="771.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="199.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (9 samples, 0.34%)</title><rect x="196.9" y="755.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="199.9" y="766.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (8 samples, 0.30%)</title><rect x="197.3" y="739.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="200.3" y="750.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (8 samples, 0.30%)</title><rect x="197.3" y="723.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="200.3" y="734.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (7 samples, 0.26%)</title><rect x="197.8" y="707.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="200.8" y="718.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (7 samples, 0.26%)</title><rect x="197.8" y="691.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="200.8" y="702.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (6 samples, 0.23%)</title><rect x="198.2" y="675.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="201.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.next (1 samples, 0.04%)</title><rect x="198.7" y="659.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="201.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (1 samples, 0.04%)</title><rect x="198.7" y="643.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="201.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (3 samples, 0.11%)</title><rect x="199.1" y="659.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="202.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (1 samples, 0.04%)</title><rect x="200.0" y="643.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="203.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="200.0" y="627.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="203.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (1 samples, 0.04%)</title><rect x="200.0" y="611.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="203.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (1 samples, 0.04%)</title><rect x="200.0" y="595.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="203.0" y="606.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.04%)</title><rect x="200.5" y="659.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="203.5" y="670.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.04%)</title><rect x="200.9" y="771.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="203.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (5 samples, 0.19%)</title><rect x="201.3" y="931.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.04%)</title><rect x="201.3" y="915.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="204.3" y="926.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.04%)</title><rect x="201.3" y="899.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="204.3" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.04%)</title><rect x="201.3" y="883.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (4 samples, 0.15%)</title><rect x="201.8" y="915.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="204.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (4 samples, 0.15%)</title><rect x="201.8" y="899.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="204.8" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2128155258.linkToTargetMethod (4 samples, 0.15%)</title><rect x="201.8" y="883.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="204.8" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2090995829.invoke (4 samples, 0.15%)</title><rect x="201.8" y="867.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="204.8" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.08%)</title><rect x="201.8" y="851.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="204.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.08%)</title><rect x="201.8" y="835.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.8" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/892748663.invoke (2 samples, 0.08%)</title><rect x="202.7" y="851.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="205.7" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="202.7" y="835.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="205.7" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1326229544.invokeStatic (1 samples, 0.04%)</title><rect x="203.1" y="835.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="206.1" y="846.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.04%)</title><rect x="203.1" y="819.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="206.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (33 samples, 1.24%)</title><rect x="203.6" y="1011.0" width="14.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="206.6" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (2 samples, 0.08%)</title><rect x="203.6" y="995.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="206.6" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.08%)</title><rect x="203.6" y="979.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="206.6" y="990.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="203.6" y="963.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="206.6" y="974.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="203.6" y="947.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="206.6" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.04%)</title><rect x="204.0" y="963.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="207.0" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (1 samples, 0.04%)</title><rect x="204.0" y="947.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="207.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.04%)</title><rect x="204.0" y="931.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="207.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (31 samples, 1.17%)</title><rect x="204.4" y="995.0" width="13.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="207.4" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (31 samples, 1.17%)</title><rect x="204.4" y="979.0" width="13.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="207.4" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (31 samples, 1.17%)</title><rect x="204.4" y="963.0" width="13.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="207.4" y="974.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="204.4" y="947.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="207.4" y="958.0"></text>
</g>
<g>
<title>__write (30 samples, 1.13%)</title><rect x="204.9" y="947.0" width="13.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="207.9" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 1.02%)</title><rect x="206.2" y="931.0" width="12.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="209.2" y="942.0"></text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.08%)</title><rect x="206.2" y="915.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="209.2" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.94%)</title><rect x="207.1" y="915.0" width="11.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="210.1" y="926.0"></text>
</g>
<g>
<title>__x64_sys_write (24 samples, 0.90%)</title><rect x="207.1" y="899.0" width="10.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="210.1" y="910.0"></text>
</g>
<g>
<title>ksys_write (24 samples, 0.90%)</title><rect x="207.1" y="883.0" width="10.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="210.1" y="894.0"></text>
</g>
<g>
<title>vfs_write (24 samples, 0.90%)</title><rect x="207.1" y="867.0" width="10.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="210.1" y="878.0"></text>
</g>
<g>
<title>__vfs_write (23 samples, 0.87%)</title><rect x="207.1" y="851.0" width="10.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="210.1" y="862.0"></text>
</g>
<g>
<title>new_sync_write (23 samples, 0.87%)</title><rect x="207.1" y="835.0" width="10.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="210.1" y="846.0"></text>
</g>
<g>
<title>kill_fasync (1 samples, 0.04%)</title><rect x="207.1" y="819.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="210.1" y="830.0"></text>
</g>
<g>
<title>pipe_write (22 samples, 0.83%)</title><rect x="207.6" y="819.0" width="9.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="210.6" y="830.0"></text>
</g>
<g>
<title>__wake_up_sync_key (19 samples, 0.71%)</title><rect x="208.0" y="803.0" width="8.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="211.0" y="814.0"></text>
</g>
<g>
<title>__wake_up_common_lock (19 samples, 0.71%)</title><rect x="208.0" y="787.0" width="8.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="211.0" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (19 samples, 0.71%)</title><rect x="208.0" y="771.0" width="8.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="211.0" y="782.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.04%)</title><rect x="216.4" y="803.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="219.4" y="814.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.04%)</title><rect x="216.4" y="787.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="219.4" y="798.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.04%)</title><rect x="216.9" y="803.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="219.9" y="814.0"></text>
</g>
<g>
<title>timespec64_trunc (1 samples, 0.04%)</title><rect x="216.9" y="787.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="219.9" y="798.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.04%)</title><rect x="217.3" y="851.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="220.3" y="862.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.04%)</title><rect x="217.3" y="835.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="220.3" y="846.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.04%)</title><rect x="217.3" y="819.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="220.3" y="830.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.04%)</title><rect x="217.3" y="803.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="220.3" y="814.0"></text>
</g>
<g>
<title>ksys_write (1 samples, 0.04%)</title><rect x="217.8" y="899.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="220.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (8 samples, 0.30%)</title><rect x="218.2" y="1011.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="221.2" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (4 samples, 0.15%)</title><rect x="218.2" y="995.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="221.2" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (4 samples, 0.15%)</title><rect x="218.2" y="979.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="221.2" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (4 samples, 0.15%)</title><rect x="218.2" y="963.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="221.2" y="974.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (4 samples, 0.15%)</title><rect x="218.2" y="947.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="221.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (4 samples, 0.15%)</title><rect x="220.0" y="995.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="223.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (3 samples, 0.11%)</title><rect x="220.0" y="979.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="223.0" y="990.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (2 samples, 0.08%)</title><rect x="220.4" y="963.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="223.4" y="974.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (1 samples, 0.04%)</title><rect x="220.4" y="947.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="223.4" y="958.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.04%)</title><rect x="220.4" y="931.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="223.4" y="942.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.04%)</title><rect x="220.9" y="947.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="223.9" y="958.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.04%)</title><rect x="220.9" y="931.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="223.9" y="942.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.04%)</title><rect x="220.9" y="915.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="223.9" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (1 samples, 0.04%)</title><rect x="220.9" y="899.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="223.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getProxyURI (1 samples, 0.04%)</title><rect x="221.3" y="979.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="224.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.proxy (1 samples, 0.04%)</title><rect x="221.3" y="963.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="224.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (4 samples, 0.15%)</title><rect x="221.8" y="1011.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="224.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (4 samples, 0.15%)</title><rect x="221.8" y="995.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="224.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.timeout (2 samples, 0.08%)</title><rect x="221.8" y="979.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="224.8" y="990.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.08%)</title><rect x="221.8" y="963.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="224.8" y="974.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (2 samples, 0.08%)</title><rect x="221.8" y="947.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="224.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (2 samples, 0.08%)</title><rect x="222.6" y="979.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="225.6" y="990.0"></text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.04%)</title><rect x="222.6" y="963.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="225.6" y="974.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.04%)</title><rect x="222.6" y="947.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="225.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.04%)</title><rect x="222.6" y="931.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="225.6" y="942.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.04%)</title><rect x="222.6" y="915.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="225.6" y="926.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="222.6" y="899.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="225.6" y="910.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.04%)</title><rect x="223.1" y="963.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="226.1" y="974.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (1 samples, 0.04%)</title><rect x="223.1" y="947.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="226.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.08%)</title><rect x="223.5" y="1075.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="226.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.04%)</title><rect x="224.0" y="1059.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="227.0" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils$$Lambda$170/1308121008.accept (1 samples, 0.04%)</title><rect x="224.0" y="1043.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="227.0" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils.lambda$firstN$0 (1 samples, 0.04%)</title><rect x="224.0" y="1027.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="227.0" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$LocalServiceClient$$Lambda$663/638630665.get (292 samples, 10.99%)</title><rect x="224.4" y="1091.0" width="129.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="227.4" y="1102.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$LocalServiceClient.lambda$getAsync$0 (292 samples, 10.99%)</title><rect x="224.4" y="1075.0" width="129.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="227.4" y="1086.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.getEntityLocal (292 samples, 10.99%)</title><rect x="224.4" y="1059.0" width="129.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="227.4" y="1070.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (1 samples, 0.04%)</title><rect x="224.4" y="1043.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="227.4" y="1054.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_2 (1 samples, 0.04%)</title><rect x="224.4" y="1027.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.4" y="1038.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_2 (1 samples, 0.04%)</title><rect x="224.4" y="1011.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.size (1 samples, 0.04%)</title><rect x="224.4" y="995.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="227.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.getArray (1 samples, 0.04%)</title><rect x="224.4" y="979.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="227.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/DAOImpl.getEntry (290 samples, 10.91%)</title><rect x="224.9" y="1043.0" width="128.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="227.9" y="1054.0">ru/mail/polis/da..</text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.04%)</title><rect x="224.9" y="1027.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="227.9" y="1038.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="224.9" y="1011.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="227.9" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (51 samples, 1.92%)</title><rect x="225.3" y="1027.0" width="22.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="228.3" y="1038.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (49 samples, 1.84%)</title><rect x="225.8" y="1011.0" width="21.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="228.8" y="1022.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.04%)</title><rect x="225.8" y="995.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="228.8" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (30 samples, 1.13%)</title><rect x="226.2" y="995.0" width="13.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="229.2" y="1006.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (30 samples, 1.13%)</title><rect x="226.2" y="979.0" width="13.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="229.2" y="990.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (30 samples, 1.13%)</title><rect x="226.2" y="963.0" width="13.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="229.2" y="974.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (27 samples, 1.02%)</title><rect x="227.5" y="947.0" width="12.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="230.5" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (27 samples, 1.02%)</title><rect x="227.5" y="931.0" width="12.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="230.5" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (9 samples, 0.34%)</title><rect x="227.5" y="915.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="230.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.next (9 samples, 0.34%)</title><rect x="227.5" y="899.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="230.5" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.next (9 samples, 0.34%)</title><rect x="227.5" y="883.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="230.5" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable.entryAt (9 samples, 0.34%)</title><rect x="227.5" y="867.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="230.5" y="878.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (2 samples, 0.08%)</title><rect x="229.3" y="851.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="232.3" y="862.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (2 samples, 0.08%)</title><rect x="229.3" y="835.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="232.3" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2 samples, 0.08%)</title><rect x="230.2" y="851.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="233.2" y="862.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="230.6" y="835.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="233.6" y="846.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.04%)</title><rect x="231.1" y="851.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="234.1" y="862.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.04%)</title><rect x="231.1" y="835.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="234.1" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="231.1" y="819.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="234.1" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="231.1" y="803.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.1" y="814.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$138/2022631555.compare (18 samples, 0.68%)</title><rect x="231.5" y="915.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="234.5" y="926.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (18 samples, 0.68%)</title><rect x="231.5" y="899.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="234.5" y="910.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$134/462652533.compare (18 samples, 0.68%)</title><rect x="231.5" y="883.0" width="8.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="234.5" y="894.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (18 samples, 0.68%)</title><rect x="231.5" y="867.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="234.5" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (18 samples, 0.68%)</title><rect x="231.5" y="851.0" width="8.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="234.5" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (17 samples, 0.64%)</title><rect x="232.0" y="835.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="235.0" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.08%)</title><rect x="232.0" y="819.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="235.0" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (6 samples, 0.23%)</title><rect x="232.9" y="819.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="235.9" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.11%)</title><rect x="233.7" y="803.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="236.7" y="814.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.04%)</title><rect x="235.1" y="803.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="238.1" y="814.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.34%)</title><rect x="235.5" y="819.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="238.5" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.04%)</title><rect x="238.2" y="803.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="241.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (1 samples, 0.04%)</title><rect x="238.2" y="787.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="241.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (2 samples, 0.08%)</title><rect x="238.6" y="803.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="241.6" y="814.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (18 samples, 0.68%)</title><rect x="239.5" y="995.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="242.5" y="1006.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (18 samples, 0.68%)</title><rect x="239.5" y="979.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="242.5" y="990.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (18 samples, 0.68%)</title><rect x="239.5" y="963.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="242.5" y="974.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (18 samples, 0.68%)</title><rect x="239.5" y="947.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="242.5" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 0.64%)</title><rect x="240.0" y="931.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.0" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 0.64%)</title><rect x="240.0" y="915.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="243.0" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (12 samples, 0.45%)</title><rect x="240.4" y="899.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="243.4" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.19%)</title><rect x="240.9" y="883.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="243.9" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.next (6 samples, 0.23%)</title><rect x="243.1" y="883.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="246.1" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.next (6 samples, 0.23%)</title><rect x="243.1" y="867.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="246.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable.entryAt (6 samples, 0.23%)</title><rect x="243.1" y="851.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="246.1" y="862.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3 samples, 0.11%)</title><rect x="243.5" y="835.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="246.5" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (3 samples, 0.11%)</title><rect x="243.5" y="819.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="246.5" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (3 samples, 0.11%)</title><rect x="243.5" y="803.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="246.5" y="814.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (3 samples, 0.11%)</title><rect x="243.5" y="787.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="246.5" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.11%)</title><rect x="243.5" y="771.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="246.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.11%)</title><rect x="243.5" y="755.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="246.5" y="766.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (1 samples, 0.04%)</title><rect x="244.8" y="835.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="247.8" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="244.8" y="819.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="247.8" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="244.8" y="803.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="247.8" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectIntBufferS.get (1 samples, 0.04%)</title><rect x="245.3" y="835.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="248.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getInt (1 samples, 0.04%)</title><rect x="245.3" y="819.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="248.3" y="830.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$138/2022631555.compare (4 samples, 0.15%)</title><rect x="245.7" y="899.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="248.7" y="910.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.15%)</title><rect x="245.7" y="883.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="248.7" y="894.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$134/462652533.compare (3 samples, 0.11%)</title><rect x="245.7" y="867.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="248.7" y="878.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3 samples, 0.11%)</title><rect x="245.7" y="851.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="248.7" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.11%)</title><rect x="245.7" y="835.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="248.7" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.11%)</title><rect x="245.7" y="819.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="248.7" y="830.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.08%)</title><rect x="245.7" y="803.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="248.7" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.08%)</title><rect x="245.7" y="787.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="248.7" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="245.7" y="771.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="248.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (1 samples, 0.04%)</title><rect x="246.2" y="771.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="249.2" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.04%)</title><rect x="246.6" y="803.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.6" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="246.6" y="787.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="249.6" y="798.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$137/1326605944.compare (1 samples, 0.04%)</title><rect x="247.1" y="867.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="250.1" y="878.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$ea9a8b3a$1 (1 samples, 0.04%)</title><rect x="247.1" y="851.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="250.1" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/TableEntry$$Lambda$135/1670022197.apply (1 samples, 0.04%)</title><rect x="247.1" y="835.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="250.1" y="846.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.04%)</title><rect x="247.1" y="819.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.1" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.04%)</title><rect x="247.5" y="1011.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.5" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/DAOImpl.entryIterator (238 samples, 8.95%)</title><rect x="248.0" y="1027.0" width="105.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="251.0" y="1038.0">ru/mail/polis..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.08%)</title><rect x="248.8" y="1011.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="251.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.08%)</title><rect x="248.8" y="995.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="251.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (2 samples, 0.08%)</title><rect x="248.8" y="979.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="251.8" y="990.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.remove (1 samples, 0.04%)</title><rect x="248.8" y="963.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="251.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.04%)</title><rect x="249.3" y="963.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="252.3" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="249.3" y="947.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="252.3" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="249.3" y="931.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.3" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/IteratorUtils.collapseIterators (56 samples, 2.11%)</title><rect x="249.7" y="1011.0" width="24.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.7" y="1022.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (50 samples, 1.88%)</title><rect x="249.7" y="995.0" width="22.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="252.7" y="1006.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (50 samples, 1.88%)</title><rect x="249.7" y="979.0" width="22.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="252.7" y="990.0">c..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (47 samples, 1.77%)</title><rect x="251.1" y="963.0" width="20.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="254.1" y="974.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (47 samples, 1.77%)</title><rect x="251.1" y="947.0" width="20.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="254.1" y="958.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (47 samples, 1.77%)</title><rect x="251.1" y="931.0" width="20.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="254.1" y="942.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (47 samples, 1.77%)</title><rect x="251.1" y="915.0" width="20.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="254.1" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (46 samples, 1.73%)</title><rect x="251.5" y="899.0" width="20.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="254.5" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (46 samples, 1.73%)</title><rect x="251.5" y="883.0" width="20.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="254.5" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (22 samples, 0.83%)</title><rect x="252.8" y="867.0" width="9.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.8" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (7 samples, 0.26%)</title><rect x="252.8" y="851.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="255.8" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.08%)</title><rect x="255.1" y="835.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="258.1" y="846.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.08%)</title><rect x="255.1" y="819.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="258.1" y="830.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="255.5" y="803.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="258.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.next (15 samples, 0.56%)</title><rect x="255.9" y="851.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="258.9" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.next (15 samples, 0.56%)</title><rect x="255.9" y="835.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="258.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable.entryAt (15 samples, 0.56%)</title><rect x="255.9" y="819.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="258.9" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6 samples, 0.23%)</title><rect x="256.8" y="803.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="259.8" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.23%)</title><rect x="256.8" y="787.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="259.8" y="798.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.23%)</title><rect x="256.8" y="771.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="259.8" y="782.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.23%)</title><rect x="256.8" y="755.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="259.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.23%)</title><rect x="256.8" y="739.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="259.8" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.23%)</title><rect x="256.8" y="723.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="259.8" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="257.7" y="707.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="260.7" y="718.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.08%)</title><rect x="258.6" y="691.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="261.6" y="702.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.08%)</title><rect x="258.6" y="675.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.08%)</title><rect x="258.6" y="659.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="261.6" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.08%)</title><rect x="258.6" y="643.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="261.6" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (5 samples, 0.19%)</title><rect x="259.5" y="803.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="262.5" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.19%)</title><rect x="259.5" y="787.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="262.5" y="798.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.19%)</title><rect x="259.5" y="771.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.5" y="782.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="259.9" y="755.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="262.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="259.9" y="739.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="262.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="259.9" y="723.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="262.9" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="259.9" y="707.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="262.9" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectIntBufferS.get (2 samples, 0.08%)</title><rect x="261.7" y="803.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="264.7" y="814.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$138/2022631555.compare (21 samples, 0.79%)</title><rect x="262.6" y="867.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="265.6" y="878.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (21 samples, 0.79%)</title><rect x="262.6" y="851.0" width="9.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="265.6" y="862.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$134/462652533.compare (15 samples, 0.56%)</title><rect x="263.0" y="835.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="266.0" y="846.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (15 samples, 0.56%)</title><rect x="263.0" y="819.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="266.0" y="830.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.08%)</title><rect x="263.0" y="803.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="266.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.49%)</title><rect x="263.9" y="803.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="266.9" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.49%)</title><rect x="263.9" y="787.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="266.9" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (3 samples, 0.11%)</title><rect x="263.9" y="771.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="266.9" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.04%)</title><rect x="263.9" y="755.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="266.9" y="766.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.08%)</title><rect x="264.4" y="755.0" width="0.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="267.4" y="766.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.38%)</title><rect x="265.3" y="771.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="268.3" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.19%)</title><rect x="267.0" y="755.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="270.0" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.08%)</title><rect x="267.0" y="739.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="270.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (3 samples, 0.11%)</title><rect x="267.9" y="739.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="270.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (1 samples, 0.04%)</title><rect x="269.3" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="272.3" y="766.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$137/1326605944.compare (5 samples, 0.19%)</title><rect x="269.7" y="835.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="272.7" y="846.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$ea9a8b3a$1 (5 samples, 0.19%)</title><rect x="269.7" y="819.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="272.7" y="830.0"></text>
</g>
<g>
<title>java/util/Collections$ReverseComparator.compare (1 samples, 0.04%)</title><rect x="269.7" y="803.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="272.7" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$ReverseComparator.compare (1 samples, 0.04%)</title><rect x="269.7" y="787.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="272.7" y="798.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (1 samples, 0.04%)</title><rect x="269.7" y="771.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="272.7" y="782.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (1 samples, 0.04%)</title><rect x="269.7" y="755.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="272.7" y="766.0"></text>
</g>
<g>
<title>java/lang/Long.compare (1 samples, 0.04%)</title><rect x="269.7" y="739.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="272.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/TableEntry$$Lambda$135/1670022197.apply (4 samples, 0.15%)</title><rect x="270.2" y="803.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.2" y="814.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (4 samples, 0.15%)</title><rect x="270.2" y="787.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="273.2" y="798.0"></text>
</g>
<g>
<title>java/lang/Long.&lt;init&gt; (1 samples, 0.04%)</title><rect x="271.5" y="771.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="274.5" y="782.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (1 samples, 0.04%)</title><rect x="271.5" y="755.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="274.5" y="766.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.04%)</title><rect x="271.5" y="739.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="274.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.23%)</title><rect x="271.9" y="995.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.9" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.19%)</title><rect x="272.4" y="979.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="275.4" y="990.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.19%)</title><rect x="272.4" y="963.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="275.4" y="974.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (5 samples, 0.19%)</title><rect x="272.4" y="947.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="275.4" y="958.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (5 samples, 0.19%)</title><rect x="272.4" y="931.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="275.4" y="942.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (5 samples, 0.19%)</title><rect x="272.4" y="915.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="275.4" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.15%)</title><rect x="272.8" y="899.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="275.8" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.15%)</title><rect x="272.8" y="883.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="275.8" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1 samples, 0.04%)</title><rect x="272.8" y="867.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="275.8" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.next (1 samples, 0.04%)</title><rect x="272.8" y="851.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="275.8" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.next (1 samples, 0.04%)</title><rect x="272.8" y="835.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="275.8" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable.entryAt (1 samples, 0.04%)</title><rect x="272.8" y="819.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="275.8" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (1 samples, 0.04%)</title><rect x="272.8" y="803.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.8" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="272.8" y="787.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="275.8" y="798.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$138/2022631555.compare (3 samples, 0.11%)</title><rect x="273.3" y="867.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.3" y="878.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3 samples, 0.11%)</title><rect x="273.3" y="851.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="276.3" y="862.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$134/462652533.compare (3 samples, 0.11%)</title><rect x="273.3" y="835.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="276.3" y="846.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3 samples, 0.11%)</title><rect x="273.3" y="819.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="276.3" y="830.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="273.3" y="803.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="276.3" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.08%)</title><rect x="273.7" y="803.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.7" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.08%)</title><rect x="273.7" y="787.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="276.7" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.08%)</title><rect x="273.7" y="771.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="276.7" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.04%)</title><rect x="274.1" y="755.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="277.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/IteratorUtils.collectIterators (178 samples, 6.70%)</title><rect x="274.6" y="1011.0" width="79.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="277.6" y="1022.0">ru/mail/p..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (165 samples, 6.21%)</title><rect x="274.6" y="995.0" width="73.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="277.6" y="1006.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (165 samples, 6.21%)</title><rect x="274.6" y="979.0" width="73.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="277.6" y="990.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.getOpFlags (1 samples, 0.04%)</title><rect x="274.6" y="963.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="277.6" y="974.0"></text>
</g>
<g>
<title>java/util/RegularEnumSet.contains (1 samples, 0.04%)</title><rect x="274.6" y="947.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="277.6" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (164 samples, 6.17%)</title><rect x="275.0" y="963.0" width="72.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="278.0" y="974.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (164 samples, 6.17%)</title><rect x="275.0" y="947.0" width="72.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="278.0" y="958.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (164 samples, 6.17%)</title><rect x="275.0" y="931.0" width="72.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="278.0" y="942.0">java/uti..</text>
</g>
<g>
<title>java/util/HashMap$ValueSpliterator.forEachRemaining (164 samples, 6.17%)</title><rect x="275.0" y="915.0" width="72.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="278.0" y="926.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (159 samples, 5.98%)</title><rect x="277.3" y="899.0" width="70.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="280.3" y="910.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (1 samples, 0.04%)</title><rect x="277.3" y="883.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.3" y="894.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$27/1043208434.accept (1 samples, 0.04%)</title><rect x="277.3" y="867.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="280.3" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="277.3" y="851.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="280.3" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="277.3" y="835.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.3" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="277.3" y="819.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="280.3" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="277.3" y="803.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="280.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/IteratorUtils$$Lambda$667/759855183.apply (158 samples, 5.94%)</title><rect x="277.7" y="883.0" width="70.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="280.7" y="894.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/IteratorUtils.lambda$collectIterators$0 (156 samples, 5.87%)</title><rect x="278.6" y="867.0" width="69.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="281.6" y="878.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable.iterator (156 samples, 5.87%)</title><rect x="278.6" y="851.0" width="69.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="281.6" y="862.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.&lt;init&gt; (156 samples, 5.87%)</title><rect x="278.6" y="835.0" width="69.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="281.6" y="846.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable.position (156 samples, 5.87%)</title><rect x="278.6" y="819.0" width="69.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="281.6" y="830.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (56 samples, 2.11%)</title><rect x="283.5" y="803.0" width="24.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.5" y="814.0">j..</text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="286.6" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.6" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (10 samples, 0.38%)</title><rect x="287.0" y="787.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="290.0" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (34 samples, 1.28%)</title><rect x="291.5" y="787.0" width="15.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="294.5" y="798.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.19%)</title><rect x="299.5" y="771.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="302.5" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.15%)</title><rect x="299.5" y="755.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="302.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (1 samples, 0.04%)</title><rect x="301.2" y="755.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="304.2" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.19%)</title><rect x="301.7" y="771.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="304.7" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.11%)</title><rect x="302.6" y="755.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="305.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (6 samples, 0.23%)</title><rect x="303.9" y="771.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="306.9" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.11%)</title><rect x="306.6" y="787.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="309.6" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.08%)</title><rect x="306.6" y="771.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="309.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (1 samples, 0.04%)</title><rect x="307.4" y="771.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.4" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="307.9" y="787.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="310.9" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="307.9" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="310.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable.keyAt (89 samples, 3.35%)</title><rect x="308.3" y="803.0" width="39.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="311.3" y="814.0">ru/..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (30 samples, 1.13%)</title><rect x="320.3" y="787.0" width="13.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="323.3" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="320.3" y="771.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="323.3" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (29 samples, 1.09%)</title><rect x="320.8" y="771.0" width="12.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="323.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (29 samples, 1.09%)</title><rect x="320.8" y="755.0" width="12.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="323.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (29 samples, 1.09%)</title><rect x="320.8" y="739.0" width="12.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.8" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (20 samples, 0.75%)</title><rect x="333.6" y="787.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.6" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.capacity (1 samples, 0.04%)</title><rect x="333.6" y="771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="336.6" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.markValue (1 samples, 0.04%)</title><rect x="334.1" y="771.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="337.1" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (18 samples, 0.68%)</title><rect x="334.5" y="771.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="337.5" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (18 samples, 0.68%)</title><rect x="334.5" y="755.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="337.5" y="766.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (17 samples, 0.64%)</title><rect x="335.0" y="739.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="338.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (17 samples, 0.64%)</title><rect x="335.0" y="723.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="338.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (17 samples, 0.64%)</title><rect x="335.0" y="707.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="338.0" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.23%)</title><rect x="339.8" y="691.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="342.8" y="702.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.15%)</title><rect x="340.3" y="675.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="343.3" y="686.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.15%)</title><rect x="340.3" y="659.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="343.3" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.15%)</title><rect x="340.3" y="643.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="343.3" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.11%)</title><rect x="340.7" y="627.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="343.7" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.04%)</title><rect x="342.1" y="675.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="345.1" y="686.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.04%)</title><rect x="342.1" y="659.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="345.1" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="342.1" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="345.1" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="342.1" y="627.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="345.1" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (9 samples, 0.34%)</title><rect x="342.5" y="787.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="345.5" y="798.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (8 samples, 0.30%)</title><rect x="343.0" y="771.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="346.0" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (8 samples, 0.30%)</title><rect x="343.0" y="755.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="346.0" y="766.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (7 samples, 0.26%)</title><rect x="343.4" y="739.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="346.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.26%)</title><rect x="343.4" y="723.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="346.4" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.26%)</title><rect x="343.4" y="707.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="346.4" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.15%)</title><rect x="344.7" y="691.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="347.7" y="702.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.11%)</title><rect x="344.7" y="675.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="347.7" y="686.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (3 samples, 0.11%)</title><rect x="344.7" y="659.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="347.7" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.11%)</title><rect x="344.7" y="643.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="347.7" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.08%)</title><rect x="345.2" y="627.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="348.2" y="638.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.04%)</title><rect x="346.1" y="675.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="349.1" y="686.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.04%)</title><rect x="346.1" y="659.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="349.1" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="346.1" y="643.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="349.1" y="654.0"></text>
</g>
<g>
<title>java/nio/DirectIntBufferS.get (1 samples, 0.04%)</title><rect x="346.5" y="787.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.5" y="798.0"></text>
</g>
<g>
<title>java/nio/Bits.swap (1 samples, 0.04%)</title><rect x="346.5" y="771.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="349.5" y="782.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.04%)</title><rect x="347.0" y="787.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="350.0" y="798.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.04%)</title><rect x="347.0" y="771.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="350.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="347.0" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="350.0" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.04%)</title><rect x="347.0" y="739.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="350.0" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="347.4" y="787.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="350.4" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="347.4" y="771.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="350.4" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="347.4" y="755.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="350.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (1 samples, 0.04%)</title><rect x="347.8" y="995.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="350.8" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.&lt;init&gt; (1 samples, 0.04%)</title><rect x="347.8" y="979.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="350.8" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (1 samples, 0.04%)</title><rect x="347.8" y="963.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="350.8" y="974.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.04%)</title><rect x="347.8" y="947.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="350.8" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.04%)</title><rect x="347.8" y="931.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="350.8" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/MemTablePool.iterator (12 samples, 0.45%)</title><rect x="348.3" y="995.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="351.3" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/IteratorUtils.collapseIterators (1 samples, 0.04%)</title><rect x="348.3" y="979.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="351.3" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.04%)</title><rect x="348.3" y="963.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="351.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="348.3" y="947.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="351.3" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.04%)</title><rect x="348.3" y="931.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="351.3" y="942.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.04%)</title><rect x="348.3" y="915.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="351.3" y="926.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.04%)</title><rect x="348.3" y="899.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="351.3" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/IteratorUtils.collectIterators (11 samples, 0.41%)</title><rect x="348.7" y="979.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="351.7" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (2 samples, 0.08%)</title><rect x="348.7" y="963.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="351.7" y="974.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (1 samples, 0.04%)</title><rect x="349.2" y="947.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="352.2" y="958.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.04%)</title><rect x="349.2" y="931.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="352.2" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/MemTable.iterator (9 samples, 0.34%)</title><rect x="349.6" y="963.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="352.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (9 samples, 0.34%)</title><rect x="349.6" y="947.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="352.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (9 samples, 0.34%)</title><rect x="349.6" y="931.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="352.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (9 samples, 0.34%)</title><rect x="349.6" y="915.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="352.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (1 samples, 0.04%)</title><rect x="350.1" y="899.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="353.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (1 samples, 0.04%)</title><rect x="350.1" y="883.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="353.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.04%)</title><rect x="350.1" y="867.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="353.1" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="350.1" y="851.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="353.1" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="350.1" y="835.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="353.1" y="846.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="350.1" y="819.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="353.1" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="350.1" y="803.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="353.1" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="350.1" y="787.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="353.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (7 samples, 0.26%)</title><rect x="350.5" y="899.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="353.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (7 samples, 0.26%)</title><rect x="350.5" y="883.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="353.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (6 samples, 0.23%)</title><rect x="350.9" y="867.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="353.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.15%)</title><rect x="351.8" y="851.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="354.8" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.15%)</title><rect x="351.8" y="835.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="354.8" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.15%)</title><rect x="351.8" y="819.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="354.8" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.08%)</title><rect x="351.8" y="803.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="354.8" y="814.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.04%)</title><rect x="352.3" y="787.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="355.3" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.08%)</title><rect x="352.7" y="803.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="355.7" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="353.2" y="787.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="356.2" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="353.2" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="356.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/Value.fromEntry (1 samples, 0.04%)</title><rect x="353.6" y="1043.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="356.6" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ByteBufferUtils.unwrapBytes (1 samples, 0.04%)</title><rect x="353.6" y="1027.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="356.6" y="1038.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.04%)</title><rect x="353.6" y="1011.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="356.6" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.04%)</title><rect x="353.6" y="995.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="356.6" y="1006.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="353.6" y="979.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="356.6" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="353.6" y="963.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="356.6" y="974.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="353.6" y="947.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.6" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="353.6" y="931.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="356.6" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="353.6" y="915.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="356.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (427 samples, 16.06%)</title><rect x="354.1" y="1107.0" width="189.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="357.1" y="1118.0">java/util/concurrent/Thre..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (293 samples, 11.02%)</title><rect x="354.1" y="1091.0" width="130.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="357.1" y="1102.0">java/util/concur..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.04%)</title><rect x="354.1" y="1075.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="357.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (292 samples, 10.99%)</title><rect x="354.5" y="1075.0" width="129.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="357.5" y="1086.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (1 samples, 0.04%)</title><rect x="355.4" y="1059.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="358.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="355.4" y="1043.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="358.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="355.4" y="1027.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="358.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (287 samples, 10.80%)</title><rect x="355.8" y="1059.0" width="127.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="358.8" y="1070.0">java/util/concur..</text>
</g>
<g>
<title>clock_gettime (4 samples, 0.15%)</title><rect x="362.0" y="1043.0" width="1.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="365.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.shouldSpin (69 samples, 2.60%)</title><rect x="363.8" y="1043.0" width="30.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="366.8" y="1054.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (194 samples, 7.30%)</title><rect x="394.5" y="1043.0" width="86.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="397.5" y="1054.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (1 samples, 0.04%)</title><rect x="394.5" y="1027.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="397.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (193 samples, 7.26%)</title><rect x="394.9" y="1027.0" width="85.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="397.9" y="1038.0">jdk/intern..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="394.9" y="1011.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="397.9" y="1022.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="395.3" y="1011.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="398.3" y="1022.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="395.8" y="1011.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="398.8" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Park (72 samples, 2.71%)</title><rect x="396.2" y="1011.0" width="32.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="399.2" y="1022.0">Un..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.11%)</title><rect x="397.1" y="995.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="400.1" y="1006.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.04%)</title><rect x="398.4" y="995.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="401.4" y="1006.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 0.38%)</title><rect x="398.9" y="995.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="401.9" y="1006.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.11%)</title><rect x="399.3" y="979.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="402.3" y="990.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.04%)</title><rect x="400.7" y="979.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="403.7" y="990.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.15%)</title><rect x="401.1" y="979.0" width="1.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="404.1" y="990.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.04%)</title><rect x="402.9" y="979.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="405.9" y="990.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="403.3" y="995.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="406.3" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (3 samples, 0.11%)</title><rect x="403.8" y="995.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="406.8" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (50 samples, 1.88%)</title><rect x="405.1" y="995.0" width="22.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="408.1" y="1006.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 1.17%)</title><rect x="413.5" y="979.0" width="13.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="416.5" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="413.5" y="963.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="416.5" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 1.13%)</title><rect x="414.0" y="963.0" width="13.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="417.0" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.41%)</title><rect x="422.0" y="947.0" width="4.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="425.0" y="958.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.38%)</title><rect x="422.4" y="931.0" width="4.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="425.4" y="942.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.38%)</title><rect x="422.4" y="915.0" width="4.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="425.4" y="926.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.08%)</title><rect x="425.1" y="899.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="428.1" y="910.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (2 samples, 0.08%)</title><rect x="426.0" y="899.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="429.0" y="910.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="426.9" y="947.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="429.9" y="958.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.04%)</title><rect x="427.3" y="995.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="430.3" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.04%)</title><rect x="427.8" y="995.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="430.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (115 samples, 4.33%)</title><rect x="428.2" y="1011.0" width="51.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="431.2" y="1022.0">[unkn..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.15%)</title><rect x="428.2" y="995.0" width="1.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="431.2" y="1006.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="430.0" y="995.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="433.0" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (3 samples, 0.11%)</title><rect x="430.4" y="995.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="433.4" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (107 samples, 4.03%)</title><rect x="431.7" y="995.0" width="47.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="434.7" y="1006.0">pthr..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 1.69%)</title><rect x="459.3" y="979.0" width="19.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="462.3" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (45 samples, 1.69%)</title><rect x="459.3" y="963.0" width="19.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="462.3" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (39 samples, 1.47%)</title><rect x="461.5" y="947.0" width="17.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="464.5" y="958.0"></text>
</g>
<g>
<title>do_futex (36 samples, 1.35%)</title><rect x="461.9" y="931.0" width="16.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="464.9" y="942.0"></text>
</g>
<g>
<title>futex_wait (35 samples, 1.32%)</title><rect x="462.4" y="915.0" width="15.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="465.4" y="926.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.04%)</title><rect x="463.3" y="899.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="466.3" y="910.0"></text>
</g>
<g>
<title>futex_wait_queue_me (21 samples, 0.79%)</title><rect x="463.7" y="899.0" width="9.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="466.7" y="910.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (17 samples, 0.64%)</title><rect x="463.7" y="883.0" width="7.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="466.7" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.64%)</title><rect x="463.7" y="867.0" width="7.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="466.7" y="878.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.04%)</title><rect x="471.3" y="883.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="474.3" y="894.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.11%)</title><rect x="471.7" y="883.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="474.7" y="894.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.08%)</title><rect x="472.1" y="867.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="475.1" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.08%)</title><rect x="472.1" y="851.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="475.1" y="862.0"></text>
</g>
<g>
<title>futex_wait_setup (6 samples, 0.23%)</title><rect x="473.0" y="899.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="476.0" y="910.0"></text>
</g>
<g>
<title>get_futex_value_locked (3 samples, 0.11%)</title><rect x="474.4" y="883.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="477.4" y="894.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.04%)</title><rect x="475.7" y="899.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="478.7" y="910.0"></text>
</g>
<g>
<title>hrtimer_init (3 samples, 0.11%)</title><rect x="476.1" y="899.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="479.1" y="910.0"></text>
</g>
<g>
<title>__hrtimer_init (3 samples, 0.11%)</title><rect x="476.1" y="883.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="479.1" y="894.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.04%)</title><rect x="477.5" y="899.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="480.5" y="910.0"></text>
</g>
<g>
<title>get_timespec64 (2 samples, 0.08%)</title><rect x="477.9" y="931.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="480.9" y="942.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.08%)</title><rect x="477.9" y="915.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="480.9" y="926.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.04%)</title><rect x="478.8" y="947.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="481.8" y="958.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.08%)</title><rect x="479.2" y="1011.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="482.2" y="1022.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.08%)</title><rect x="479.2" y="995.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="482.2" y="1006.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.08%)</title><rect x="479.2" y="979.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="482.2" y="990.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="480.1" y="1011.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="483.1" y="1022.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (6 samples, 0.23%)</title><rect x="480.6" y="1043.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="483.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (1 samples, 0.04%)</title><rect x="483.2" y="1059.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="483.2" y="1043.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="486.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="483.2" y="1027.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="486.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.04%)</title><rect x="483.7" y="1059.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="486.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (134 samples, 5.04%)</title><rect x="484.1" y="1091.0" width="59.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="487.1" y="1102.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (134 samples, 5.04%)</title><rect x="484.1" y="1075.0" width="59.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.1" y="1086.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (132 samples, 4.97%)</title><rect x="484.1" y="1059.0" width="58.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="487.1" y="1070.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.shouldSpin (103 samples, 3.88%)</title><rect x="485.9" y="1043.0" width="45.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="488.9" y="1054.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (25 samples, 0.94%)</title><rect x="531.6" y="1043.0" width="11.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="534.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (25 samples, 0.94%)</title><rect x="531.6" y="1027.0" width="11.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="534.6" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Park (8 samples, 0.30%)</title><rect x="532.1" y="1011.0" width="3.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="535.1" y="1022.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="532.1" y="995.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="535.1" y="1006.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.08%)</title><rect x="532.5" y="995.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="535.5" y="1006.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="533.0" y="979.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="536.0" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.04%)</title><rect x="533.4" y="995.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="536.4" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.04%)</title><rect x="533.9" y="995.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="536.9" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.11%)</title><rect x="534.3" y="995.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="537.3" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="535.2" y="979.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="538.2" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="535.2" y="963.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="538.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.56%)</title><rect x="535.6" y="1011.0" width="6.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="538.6" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_wait (14 samples, 0.53%)</title><rect x="535.6" y="995.0" width="6.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="538.6" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.23%)</title><rect x="539.2" y="979.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="542.2" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="539.2" y="963.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="542.2" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.19%)</title><rect x="539.6" y="963.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="542.6" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.11%)</title><rect x="540.5" y="947.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="543.5" y="958.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.11%)</title><rect x="540.5" y="931.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="543.5" y="942.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.08%)</title><rect x="541.0" y="915.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="544.0" y="926.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="541.0" y="899.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="544.0" y="910.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.04%)</title><rect x="541.0" y="883.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="544.0" y="894.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.04%)</title><rect x="541.4" y="899.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="544.4" y="910.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="541.8" y="995.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="544.8" y="1006.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="542.3" y="1011.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="545.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (1 samples, 0.04%)</title><rect x="542.7" y="1059.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="545.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="542.7" y="1043.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="545.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="542.7" y="1027.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="545.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.04%)</title><rect x="543.2" y="1059.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="546.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.processWorkerExit (6 samples, 0.23%)</title><rect x="543.6" y="1107.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (6 samples, 0.23%)</title><rect x="543.6" y="1091.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="546.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.23%)</title><rect x="543.6" y="1075.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="546.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (6 samples, 0.23%)</title><rect x="543.6" y="1059.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="546.6" y="1070.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.08%)</title><rect x="544.1" y="1043.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="547.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1 samples, 0.04%)</title><rect x="545.0" y="1043.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="548.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.08%)</title><rect x="545.4" y="1043.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="548.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$498/375914915.run (208 samples, 7.83%)</title><rect x="546.3" y="1107.0" width="92.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="549.3" y="1118.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (208 samples, 7.83%)</title><rect x="546.3" y="1091.0" width="92.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="549.3" y="1102.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (207 samples, 7.79%)</title><rect x="546.7" y="1075.0" width="91.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="549.7" y="1086.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (206 samples, 7.75%)</title><rect x="547.2" y="1059.0" width="91.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="550.2" y="1070.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (206 samples, 7.75%)</title><rect x="547.2" y="1043.0" width="91.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="550.2" y="1054.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (206 samples, 7.75%)</title><rect x="547.2" y="1027.0" width="91.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.2" y="1038.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (206 samples, 7.75%)</title><rect x="547.2" y="1011.0" width="91.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="550.2" y="1022.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (204 samples, 7.67%)</title><rect x="548.1" y="995.0" width="90.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="551.1" y="1006.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (204 samples, 7.67%)</title><rect x="548.1" y="979.0" width="90.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="551.1" y="990.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (4 samples, 0.15%)</title><rect x="548.1" y="963.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="551.1" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (3 samples, 0.11%)</title><rect x="548.5" y="947.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="551.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (200 samples, 7.52%)</title><rect x="549.8" y="963.0" width="88.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="552.8" y="974.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (200 samples, 7.52%)</title><rect x="549.8" y="947.0" width="88.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="552.8" y="958.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (27 samples, 1.02%)</title><rect x="549.8" y="931.0" width="12.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="552.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (23 samples, 0.87%)</title><rect x="549.8" y="915.0" width="10.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (22 samples, 0.83%)</title><rect x="550.3" y="899.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="553.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (21 samples, 0.79%)</title><rect x="550.7" y="883.0" width="9.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="553.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.04%)</title><rect x="552.1" y="867.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="555.1" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="552.1" y="851.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="555.1" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="552.1" y="835.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="555.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (17 samples, 0.64%)</title><rect x="552.5" y="867.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="555.5" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="552.5" y="851.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="555.5" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.04%)</title><rect x="552.5" y="835.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="555.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (10 samples, 0.38%)</title><rect x="552.9" y="851.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="555.9" y="862.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="552.9" y="835.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="555.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (1 samples, 0.04%)</title><rect x="553.4" y="835.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="556.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (1 samples, 0.04%)</title><rect x="553.4" y="819.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="556.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.04%)</title><rect x="553.4" y="803.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="556.4" y="814.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$48/1970436060.apply (1 samples, 0.04%)</title><rect x="553.8" y="835.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="556.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$527/52661102.apply (2 samples, 0.08%)</title><rect x="554.3" y="835.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="557.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (1 samples, 0.04%)</title><rect x="554.7" y="819.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="557.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (1 samples, 0.04%)</title><rect x="554.7" y="803.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="557.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (1 samples, 0.04%)</title><rect x="554.7" y="787.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="557.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$151/1373859138.apply (5 samples, 0.19%)</title><rect x="555.2" y="835.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="558.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (5 samples, 0.19%)</title><rect x="555.2" y="819.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="558.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (5 samples, 0.19%)</title><rect x="555.2" y="803.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="558.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (5 samples, 0.19%)</title><rect x="555.2" y="787.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="558.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (5 samples, 0.19%)</title><rect x="555.2" y="771.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="558.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.19%)</title><rect x="555.2" y="755.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="558.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$587/849392828.run (5 samples, 0.19%)</title><rect x="555.2" y="739.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (5 samples, 0.19%)</title><rect x="555.2" y="723.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="558.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.04%)</title><rect x="555.2" y="707.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="558.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.04%)</title><rect x="555.2" y="691.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="558.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.04%)</title><rect x="555.2" y="675.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="558.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.04%)</title><rect x="555.2" y="659.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="558.2" y="670.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="555.2" y="643.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="558.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.04%)</title><rect x="555.6" y="707.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.04%)</title><rect x="555.6" y="691.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.04%)</title><rect x="555.6" y="675.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.04%)</title><rect x="555.6" y="659.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="558.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.04%)</title><rect x="555.6" y="643.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.04%)</title><rect x="555.6" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="558.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.run (1 samples, 0.04%)</title><rect x="555.6" y="611.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.04%)</title><rect x="555.6" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="558.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (1 samples, 0.04%)</title><rect x="555.6" y="579.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="558.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.04%)</title><rect x="555.6" y="563.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="558.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1 samples, 0.04%)</title><rect x="555.6" y="547.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="558.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1 samples, 0.04%)</title><rect x="555.6" y="531.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="558.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (1 samples, 0.04%)</title><rect x="555.6" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="558.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (1 samples, 0.04%)</title><rect x="555.6" y="499.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="558.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$589/1973295159.run (1 samples, 0.04%)</title><rect x="555.6" y="483.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="558.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.04%)</title><rect x="555.6" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="558.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.04%)</title><rect x="555.6" y="451.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.04%)</title><rect x="555.6" y="435.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="558.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.04%)</title><rect x="555.6" y="419.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="558.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (1 samples, 0.04%)</title><rect x="555.6" y="403.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="558.6" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="555.6" y="387.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.6" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="555.6" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="558.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.04%)</title><rect x="555.6" y="355.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="558.6" y="366.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.04%)</title><rect x="555.6" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="558.6" y="350.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.04%)</title><rect x="555.6" y="323.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="558.6" y="334.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (1 samples, 0.04%)</title><rect x="555.6" y="307.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.6" y="318.0"></text>
</g>
<g>
<title>java/net/Inet4Address.equals (1 samples, 0.04%)</title><rect x="555.6" y="291.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="558.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (3 samples, 0.11%)</title><rect x="556.0" y="707.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="559.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (3 samples, 0.11%)</title><rect x="556.0" y="691.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="559.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.11%)</title><rect x="556.0" y="675.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="559.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.11%)</title><rect x="556.0" y="659.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="559.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.11%)</title><rect x="556.0" y="643.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="559.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.11%)</title><rect x="556.0" y="627.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="559.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (2 samples, 0.08%)</title><rect x="556.0" y="611.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="559.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (2 samples, 0.08%)</title><rect x="556.0" y="595.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="559.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (2 samples, 0.08%)</title><rect x="556.0" y="579.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="559.0" y="590.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (2 samples, 0.08%)</title><rect x="556.0" y="563.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="559.0" y="574.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (2 samples, 0.08%)</title><rect x="556.0" y="547.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="559.0" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.08%)</title><rect x="556.0" y="531.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.0" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.08%)</title><rect x="556.0" y="515.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="559.0" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.08%)</title><rect x="556.0" y="499.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="559.0" y="510.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.08%)</title><rect x="556.0" y="483.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="559.0" y="494.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.08%)</title><rect x="556.0" y="467.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="559.0" y="478.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (2 samples, 0.08%)</title><rect x="556.0" y="451.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="559.0" y="462.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (2 samples, 0.08%)</title><rect x="556.0" y="435.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="559.0" y="446.0"></text>
</g>
<g>
<title>Klass::java_mirror() const (1 samples, 0.04%)</title><rect x="556.5" y="419.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="559.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$599/2146609873.accept (1 samples, 0.04%)</title><rect x="556.9" y="611.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="559.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (1 samples, 0.04%)</title><rect x="556.9" y="595.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="559.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (1 samples, 0.04%)</title><rect x="556.9" y="579.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="559.9" y="590.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (1 samples, 0.04%)</title><rect x="556.9" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="559.9" y="574.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (1 samples, 0.04%)</title><rect x="556.9" y="547.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="559.9" y="558.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (1 samples, 0.04%)</title><rect x="556.9" y="531.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="559.9" y="542.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.04%)</title><rect x="556.9" y="515.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="559.9" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (1 samples, 0.04%)</title><rect x="556.9" y="499.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="559.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (4 samples, 0.15%)</title><rect x="557.4" y="851.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="560.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4 samples, 0.15%)</title><rect x="557.4" y="835.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="560.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$443/90862708.apply (4 samples, 0.15%)</title><rect x="557.4" y="819.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="560.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (4 samples, 0.15%)</title><rect x="557.4" y="803.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="560.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (4 samples, 0.15%)</title><rect x="557.4" y="787.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="560.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$163/1625023506.apply (4 samples, 0.15%)</title><rect x="557.4" y="771.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="560.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (4 samples, 0.15%)</title><rect x="557.4" y="755.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="560.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (4 samples, 0.15%)</title><rect x="557.4" y="739.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="560.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (4 samples, 0.15%)</title><rect x="557.4" y="723.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="560.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (4 samples, 0.15%)</title><rect x="557.4" y="707.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="560.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.04%)</title><rect x="559.2" y="851.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="562.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.04%)</title><rect x="559.2" y="835.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.04%)</title><rect x="559.2" y="819.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="562.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AltResult.&lt;init&gt; (1 samples, 0.04%)</title><rect x="559.2" y="803.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="562.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.04%)</title><rect x="559.6" y="851.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="562.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.04%)</title><rect x="559.6" y="835.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="562.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.04%)</title><rect x="559.6" y="819.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="562.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.04%)</title><rect x="559.6" y="803.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="562.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.04%)</title><rect x="559.6" y="787.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="562.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.04%)</title><rect x="559.6" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="562.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.04%)</title><rect x="559.6" y="755.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.04%)</title><rect x="559.6" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="562.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.04%)</title><rect x="559.6" y="723.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="562.6" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.04%)</title><rect x="559.6" y="707.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="562.6" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="559.6" y="691.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="562.6" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="559.6" y="675.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="562.6" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="559.6" y="659.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="562.6" y="670.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="559.6" y="643.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="562.6" y="654.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="559.6" y="627.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="562.6" y="638.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="559.6" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="562.6" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="559.6" y="595.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="562.6" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="559.6" y="579.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="562.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (1 samples, 0.04%)</title><rect x="560.0" y="915.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (1 samples, 0.04%)</title><rect x="560.0" y="899.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (1 samples, 0.04%)</title><rect x="560.0" y="883.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.11%)</title><rect x="560.5" y="915.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="563.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$548/2025116764.run (2 samples, 0.08%)</title><rect x="560.9" y="899.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="563.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (2 samples, 0.08%)</title><rect x="560.9" y="883.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (1 samples, 0.04%)</title><rect x="561.8" y="931.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="564.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.04%)</title><rect x="561.8" y="915.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.04%)</title><rect x="561.8" y="899.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="564.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.first (1 samples, 0.04%)</title><rect x="561.8" y="883.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="564.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (172 samples, 6.47%)</title><rect x="562.3" y="931.0" width="76.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="565.3" y="942.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (172 samples, 6.47%)</title><rect x="562.3" y="915.0" width="76.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.3" y="926.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (172 samples, 6.47%)</title><rect x="562.3" y="899.0" width="76.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="565.3" y="910.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (171 samples, 6.43%)</title><rect x="562.7" y="883.0" width="75.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="565.7" y="894.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (168 samples, 6.32%)</title><rect x="562.7" y="867.0" width="74.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="565.7" y="878.0">jdk/inte..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (165 samples, 6.21%)</title><rect x="562.7" y="851.0" width="73.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="565.7" y="862.0">java/nio..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (165 samples, 6.21%)</title><rect x="562.7" y="835.0" width="73.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.7" y="846.0">sun/nio/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.08%)</title><rect x="562.7" y="819.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="565.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="563.2" y="803.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="566.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="563.2" y="787.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="566.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="563.2" y="771.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="566.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.04%)</title><rect x="563.2" y="755.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="563.2" y="739.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="563.2" y="723.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="566.2" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (163 samples, 6.13%)</title><rect x="563.6" y="819.0" width="72.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="566.6" y="830.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (163 samples, 6.13%)</title><rect x="563.6" y="803.0" width="72.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="566.6" y="814.0">sun/nio/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="563.6" y="787.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="566.6" y="798.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.04%)</title><rect x="564.0" y="787.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="564.0" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="567.0" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="564.0" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (3 samples, 0.11%)</title><rect x="564.5" y="787.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="567.5" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.11%)</title><rect x="564.5" y="771.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="567.5" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.11%)</title><rect x="564.5" y="755.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setBuffer (2 samples, 0.08%)</title><rect x="565.8" y="787.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="568.8" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (2 samples, 0.08%)</title><rect x="565.8" y="771.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="568.8" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (156 samples, 5.87%)</title><rect x="566.7" y="787.0" width="69.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="569.7" y="798.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (156 samples, 5.87%)</title><rect x="566.7" y="771.0" width="69.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="569.7" y="782.0">sun/nio..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (1 samples, 0.04%)</title><rect x="567.6" y="755.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="570.6" y="766.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (2 samples, 0.08%)</title><rect x="568.0" y="755.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="571.0" y="766.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.08%)</title><rect x="568.9" y="755.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="571.9" y="766.0"></text>
</g>
<g>
<title>writev (149 samples, 5.61%)</title><rect x="569.8" y="755.0" width="66.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="572.8" y="766.0">writev</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (145 samples, 5.46%)</title><rect x="571.6" y="739.0" width="64.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="574.6" y="750.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (145 samples, 5.46%)</title><rect x="571.6" y="723.0" width="64.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="574.6" y="734.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_writev (144 samples, 5.42%)</title><rect x="572.0" y="707.0" width="64.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="575.0" y="718.0">__x64_s..</text>
</g>
<g>
<title>do_writev (144 samples, 5.42%)</title><rect x="572.0" y="691.0" width="64.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="575.0" y="702.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (7 samples, 0.26%)</title><rect x="572.0" y="675.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="575.0" y="686.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.26%)</title><rect x="572.0" y="659.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="575.0" y="670.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.26%)</title><rect x="572.0" y="643.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="575.0" y="654.0"></text>
</g>
<g>
<title>vfs_writev (137 samples, 5.15%)</title><rect x="575.1" y="675.0" width="60.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="578.1" y="686.0">vfs_wr..</text>
</g>
<g>
<title>do_iter_write (135 samples, 5.08%)</title><rect x="576.0" y="659.0" width="60.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="579.0" y="670.0">do_ite..</text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.04%)</title><rect x="576.0" y="643.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="579.0" y="654.0"></text>
</g>
<g>
<title>do_iter_readv_writev (133 samples, 5.00%)</title><rect x="576.5" y="643.0" width="59.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="579.5" y="654.0">do_ite..</text>
</g>
<g>
<title>sock_write_iter (131 samples, 4.93%)</title><rect x="577.4" y="627.0" width="58.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="580.4" y="638.0">sock_w..</text>
</g>
<g>
<title>sock_sendmsg (131 samples, 4.93%)</title><rect x="577.4" y="611.0" width="58.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="580.4" y="622.0">sock_s..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.11%)</title><rect x="577.4" y="595.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="580.4" y="606.0"></text>
</g>
<g>
<title>inet6_sendmsg (128 samples, 4.82%)</title><rect x="578.7" y="595.0" width="56.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="581.7" y="606.0">inet6_..</text>
</g>
<g>
<title>tcp_sendmsg (128 samples, 4.82%)</title><rect x="578.7" y="579.0" width="56.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="581.7" y="590.0">tcp_se..</text>
</g>
<g>
<title>tcp_sendmsg_locked (128 samples, 4.82%)</title><rect x="578.7" y="563.0" width="56.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="581.7" y="574.0">tcp_se..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="580.0" y="547.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="583.0" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="580.0" y="531.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="583.0" y="542.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.04%)</title><rect x="580.5" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="583.5" y="558.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.04%)</title><rect x="580.5" y="531.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="583.5" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.30%)</title><rect x="580.9" y="547.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="583.9" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.26%)</title><rect x="581.4" y="531.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="584.4" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.08%)</title><rect x="581.4" y="515.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="584.4" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="581.4" y="499.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="584.4" y="510.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.04%)</title><rect x="581.8" y="499.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="584.8" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.08%)</title><rect x="582.2" y="515.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="585.2" y="526.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.08%)</title><rect x="583.1" y="515.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="586.1" y="526.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.08%)</title><rect x="583.1" y="499.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="586.1" y="510.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.04%)</title><rect x="584.0" y="515.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="587.0" y="526.0"></text>
</g>
<g>
<title>tcp_push (113 samples, 4.25%)</title><rect x="584.5" y="547.0" width="50.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="587.5" y="558.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (113 samples, 4.25%)</title><rect x="584.5" y="531.0" width="50.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="587.5" y="542.0">__tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.04%)</title><rect x="584.5" y="515.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="587.5" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (112 samples, 4.21%)</title><rect x="584.9" y="515.0" width="49.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="587.9" y="526.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (103 samples, 3.88%)</title><rect x="584.9" y="499.0" width="45.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="587.9" y="510.0">__tc..</text>
</g>
<g>
<title>ip_queue_xmit (100 samples, 3.76%)</title><rect x="585.3" y="483.0" width="44.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="588.3" y="494.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (100 samples, 3.76%)</title><rect x="585.3" y="467.0" width="44.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="588.3" y="478.0">__ip..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="585.3" y="451.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="588.3" y="462.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="585.8" y="451.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="588.8" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="585.8" y="435.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="588.8" y="446.0"></text>
</g>
<g>
<title>ip_local_out (98 samples, 3.69%)</title><rect x="586.2" y="451.0" width="43.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="589.2" y="462.0">ip_l..</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.08%)</title><rect x="586.2" y="435.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="589.2" y="446.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.04%)</title><rect x="586.7" y="419.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="589.7" y="430.0"></text>
</g>
<g>
<title>ip_output (96 samples, 3.61%)</title><rect x="587.1" y="435.0" width="42.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="590.1" y="446.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (95 samples, 3.57%)</title><rect x="587.6" y="419.0" width="42.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="590.6" y="430.0">ip_f..</text>
</g>
<g>
<title>__ip_finish_output (95 samples, 3.57%)</title><rect x="587.6" y="403.0" width="42.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="590.6" y="414.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (95 samples, 3.57%)</title><rect x="587.6" y="387.0" width="42.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="590.6" y="398.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (83 samples, 3.12%)</title><rect x="589.8" y="371.0" width="36.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="592.8" y="382.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (83 samples, 3.12%)</title><rect x="589.8" y="355.0" width="36.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="592.8" y="366.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (82 samples, 3.09%)</title><rect x="590.2" y="339.0" width="36.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="593.2" y="350.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (82 samples, 3.09%)</title><rect x="590.2" y="323.0" width="36.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="593.2" y="334.0">__s..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.04%)</title><rect x="590.7" y="307.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="593.7" y="318.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="591.1" y="307.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="594.1" y="318.0"></text>
</g>
<g>
<title>net_rx_action (79 samples, 2.97%)</title><rect x="591.6" y="307.0" width="35.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="594.6" y="318.0">net..</text>
</g>
<g>
<title>process_backlog (79 samples, 2.97%)</title><rect x="591.6" y="291.0" width="35.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="594.6" y="302.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (77 samples, 2.90%)</title><rect x="592.0" y="275.0" width="34.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="595.0" y="286.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (76 samples, 2.86%)</title><rect x="592.5" y="259.0" width="33.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="595.5" y="270.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.04%)</title><rect x="592.5" y="243.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="595.5" y="254.0"></text>
</g>
<g>
<title>ip_rcv (75 samples, 2.82%)</title><rect x="592.9" y="243.0" width="33.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="595.9" y="254.0">ip..</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.04%)</title><rect x="593.3" y="227.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="596.3" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (73 samples, 2.75%)</title><rect x="593.8" y="227.0" width="32.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="596.8" y="238.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (71 samples, 2.67%)</title><rect x="593.8" y="211.0" width="31.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="596.8" y="222.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (71 samples, 2.67%)</title><rect x="593.8" y="195.0" width="31.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="596.8" y="206.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (71 samples, 2.67%)</title><rect x="593.8" y="179.0" width="31.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="596.8" y="190.0">ip..</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="594.7" y="163.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="597.7" y="174.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.04%)</title><rect x="595.1" y="163.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="598.1" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (67 samples, 2.52%)</title><rect x="595.6" y="163.0" width="29.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="598.6" y="174.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.23%)</title><rect x="596.4" y="147.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="599.4" y="158.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.08%)</title><rect x="598.2" y="131.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="601.2" y="142.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="599.1" y="147.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="602.1" y="158.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="599.1" y="131.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="602.1" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (58 samples, 2.18%)</title><rect x="599.6" y="147.0" width="25.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="602.6" y="158.0">t..</text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.04%)</title><rect x="599.6" y="131.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="602.6" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (57 samples, 2.14%)</title><rect x="600.0" y="131.0" width="25.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="603.0" y="142.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.08%)</title><rect x="601.3" y="115.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="604.3" y="126.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.08%)</title><rect x="601.3" y="99.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="604.3" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.08%)</title><rect x="601.3" y="83.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="604.3" y="94.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.08%)</title><rect x="601.3" y="67.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="604.3" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="601.8" y="51.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="604.8" y="62.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.04%)</title><rect x="602.2" y="115.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="605.2" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (41 samples, 1.54%)</title><rect x="602.7" y="115.0" width="18.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="605.7" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (41 samples, 1.54%)</title><rect x="602.7" y="99.0" width="18.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="605.7" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (41 samples, 1.54%)</title><rect x="602.7" y="83.0" width="18.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="605.7" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (40 samples, 1.50%)</title><rect x="603.1" y="67.0" width="17.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="606.1" y="78.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.30%)</title><rect x="620.9" y="115.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="623.9" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.11%)</title><rect x="622.6" y="99.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="625.6" y="110.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.08%)</title><rect x="623.1" y="83.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="626.1" y="94.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.08%)</title><rect x="623.1" y="67.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="626.1" y="78.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.08%)</title><rect x="623.1" y="51.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="626.1" y="62.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="623.5" y="35.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="626.5" y="46.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.04%)</title><rect x="624.0" y="99.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="627.0" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.08%)</title><rect x="624.4" y="115.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="627.4" y="126.0"></text>
</g>
<g>
<title>tcp_grow_window.isra.0 (1 samples, 0.04%)</title><rect x="624.9" y="99.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="627.9" y="110.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.04%)</title><rect x="625.3" y="211.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="628.3" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.04%)</title><rect x="625.7" y="211.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="628.7" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.04%)</title><rect x="626.2" y="275.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="629.2" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (7 samples, 0.26%)</title><rect x="626.6" y="371.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="629.6" y="382.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.26%)</title><rect x="626.6" y="355.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="629.6" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.15%)</title><rect x="627.1" y="339.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="630.1" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.11%)</title><rect x="627.5" y="323.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="630.5" y="334.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="627.5" y="307.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="630.5" y="318.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.08%)</title><rect x="628.0" y="307.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="631.0" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.08%)</title><rect x="628.0" y="291.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="631.0" y="302.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.08%)</title><rect x="628.0" y="275.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="631.0" y="286.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.04%)</title><rect x="628.9" y="339.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="631.9" y="350.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.04%)</title><rect x="629.3" y="339.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="632.3" y="350.0"></text>
</g>
<g>
<title>skb_push (2 samples, 0.08%)</title><rect x="629.7" y="483.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="632.7" y="494.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.11%)</title><rect x="630.6" y="499.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="633.6" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.08%)</title><rect x="631.1" y="483.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="634.1" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.08%)</title><rect x="631.1" y="467.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="634.1" y="478.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.08%)</title><rect x="631.1" y="451.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="634.1" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.08%)</title><rect x="631.1" y="435.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="634.1" y="446.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.04%)</title><rect x="632.0" y="499.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="635.0" y="510.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.04%)</title><rect x="632.4" y="499.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="635.4" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.08%)</title><rect x="632.9" y="499.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="635.9" y="510.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="633.7" y="499.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="636.7" y="510.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="633.7" y="483.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="636.7" y="494.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.04%)</title><rect x="634.2" y="499.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="637.2" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.08%)</title><rect x="634.6" y="547.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="637.6" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="634.6" y="531.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="637.6" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="635.1" y="531.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="638.1" y="542.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.04%)</title><rect x="635.5" y="643.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="638.5" y="654.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.04%)</title><rect x="635.5" y="627.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="638.5" y="638.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.04%)</title><rect x="635.5" y="611.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="638.5" y="622.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.04%)</title><rect x="635.5" y="595.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="638.5" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3 samples, 0.11%)</title><rect x="636.0" y="851.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="639.0" y="862.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.04%)</title><rect x="636.0" y="835.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="639.0" y="846.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (2 samples, 0.08%)</title><rect x="636.4" y="835.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.4" y="846.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (2 samples, 0.08%)</title><rect x="636.4" y="819.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="639.4" y="830.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.04%)</title><rect x="636.8" y="803.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="639.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (3 samples, 0.11%)</title><rect x="637.3" y="867.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="640.3" y="878.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.04%)</title><rect x="637.3" y="851.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="640.3" y="862.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (1 samples, 0.04%)</title><rect x="637.3" y="835.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="640.3" y="846.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (2 samples, 0.08%)</title><rect x="637.7" y="851.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="640.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (294 samples, 11.06%)</title><rect x="638.6" y="1107.0" width="130.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="641.6" y="1118.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (291 samples, 10.95%)</title><rect x="640.0" y="1091.0" width="129.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.0" y="1102.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (2 samples, 0.08%)</title><rect x="640.0" y="1075.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (1 samples, 0.04%)</title><rect x="640.0" y="1059.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.04%)</title><rect x="640.4" y="1059.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.04%)</title><rect x="640.4" y="1043.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="643.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.04%)</title><rect x="640.4" y="1027.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.04%)</title><rect x="640.4" y="1011.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="643.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.04%)</title><rect x="640.4" y="995.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="643.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.04%)</title><rect x="640.4" y="979.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="643.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.04%)</title><rect x="640.4" y="963.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="643.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (143 samples, 5.38%)</title><rect x="640.8" y="1075.0" width="63.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="643.8" y="1086.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.run (143 samples, 5.38%)</title><rect x="640.8" y="1059.0" width="63.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.8" y="1070.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (143 samples, 5.38%)</title><rect x="640.8" y="1043.0" width="63.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="643.8" y="1054.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.set (1 samples, 0.04%)</title><rect x="641.3" y="1027.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="644.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (1 samples, 0.04%)</title><rect x="641.7" y="1027.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="644.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onReadError (1 samples, 0.04%)</title><rect x="641.7" y="1011.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="644.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.wrapWithExtraDetail (1 samples, 0.04%)</title><rect x="641.7" y="995.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader$$Lambda$570/1757060445.get (1 samples, 0.04%)</title><rect x="641.7" y="979.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="644.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.currentStateMessage (1 samples, 0.04%)</title><rect x="641.7" y="963.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="644.7" y="974.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.04%)</title><rect x="641.7" y="947.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="644.7" y="958.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.04%)</title><rect x="641.7" y="931.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="644.7" y="942.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.04%)</title><rect x="641.7" y="915.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="644.7" y="926.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.04%)</title><rect x="641.7" y="899.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="644.7" y="910.0"></text>
</g>
<g>
<title>java/util/Locale.equals (1 samples, 0.04%)</title><rect x="641.7" y="883.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="644.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (36 samples, 1.35%)</title><rect x="642.2" y="1027.0" width="16.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="645.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.get (1 samples, 0.04%)</title><rect x="642.2" y="1011.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="645.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (35 samples, 1.32%)</title><rect x="642.6" y="1011.0" width="15.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="645.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (35 samples, 1.32%)</title><rect x="642.6" y="995.0" width="15.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="645.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (35 samples, 1.32%)</title><rect x="642.6" y="979.0" width="15.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (34 samples, 1.28%)</title><rect x="643.1" y="963.0" width="15.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="646.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (34 samples, 1.28%)</title><rect x="643.1" y="947.0" width="15.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="646.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (33 samples, 1.24%)</title><rect x="643.1" y="931.0" width="14.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (33 samples, 1.24%)</title><rect x="643.1" y="915.0" width="14.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.04%)</title><rect x="643.1" y="899.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.1" y="910.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.04%)</title><rect x="643.1" y="883.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.1" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (1 samples, 0.04%)</title><rect x="643.1" y="867.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.1" y="878.0"></text>
</g>
<g>
<title>java/nio/channels/SelectionKey.attach (1 samples, 0.04%)</title><rect x="643.1" y="851.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="646.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (27 samples, 1.02%)</title><rect x="643.5" y="899.0" width="12.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="646.5" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (27 samples, 1.02%)</title><rect x="643.5" y="883.0" width="12.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.5" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (27 samples, 1.02%)</title><rect x="643.5" y="867.0" width="12.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.5" y="878.0"></text>
</g>
<g>
<title>__write (27 samples, 1.02%)</title><rect x="643.5" y="851.0" width="12.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="646.5" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.79%)</title><rect x="646.2" y="835.0" width="9.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="649.2" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.79%)</title><rect x="646.2" y="819.0" width="9.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="649.2" y="830.0"></text>
</g>
<g>
<title>__x64_sys_write (20 samples, 0.75%)</title><rect x="646.2" y="803.0" width="8.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="649.2" y="814.0"></text>
</g>
<g>
<title>ksys_write (20 samples, 0.75%)</title><rect x="646.2" y="787.0" width="8.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="649.2" y="798.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.08%)</title><rect x="646.2" y="771.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="649.2" y="782.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="646.2" y="755.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="649.2" y="766.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.08%)</title><rect x="646.2" y="739.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="649.2" y="750.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="647.1" y="771.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="650.1" y="782.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.08%)</title><rect x="647.5" y="771.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="650.5" y="782.0"></text>
</g>
<g>
<title>vfs_write (15 samples, 0.56%)</title><rect x="648.4" y="771.0" width="6.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="651.4" y="782.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.04%)</title><rect x="648.4" y="755.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="651.4" y="766.0"></text>
</g>
<g>
<title>__vfs_write (13 samples, 0.49%)</title><rect x="648.8" y="755.0" width="5.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="651.8" y="766.0"></text>
</g>
<g>
<title>new_sync_write (13 samples, 0.49%)</title><rect x="648.8" y="739.0" width="5.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="651.8" y="750.0"></text>
</g>
<g>
<title>pipe_write (12 samples, 0.45%)</title><rect x="649.3" y="723.0" width="5.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="652.3" y="734.0"></text>
</g>
<g>
<title>__wake_up_sync_key (11 samples, 0.41%)</title><rect x="649.3" y="707.0" width="4.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="652.3" y="718.0"></text>
</g>
<g>
<title>__wake_up_common_lock (11 samples, 0.41%)</title><rect x="649.3" y="691.0" width="4.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="652.3" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.41%)</title><rect x="649.3" y="675.0" width="4.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="652.3" y="686.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.04%)</title><rect x="654.2" y="707.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="657.2" y="718.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.04%)</title><rect x="654.6" y="755.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="657.6" y="766.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.04%)</title><rect x="654.6" y="739.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="657.6" y="750.0"></text>
</g>
<g>
<title>ksys_write (1 samples, 0.04%)</title><rect x="655.0" y="803.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="658.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.abort (5 samples, 0.19%)</title><rect x="655.5" y="899.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="658.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalError (5 samples, 0.19%)</title><rect x="655.5" y="883.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="658.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalError (5 samples, 0.19%)</title><rect x="655.5" y="867.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="658.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (5 samples, 0.19%)</title><rect x="655.5" y="851.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="658.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.04%)</title><rect x="657.7" y="931.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="660.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.04%)</title><rect x="657.7" y="915.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.7" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="657.7" y="899.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.7" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="657.7" y="883.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="660.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.08%)</title><rect x="658.2" y="1027.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="661.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (102 samples, 3.84%)</title><rect x="659.0" y="1027.0" width="45.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="662.0" y="1038.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (102 samples, 3.84%)</title><rect x="659.0" y="1011.0" width="45.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="662.0" y="1022.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.isDone (1 samples, 0.04%)</title><rect x="659.0" y="995.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (101 samples, 3.80%)</title><rect x="659.5" y="995.0" width="44.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.5" y="1006.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (101 samples, 3.80%)</title><rect x="659.5" y="979.0" width="44.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="662.5" y="990.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (50 samples, 1.88%)</title><rect x="659.5" y="963.0" width="22.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="662.5" y="974.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (50 samples, 1.88%)</title><rect x="659.5" y="947.0" width="22.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="662.5" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (50 samples, 1.88%)</title><rect x="659.5" y="931.0" width="22.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="662.5" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (50 samples, 1.88%)</title><rect x="659.5" y="915.0" width="22.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="662.5" y="926.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.08%)</title><rect x="659.5" y="899.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="662.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.08%)</title><rect x="659.5" y="883.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.08%)</title><rect x="659.5" y="867.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.localInit (2 samples, 0.08%)</title><rect x="659.5" y="851.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.mix64 (2 samples, 0.08%)</title><rect x="659.5" y="835.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="662.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (48 samples, 1.81%)</title><rect x="660.4" y="899.0" width="21.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="663.4" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (48 samples, 1.81%)</title><rect x="660.4" y="883.0" width="21.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.4" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (48 samples, 1.81%)</title><rect x="660.4" y="867.0" width="21.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="663.4" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (2 samples, 0.08%)</title><rect x="660.4" y="851.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.4" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.08%)</title><rect x="660.4" y="835.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="663.4" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.08%)</title><rect x="660.4" y="819.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (3 samples, 0.11%)</title><rect x="661.3" y="851.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="664.3" y="862.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.11%)</title><rect x="661.3" y="835.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="664.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (41 samples, 1.54%)</title><rect x="662.6" y="851.0" width="18.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="665.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (41 samples, 1.54%)</title><rect x="662.6" y="835.0" width="18.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="665.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (33 samples, 1.24%)</title><rect x="664.4" y="819.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="667.4" y="830.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.11%)</title><rect x="664.8" y="803.0" width="1.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="667.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.04%)</title><rect x="666.1" y="803.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="669.1" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="666.1" y="787.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="666.1" y="771.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="669.1" y="782.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.04%)</title><rect x="666.1" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="669.1" y="766.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$48/1970436060.apply (1 samples, 0.04%)</title><rect x="666.6" y="803.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="669.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$533/1265756444.apply (1 samples, 0.04%)</title><rect x="667.0" y="803.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="670.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (1 samples, 0.04%)</title><rect x="667.0" y="787.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="670.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (1 samples, 0.04%)</title><rect x="667.0" y="771.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.04%)</title><rect x="667.0" y="755.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="670.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.04%)</title><rect x="667.0" y="739.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="670.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.04%)</title><rect x="667.0" y="723.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="670.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$151/1373859138.apply (18 samples, 0.68%)</title><rect x="667.5" y="803.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="670.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (16 samples, 0.60%)</title><rect x="668.4" y="787.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="671.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (15 samples, 0.56%)</title><rect x="668.4" y="771.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="671.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (15 samples, 0.56%)</title><rect x="668.4" y="755.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.4" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$664/523215452.apply (2 samples, 0.08%)</title><rect x="668.4" y="739.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="671.4" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (2 samples, 0.08%)</title><rect x="668.4" y="723.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="671.4" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (2 samples, 0.08%)</title><rect x="668.4" y="707.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="671.4" y="718.0"></text>
</g>
<g>
<title>java/util/function/Function.identity (1 samples, 0.04%)</title><rect x="668.4" y="691.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="671.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="668.4" y="675.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="671.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/503195940.invoke (1 samples, 0.04%)</title><rect x="668.4" y="659.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="671.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (1 samples, 0.04%)</title><rect x="668.8" y="691.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="671.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (13 samples, 0.49%)</title><rect x="669.3" y="739.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="672.3" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (4 samples, 0.15%)</title><rect x="669.3" y="723.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="672.3" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.08%)</title><rect x="669.3" y="707.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="672.3" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.08%)</title><rect x="669.3" y="691.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="672.3" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.08%)</title><rect x="669.3" y="675.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.3" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.08%)</title><rect x="669.3" y="659.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="672.3" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.04%)</title><rect x="669.7" y="643.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="672.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="669.7" y="627.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="672.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="669.7" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="672.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.04%)</title><rect x="669.7" y="595.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="672.7" y="606.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.08%)</title><rect x="670.1" y="707.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="673.1" y="718.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.04%)</title><rect x="670.6" y="691.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="673.6" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="670.6" y="675.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="673.6" y="686.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.04%)</title><rect x="670.6" y="659.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="673.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.04%)</title><rect x="671.0" y="723.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="674.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.04%)</title><rect x="671.0" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="674.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.04%)</title><rect x="671.0" y="691.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="674.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.04%)</title><rect x="671.0" y="675.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="674.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.04%)</title><rect x="671.0" y="659.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="674.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.30%)</title><rect x="671.5" y="723.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="674.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$587/849392828.run (8 samples, 0.30%)</title><rect x="671.5" y="707.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="674.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (8 samples, 0.30%)</title><rect x="671.5" y="691.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="674.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.08%)</title><rect x="671.5" y="675.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="674.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.08%)</title><rect x="671.5" y="659.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="674.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$592/820455260.get$Lambda (1 samples, 0.04%)</title><rect x="671.5" y="643.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="674.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$592/820455260.&lt;init&gt; (1 samples, 0.04%)</title><rect x="671.5" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="674.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$597/999361704.get$Lambda (1 samples, 0.04%)</title><rect x="671.9" y="643.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="674.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.04%)</title><rect x="672.4" y="675.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="675.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.04%)</title><rect x="672.4" y="659.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="675.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="672.4" y="643.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="675.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="672.4" y="627.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="675.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (2 samples, 0.08%)</title><rect x="672.8" y="675.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="675.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (1 samples, 0.04%)</title><rect x="673.3" y="659.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="676.3" y="670.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (1 samples, 0.04%)</title><rect x="673.3" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.3" y="654.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (1 samples, 0.04%)</title><rect x="673.3" y="627.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="676.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (2 samples, 0.08%)</title><rect x="673.7" y="675.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="676.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (1 samples, 0.04%)</title><rect x="674.1" y="659.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="677.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="674.1" y="643.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="677.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/645495744.invoke (1 samples, 0.04%)</title><rect x="674.1" y="627.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="677.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1632808720.invoke (1 samples, 0.04%)</title><rect x="674.1" y="611.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="677.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/550402284.invoke (1 samples, 0.04%)</title><rect x="674.1" y="595.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="677.1" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="674.1" y="579.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="677.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.04%)</title><rect x="674.1" y="563.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="677.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.toString (1 samples, 0.04%)</title><rect x="674.1" y="547.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="677.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.dbgString (1 samples, 0.04%)</title><rect x="674.1" y="531.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="677.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1473981203.linkToTargetMethod (1 samples, 0.04%)</title><rect x="674.1" y="515.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2129442232.invoke (1 samples, 0.04%)</title><rect x="674.1" y="499.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1204481453.invokeStatic (1 samples, 0.04%)</title><rect x="674.1" y="483.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="677.1" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.04%)</title><rect x="674.1" y="467.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="677.1" y="478.0"></text>
</g>
<g>
<title>java/lang/Long.stringSize (1 samples, 0.04%)</title><rect x="674.1" y="451.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="677.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1 samples, 0.04%)</title><rect x="674.6" y="675.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="677.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (1 samples, 0.04%)</title><rect x="674.6" y="659.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="677.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (1 samples, 0.04%)</title><rect x="675.0" y="771.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="678.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$446/989563096.apply (8 samples, 0.30%)</title><rect x="675.5" y="803.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="678.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (8 samples, 0.30%)</title><rect x="675.5" y="787.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="678.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (8 samples, 0.30%)</title><rect x="675.5" y="771.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="678.5" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.next (1 samples, 0.04%)</title><rect x="675.5" y="755.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="678.5" y="766.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.previous (1 samples, 0.04%)</title><rect x="675.5" y="739.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="678.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (7 samples, 0.26%)</title><rect x="675.9" y="755.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="678.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (7 samples, 0.26%)</title><rect x="675.9" y="739.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="678.9" y="750.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (6 samples, 0.23%)</title><rect x="676.4" y="723.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.4" y="734.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (6 samples, 0.23%)</title><rect x="676.4" y="707.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="679.4" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (6 samples, 0.23%)</title><rect x="676.4" y="691.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.4" y="702.0"></text>
</g>
<g>
<title>JVM_IHashCode (3 samples, 0.11%)</title><rect x="676.4" y="675.0" width="1.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="679.4" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (2 samples, 0.08%)</title><rect x="676.8" y="659.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="679.8" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.08%)</title><rect x="677.7" y="675.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="680.7" y="686.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (1 samples, 0.04%)</title><rect x="678.6" y="675.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="681.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2 samples, 0.08%)</title><rect x="679.0" y="819.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="682.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.08%)</title><rect x="679.0" y="803.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="682.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$449/843290145.apply (2 samples, 0.08%)</title><rect x="679.0" y="787.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="682.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (2 samples, 0.08%)</title><rect x="679.0" y="771.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="682.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (1 samples, 0.04%)</title><rect x="679.0" y="755.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="682.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (1 samples, 0.04%)</title><rect x="679.0" y="739.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.0" y="750.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (1 samples, 0.04%)</title><rect x="679.0" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="682.0" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (1 samples, 0.04%)</title><rect x="679.0" y="707.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="682.0" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (1 samples, 0.04%)</title><rect x="679.0" y="691.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="682.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.04%)</title><rect x="679.5" y="755.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="682.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.04%)</title><rect x="679.5" y="739.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="682.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.04%)</title><rect x="679.5" y="723.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="682.5" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="679.5" y="707.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="682.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.08%)</title><rect x="679.9" y="819.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="682.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.04%)</title><rect x="680.4" y="803.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.04%)</title><rect x="680.4" y="787.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="683.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AltResult.&lt;init&gt; (1 samples, 0.04%)</title><rect x="680.4" y="771.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$553/1767458720.apply (2 samples, 0.08%)</title><rect x="680.8" y="851.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="683.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (2 samples, 0.08%)</title><rect x="680.8" y="835.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="683.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.04%)</title><rect x="680.8" y="819.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (1 samples, 0.04%)</title><rect x="681.2" y="819.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="684.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="681.2" y="803.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="684.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (51 samples, 1.92%)</title><rect x="681.7" y="963.0" width="22.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="684.7" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (8 samples, 0.30%)</title><rect x="682.6" y="947.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="685.6" y="958.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.11%)</title><rect x="683.9" y="931.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.9" y="942.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.11%)</title><rect x="683.9" y="915.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="686.9" y="926.0"></text>
</g>
<g>
<title>java/nio/Buffer.hasRemaining (1 samples, 0.04%)</title><rect x="685.2" y="931.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="688.2" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="685.7" y="931.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="688.7" y="942.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (1 samples, 0.04%)</title><rect x="685.7" y="915.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="688.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (2 samples, 0.08%)</title><rect x="686.1" y="947.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="689.1" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.08%)</title><rect x="686.1" y="931.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="689.1" y="942.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (1 samples, 0.04%)</title><rect x="686.6" y="915.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="689.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (2 samples, 0.08%)</title><rect x="687.0" y="947.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.0" y="958.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.08%)</title><rect x="687.0" y="931.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="690.0" y="942.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.08%)</title><rect x="687.0" y="915.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="690.0" y="926.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.08%)</title><rect x="687.0" y="899.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="690.0" y="910.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.08%)</title><rect x="687.0" y="883.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="690.0" y="894.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (2 samples, 0.08%)</title><rect x="687.0" y="867.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (15 samples, 0.56%)</title><rect x="687.9" y="947.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.9" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (14 samples, 0.53%)</title><rect x="688.3" y="931.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.3" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (14 samples, 0.53%)</title><rect x="688.3" y="915.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.3" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (1 samples, 0.04%)</title><rect x="688.8" y="899.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.8" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (1 samples, 0.04%)</title><rect x="688.8" y="883.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="691.8" y="894.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="688.8" y="867.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="691.8" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (10 samples, 0.38%)</title><rect x="689.2" y="899.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="692.2" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.accept (10 samples, 0.38%)</title><rect x="689.2" y="883.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="692.2" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (10 samples, 0.38%)</title><rect x="689.2" y="867.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="692.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.04%)</title><rect x="689.2" y="851.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="692.2" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.04%)</title><rect x="689.2" y="835.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="692.2" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="689.2" y="819.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="692.2" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.19%)</title><rect x="689.7" y="851.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="692.7" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.19%)</title><rect x="689.7" y="835.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="692.7" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.get$Lambda (5 samples, 0.19%)</title><rect x="689.7" y="819.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="692.7" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.&lt;init&gt; (5 samples, 0.19%)</title><rect x="689.7" y="803.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="692.7" y="814.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.08%)</title><rect x="689.7" y="787.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="692.7" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.04%)</title><rect x="690.6" y="787.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="693.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$79/361268035.test (2 samples, 0.08%)</title><rect x="691.0" y="787.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="694.0" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.04%)</title><rect x="691.9" y="851.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="694.9" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.accept (1 samples, 0.04%)</title><rect x="691.9" y="835.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="694.9" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.04%)</title><rect x="691.9" y="819.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="694.9" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="691.9" y="803.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.9" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="691.9" y="787.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="694.9" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="691.9" y="771.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="694.9" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="691.9" y="755.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="694.9" y="766.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="691.9" y="739.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="694.9" y="750.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.04%)</title><rect x="692.3" y="851.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.3" y="862.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.04%)</title><rect x="692.3" y="835.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="695.3" y="846.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.04%)</title><rect x="692.3" y="819.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.3" y="830.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListN.&lt;init&gt; (1 samples, 0.04%)</title><rect x="692.3" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.3" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.08%)</title><rect x="692.8" y="851.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.8" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (1 samples, 0.04%)</title><rect x="692.8" y="835.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="695.8" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.04%)</title><rect x="693.2" y="835.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="696.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="693.2" y="819.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="696.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="693.2" y="803.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="696.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.04%)</title><rect x="693.2" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="696.2" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.04%)</title><rect x="693.2" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.2" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.04%)</title><rect x="693.2" y="755.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="696.2" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.04%)</title><rect x="693.2" y="739.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="696.2" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (2 samples, 0.08%)</title><rect x="693.7" y="899.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrLF (3 samples, 0.11%)</title><rect x="694.6" y="947.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="697.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (19 samples, 0.71%)</title><rect x="695.9" y="947.0" width="8.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="698.9" y="958.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.08%)</title><rect x="695.9" y="931.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="698.9" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.08%)</title><rect x="695.9" y="915.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.9" y="926.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.08%)</title><rect x="695.9" y="899.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="698.9" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.04%)</title><rect x="696.8" y="931.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="699.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (15 samples, 0.56%)</title><rect x="697.2" y="931.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="700.2" y="942.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.08%)</title><rect x="697.2" y="915.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="700.2" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="697.7" y="899.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.7" y="910.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (5 samples, 0.19%)</title><rect x="698.1" y="915.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="701.1" y="926.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.04%)</title><rect x="698.1" y="899.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="701.1" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.08%)</title><rect x="698.6" y="899.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="701.6" y="910.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.08%)</title><rect x="699.4" y="899.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="702.4" y="910.0"></text>
</g>
<g>
<title>java/lang/String.trim (5 samples, 0.19%)</title><rect x="700.3" y="915.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="703.3" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (4 samples, 0.15%)</title><rect x="700.8" y="899.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="703.8" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="702.6" y="915.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="705.6" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="702.6" y="899.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="705.6" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="702.6" y="883.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.6" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="702.6" y="867.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="705.6" y="878.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="702.6" y="851.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="705.6" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.08%)</title><rect x="703.0" y="915.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$577/496477348.apply (1 samples, 0.04%)</title><rect x="703.4" y="899.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="706.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (1 samples, 0.04%)</title><rect x="703.4" y="883.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="706.4" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.04%)</title><rect x="703.4" y="867.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="706.4" y="878.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="703.9" y="931.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="706.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (146 samples, 5.49%)</title><rect x="704.3" y="1075.0" width="64.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.3" y="1086.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (146 samples, 5.49%)</title><rect x="704.3" y="1059.0" width="64.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="707.3" y="1070.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (146 samples, 5.49%)</title><rect x="704.3" y="1043.0" width="64.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="707.3" y="1054.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.run (146 samples, 5.49%)</title><rect x="704.3" y="1027.0" width="64.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="707.3" y="1038.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (146 samples, 5.49%)</title><rect x="704.3" y="1011.0" width="64.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.3" y="1022.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (1 samples, 0.04%)</title><rect x="704.3" y="995.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="707.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.04%)</title><rect x="704.3" y="979.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="707.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (1 samples, 0.04%)</title><rect x="704.8" y="995.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="707.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onReadError (1 samples, 0.04%)</title><rect x="704.8" y="979.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="707.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.wrapWithExtraDetail (1 samples, 0.04%)</title><rect x="704.8" y="963.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader$$Lambda$570/1757060445.get (1 samples, 0.04%)</title><rect x="704.8" y="947.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="707.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.currentStateMessage (1 samples, 0.04%)</title><rect x="704.8" y="931.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="707.8" y="942.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.04%)</title><rect x="704.8" y="915.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.8" y="926.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.04%)</title><rect x="704.8" y="899.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="707.8" y="910.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.04%)</title><rect x="704.8" y="883.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.8" y="894.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.04%)</title><rect x="704.8" y="867.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.8" y="878.0"></text>
</g>
<g>
<title>java/util/Locale.equals (1 samples, 0.04%)</title><rect x="704.8" y="851.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5 samples, 0.19%)</title><rect x="705.2" y="995.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (1 samples, 0.04%)</title><rect x="705.7" y="979.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="708.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (1 samples, 0.04%)</title><rect x="705.7" y="963.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="708.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.04%)</title><rect x="705.7" y="947.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="708.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (3 samples, 0.11%)</title><rect x="706.1" y="979.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="709.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (3 samples, 0.11%)</title><rect x="706.1" y="963.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="709.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (3 samples, 0.11%)</title><rect x="706.1" y="947.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="709.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (2 samples, 0.08%)</title><rect x="706.1" y="931.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="709.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.04%)</title><rect x="706.5" y="915.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="709.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (1 samples, 0.04%)</title><rect x="706.5" y="899.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="709.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (1 samples, 0.04%)</title><rect x="706.5" y="883.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.weakCompareAndSetVolatile (1 samples, 0.04%)</title><rect x="706.5" y="867.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="709.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onSubscribe (1 samples, 0.04%)</title><rect x="707.0" y="931.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="710.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.04%)</title><rect x="707.0" y="915.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="710.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (1 samples, 0.04%)</title><rect x="707.0" y="899.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="710.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (1 samples, 0.04%)</title><rect x="707.0" y="883.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="710.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand$$Lambda$401/1646288363.applyAsLong (1 samples, 0.04%)</title><rect x="707.0" y="867.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="710.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.lambda$increase$0 (1 samples, 0.04%)</title><rect x="707.0" y="851.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="710.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (139 samples, 5.23%)</title><rect x="707.4" y="995.0" width="61.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="710.4" y="1006.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (139 samples, 5.23%)</title><rect x="707.4" y="979.0" width="61.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="710.4" y="990.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (139 samples, 5.23%)</title><rect x="707.4" y="963.0" width="61.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.4" y="974.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (139 samples, 5.23%)</title><rect x="707.4" y="947.0" width="61.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="710.4" y="958.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (139 samples, 5.23%)</title><rect x="707.4" y="931.0" width="61.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="710.4" y="942.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (139 samples, 5.23%)</title><rect x="707.4" y="915.0" width="61.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="710.4" y="926.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$589/1973295159.run (65 samples, 2.45%)</title><rect x="707.9" y="899.0" width="28.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="710.9" y="910.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (65 samples, 2.45%)</title><rect x="707.9" y="883.0" width="28.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="710.9" y="894.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (65 samples, 2.45%)</title><rect x="707.9" y="867.0" width="28.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="710.9" y="878.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (5 samples, 0.19%)</title><rect x="707.9" y="851.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="710.9" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.04%)</title><rect x="707.9" y="835.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="710.9" y="846.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.04%)</title><rect x="707.9" y="819.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="710.9" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.04%)</title><rect x="707.9" y="803.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.9" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.04%)</title><rect x="707.9" y="787.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="710.9" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.04%)</title><rect x="707.9" y="771.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="710.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="707.9" y="755.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="710.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="707.9" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.04%)</title><rect x="707.9" y="723.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="710.9" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.08%)</title><rect x="708.3" y="835.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="711.3" y="846.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.04%)</title><rect x="708.3" y="819.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="711.3" y="830.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="708.3" y="803.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="711.3" y="814.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.04%)</title><rect x="708.3" y="787.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="711.3" y="798.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.04%)</title><rect x="708.8" y="819.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="711.8" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.04%)</title><rect x="708.8" y="803.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="711.8" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.04%)</title><rect x="708.8" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="711.8" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.04%)</title><rect x="708.8" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="711.8" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.08%)</title><rect x="709.2" y="835.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="712.2" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.08%)</title><rect x="709.2" y="819.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="712.2" y="830.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.08%)</title><rect x="709.2" y="803.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.2" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.08%)</title><rect x="709.2" y="787.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="712.2" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.08%)</title><rect x="709.2" y="771.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="712.2" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.04%)</title><rect x="709.2" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="712.2" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.04%)</title><rect x="709.2" y="739.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.2" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (1 samples, 0.04%)</title><rect x="709.2" y="723.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="712.2" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (1 samples, 0.04%)</title><rect x="709.7" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="712.7" y="766.0"></text>
</g>
<g>
<title>java/util/Optional.map (1 samples, 0.04%)</title><rect x="710.1" y="851.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="713.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$$Lambda$609/1366582075.apply (1 samples, 0.04%)</title><rect x="710.1" y="835.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="713.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.lambda$closeOrReturnToCache$2 (1 samples, 0.04%)</title><rect x="710.1" y="819.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="713.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="710.1" y="803.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="713.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="710.1" y="787.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="713.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="710.1" y="771.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (57 samples, 2.14%)</title><rect x="710.5" y="851.0" width="25.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="713.5" y="862.0">j..</text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.04%)</title><rect x="710.5" y="835.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="713.5" y="846.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.04%)</title><rect x="710.5" y="819.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="713.5" y="830.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.04%)</title><rect x="710.5" y="803.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="713.5" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.04%)</title><rect x="710.5" y="787.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="713.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (56 samples, 2.11%)</title><rect x="711.0" y="835.0" width="24.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="714.0" y="846.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (18 samples, 0.68%)</title><rect x="711.0" y="819.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="714.0" y="830.0"></text>
</g>
<g>
<title>java/time/Instant.isAfter (6 samples, 0.23%)</title><rect x="711.4" y="803.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="714.4" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.compareTo (6 samples, 0.23%)</title><rect x="711.4" y="787.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="714.4" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (1 samples, 0.04%)</title><rect x="714.1" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="717.1" y="814.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (1 samples, 0.04%)</title><rect x="714.1" y="787.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="717.1" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (8 samples, 0.30%)</title><rect x="714.5" y="803.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="717.5" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (8 samples, 0.30%)</title><rect x="714.5" y="787.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="717.5" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (8 samples, 0.30%)</title><rect x="714.5" y="771.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="717.5" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (2 samples, 0.08%)</title><rect x="718.1" y="803.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="721.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (1 samples, 0.04%)</title><rect x="719.0" y="819.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="722.0" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="719.0" y="803.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="722.0" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="719.0" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="722.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.04%)</title><rect x="719.0" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="722.0" y="782.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.04%)</title><rect x="719.0" y="755.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="722.0" y="766.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.04%)</title><rect x="719.0" y="739.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="722.0" y="750.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (1 samples, 0.04%)</title><rect x="719.0" y="723.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.0" y="734.0"></text>
</g>
<g>
<title>java/net/Inet4Address.equals (1 samples, 0.04%)</title><rect x="719.0" y="707.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="722.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (37 samples, 1.39%)</title><rect x="719.4" y="819.0" width="16.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="722.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (37 samples, 1.39%)</title><rect x="719.4" y="803.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (6 samples, 0.23%)</title><rect x="719.4" y="787.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="722.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (6 samples, 0.23%)</title><rect x="719.4" y="771.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="722.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (6 samples, 0.23%)</title><rect x="719.4" y="755.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="722.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.08%)</title><rect x="720.8" y="739.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="723.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.08%)</title><rect x="720.8" y="723.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="723.8" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="720.8" y="707.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="723.8" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.04%)</title><rect x="721.2" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="724.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (1 samples, 0.04%)</title><rect x="721.6" y="739.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="724.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (31 samples, 1.17%)</title><rect x="722.1" y="787.0" width="13.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (31 samples, 1.17%)</title><rect x="722.1" y="771.0" width="13.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="725.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (1 samples, 0.04%)</title><rect x="722.1" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.1" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="722.1" y="739.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="725.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (30 samples, 1.13%)</title><rect x="722.5" y="755.0" width="13.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="725.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (29 samples, 1.09%)</title><rect x="723.0" y="739.0" width="12.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="726.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (29 samples, 1.09%)</title><rect x="723.0" y="723.0" width="12.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="726.0" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (29 samples, 1.09%)</title><rect x="723.0" y="707.0" width="12.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="726.0" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (29 samples, 1.09%)</title><rect x="723.0" y="691.0" width="12.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="726.0" y="702.0"></text>
</g>
<g>
<title>__write (29 samples, 1.09%)</title><rect x="723.0" y="675.0" width="12.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="726.0" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 1.02%)</title><rect x="723.9" y="659.0" width="11.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="726.9" y="670.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.04%)</title><rect x="723.9" y="643.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="726.9" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.98%)</title><rect x="724.3" y="643.0" width="11.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="727.3" y="654.0"></text>
</g>
<g>
<title>__x64_sys_write (24 samples, 0.90%)</title><rect x="724.7" y="627.0" width="10.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="727.7" y="638.0"></text>
</g>
<g>
<title>ksys_write (24 samples, 0.90%)</title><rect x="724.7" y="611.0" width="10.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="727.7" y="622.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.08%)</title><rect x="724.7" y="595.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="727.7" y="606.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="724.7" y="579.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="727.7" y="590.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.08%)</title><rect x="724.7" y="563.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="727.7" y="574.0"></text>
</g>
<g>
<title>vfs_write (22 samples, 0.83%)</title><rect x="725.6" y="595.0" width="9.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="728.6" y="606.0"></text>
</g>
<g>
<title>__vfs_write (19 samples, 0.71%)</title><rect x="726.1" y="579.0" width="8.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="729.1" y="590.0"></text>
</g>
<g>
<title>new_sync_write (19 samples, 0.71%)</title><rect x="726.1" y="563.0" width="8.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="729.1" y="574.0"></text>
</g>
<g>
<title>pipe_write (19 samples, 0.71%)</title><rect x="726.1" y="547.0" width="8.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="729.1" y="558.0"></text>
</g>
<g>
<title>__wake_up_sync_key (17 samples, 0.64%)</title><rect x="726.5" y="531.0" width="7.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="729.5" y="542.0"></text>
</g>
<g>
<title>__wake_up_common_lock (17 samples, 0.64%)</title><rect x="726.5" y="515.0" width="7.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="729.5" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.64%)</title><rect x="726.5" y="499.0" width="7.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="729.5" y="510.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.04%)</title><rect x="734.1" y="531.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="737.1" y="542.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="734.1" y="515.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="737.1" y="526.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.08%)</title><rect x="734.5" y="579.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="737.5" y="590.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.08%)</title><rect x="734.5" y="563.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="737.5" y="574.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.08%)</title><rect x="734.5" y="547.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="737.5" y="558.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.08%)</title><rect x="734.5" y="531.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="737.5" y="542.0"></text>
</g>
<g>
<title>ksys_write (1 samples, 0.04%)</title><rect x="735.4" y="627.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="738.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (2 samples, 0.08%)</title><rect x="735.8" y="851.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="738.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (1 samples, 0.04%)</title><rect x="735.8" y="835.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="738.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.isFinished (1 samples, 0.04%)</title><rect x="736.3" y="835.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="739.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$592/820455260.accept (8 samples, 0.30%)</title><rect x="736.7" y="899.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="739.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (8 samples, 0.30%)</title><rect x="736.7" y="883.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="739.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (8 samples, 0.30%)</title><rect x="736.7" y="867.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="739.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (8 samples, 0.30%)</title><rect x="736.7" y="851.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8 samples, 0.30%)</title><rect x="736.7" y="835.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="739.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (8 samples, 0.30%)</title><rect x="736.7" y="819.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="739.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (8 samples, 0.30%)</title><rect x="736.7" y="803.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="739.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.08%)</title><rect x="736.7" y="787.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="739.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.04%)</title><rect x="737.2" y="771.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.04%)</title><rect x="737.2" y="755.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="740.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.04%)</title><rect x="737.2" y="739.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="740.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.localInit (1 samples, 0.04%)</title><rect x="737.2" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="740.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.mix64 (1 samples, 0.04%)</title><rect x="737.2" y="707.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="740.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (2 samples, 0.08%)</title><rect x="737.6" y="787.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="740.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.08%)</title><rect x="737.6" y="771.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.6" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.08%)</title><rect x="737.6" y="755.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$597/999361704.accept (1 samples, 0.04%)</title><rect x="737.6" y="739.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="740.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$599/2146609873.accept (1 samples, 0.04%)</title><rect x="738.1" y="739.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="741.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$599/2146609873.accept (4 samples, 0.15%)</title><rect x="738.5" y="787.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="741.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (2 samples, 0.08%)</title><rect x="739.4" y="771.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="742.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (2 samples, 0.08%)</title><rect x="739.4" y="755.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="742.4" y="766.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (2 samples, 0.08%)</title><rect x="739.4" y="739.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="742.4" y="750.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (1 samples, 0.04%)</title><rect x="739.8" y="723.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="742.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (56 samples, 2.11%)</title><rect x="740.3" y="899.0" width="24.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="743.3" y="910.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (56 samples, 2.11%)</title><rect x="740.3" y="883.0" width="24.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="743.3" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.compareAndSet (1 samples, 0.04%)</title><rect x="740.3" y="867.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="743.3" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="740.3" y="851.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="743.3" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="740.3" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="743.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (55 samples, 2.07%)</title><rect x="740.7" y="867.0" width="24.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="743.7" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (51 samples, 1.92%)</title><rect x="741.2" y="851.0" width="22.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="744.2" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (51 samples, 1.92%)</title><rect x="741.2" y="835.0" width="22.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.2" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (51 samples, 1.92%)</title><rect x="741.2" y="819.0" width="22.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="744.2" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (50 samples, 1.88%)</title><rect x="741.6" y="803.0" width="22.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="744.6" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (1 samples, 0.04%)</title><rect x="741.6" y="787.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="744.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="741.6" y="771.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.6" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="741.6" y="755.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="744.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$601/301086023.accept (49 samples, 1.84%)</title><rect x="742.1" y="787.0" width="21.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="745.1" y="798.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (49 samples, 1.84%)</title><rect x="742.1" y="771.0" width="21.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.1" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (49 samples, 1.84%)</title><rect x="742.1" y="755.0" width="21.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="745.1" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.04%)</title><rect x="742.1" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.1" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="742.1" y="723.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="745.1" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="742.1" y="707.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="745.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (48 samples, 1.81%)</title><rect x="742.5" y="739.0" width="21.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="745.5" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (6 samples, 0.23%)</title><rect x="742.5" y="723.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="745.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.04%)</title><rect x="742.5" y="707.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="745.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.04%)</title><rect x="742.5" y="691.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="745.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.04%)</title><rect x="742.5" y="675.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="745.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.04%)</title><rect x="742.5" y="659.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="745.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.localInit (1 samples, 0.04%)</title><rect x="742.5" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.mix64 (1 samples, 0.04%)</title><rect x="742.5" y="627.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="745.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.04%)</title><rect x="742.9" y="707.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$607/831886457.apply (1 samples, 0.04%)</title><rect x="742.9" y="691.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.04%)</title><rect x="743.4" y="707.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="746.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$607/831886457.apply (3 samples, 0.11%)</title><rect x="743.8" y="707.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="746.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (3 samples, 0.11%)</title><rect x="743.8" y="691.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="746.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (1 samples, 0.04%)</title><rect x="744.7" y="675.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (42 samples, 1.58%)</title><rect x="745.2" y="723.0" width="18.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="748.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (41 samples, 1.54%)</title><rect x="745.6" y="707.0" width="18.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="748.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (34 samples, 1.28%)</title><rect x="745.6" y="691.0" width="15.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="748.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (31 samples, 1.17%)</title><rect x="745.6" y="675.0" width="13.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="748.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (31 samples, 1.17%)</title><rect x="745.6" y="659.0" width="13.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="748.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (31 samples, 1.17%)</title><rect x="745.6" y="643.0" width="13.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="748.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (30 samples, 1.13%)</title><rect x="745.6" y="627.0" width="13.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="748.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (30 samples, 1.13%)</title><rect x="745.6" y="611.0" width="13.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="748.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (30 samples, 1.13%)</title><rect x="745.6" y="595.0" width="13.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="748.6" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="746.1" y="579.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="749.1" y="590.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.15%)</title><rect x="746.5" y="579.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="749.5" y="590.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="746.5" y="563.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="749.5" y="574.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="746.9" y="563.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="749.9" y="574.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="747.4" y="563.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="750.4" y="574.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.04%)</title><rect x="747.8" y="563.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="750.8" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (24 samples, 0.90%)</title><rect x="748.3" y="579.0" width="10.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="751.3" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.75%)</title><rect x="750.1" y="563.0" width="8.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="753.1" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.75%)</title><rect x="750.1" y="547.0" width="8.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="753.1" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (19 samples, 0.71%)</title><rect x="750.5" y="531.0" width="8.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="753.5" y="542.0"></text>
</g>
<g>
<title>do_futex (19 samples, 0.71%)</title><rect x="750.5" y="515.0" width="8.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="753.5" y="526.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="750.5" y="499.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="753.5" y="510.0"></text>
</g>
<g>
<title>futex_wake (18 samples, 0.68%)</title><rect x="750.9" y="499.0" width="8.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="753.9" y="510.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.04%)</title><rect x="751.4" y="483.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="754.4" y="494.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.11%)</title><rect x="751.8" y="483.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="754.8" y="494.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.49%)</title><rect x="753.2" y="483.0" width="5.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="756.2" y="494.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.49%)</title><rect x="753.2" y="467.0" width="5.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="756.2" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.49%)</title><rect x="753.2" y="451.0" width="5.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="756.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.localInit (1 samples, 0.04%)</title><rect x="758.9" y="627.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="761.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.mix64 (1 samples, 0.04%)</title><rect x="758.9" y="611.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="761.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.11%)</title><rect x="759.4" y="675.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="760.3" y="659.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="763.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.weakCompareAndSet (1 samples, 0.04%)</title><rect x="760.3" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="763.3" y="654.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.04%)</title><rect x="760.3" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (5 samples, 0.19%)</title><rect x="760.7" y="691.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="763.7" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.19%)</title><rect x="760.7" y="675.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="763.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (5 samples, 0.19%)</title><rect x="760.7" y="659.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="763.7" y="670.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.11%)</title><rect x="760.7" y="643.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="763.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$605/871672554.accept (1 samples, 0.04%)</title><rect x="762.0" y="643.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="765.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$154/180352869.accept (1 samples, 0.04%)</title><rect x="762.5" y="643.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="765.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$605/871672554.accept (1 samples, 0.04%)</title><rect x="762.9" y="691.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="765.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$readBodyAsync$0 (1 samples, 0.04%)</title><rect x="762.9" y="675.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="765.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.completed (1 samples, 0.04%)</title><rect x="762.9" y="659.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="765.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$154/180352869.accept (1 samples, 0.04%)</title><rect x="763.4" y="691.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="766.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (1 samples, 0.04%)</title><rect x="763.4" y="675.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="766.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.04%)</title><rect x="763.4" y="659.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="766.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.04%)</title><rect x="763.4" y="643.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="766.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (3 samples, 0.11%)</title><rect x="763.8" y="851.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="766.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (3 samples, 0.11%)</title><rect x="763.8" y="835.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="766.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (4 samples, 0.15%)</title><rect x="765.1" y="899.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="768.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (4 samples, 0.15%)</title><rect x="765.1" y="883.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="768.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (4 samples, 0.15%)</title><rect x="765.1" y="867.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="768.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (4 samples, 0.15%)</title><rect x="765.1" y="851.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="768.1" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (4 samples, 0.15%)</title><rect x="765.1" y="835.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="768.1" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.04%)</title><rect x="765.1" y="819.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="768.1" y="830.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.04%)</title><rect x="765.1" y="803.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="768.1" y="814.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (1 samples, 0.04%)</title><rect x="765.1" y="787.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="768.1" y="798.0"></text>
</g>
<g>
<title>oop_disjoint_arraycopy (3 samples, 0.11%)</title><rect x="765.6" y="819.0" width="1.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="768.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (3 samples, 0.11%)</title><rect x="766.9" y="899.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="769.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (3 samples, 0.11%)</title><rect x="766.9" y="883.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="769.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.sliceWithLimitedCapacity (2 samples, 0.08%)</title><rect x="768.3" y="899.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="771.3" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.slice (2 samples, 0.08%)</title><rect x="768.3" y="883.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.3" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.08%)</title><rect x="768.3" y="867.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="771.3" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="768.3" y="851.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="771.3" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="768.7" y="835.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="771.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (134 samples, 5.04%)</title><rect x="769.1" y="1155.0" width="59.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="772.1" y="1166.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (134 samples, 5.04%)</title><rect x="769.1" y="1139.0" width="59.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="772.1" y="1150.0">java/u..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="769.6" y="1123.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="772.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (93 samples, 3.50%)</title><rect x="770.0" y="1123.0" width="41.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.0" y="1134.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (90 samples, 3.39%)</title><rect x="771.4" y="1107.0" width="39.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="774.4" y="1118.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (90 samples, 3.39%)</title><rect x="771.4" y="1091.0" width="39.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="774.4" y="1102.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (90 samples, 3.39%)</title><rect x="771.4" y="1075.0" width="39.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="774.4" y="1086.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (90 samples, 3.39%)</title><rect x="771.4" y="1059.0" width="39.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="774.4" y="1070.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (84 samples, 3.16%)</title><rect x="772.7" y="1043.0" width="37.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="775.7" y="1054.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (84 samples, 3.16%)</title><rect x="772.7" y="1027.0" width="37.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="775.7" y="1038.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (18 samples, 0.68%)</title><rect x="772.7" y="1011.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="775.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.04%)</title><rect x="772.7" y="995.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="775.7" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpServiceClient$$Lambda$668/1298391770.apply (1 samples, 0.04%)</title><rect x="772.7" y="979.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="775.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpServiceClient$$Lambda$668/1298391770.apply (17 samples, 0.64%)</title><rect x="773.1" y="995.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="776.1" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpServiceClient.toValue (17 samples, 0.64%)</title><rect x="773.1" y="979.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.1" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (15 samples, 0.56%)</title><rect x="773.1" y="963.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="776.1" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.08%)</title><rect x="773.1" y="947.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.1" y="958.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.04%)</title><rect x="773.6" y="931.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="776.6" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.04%)</title><rect x="773.6" y="915.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="776.6" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.04%)</title><rect x="773.6" y="899.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.6" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.04%)</title><rect x="773.6" y="883.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="773.6" y="867.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="776.6" y="878.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.11%)</title><rect x="774.0" y="947.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="777.0" y="958.0"></text>
</g>
<g>
<title>java/util/List.spliterator (3 samples, 0.11%)</title><rect x="774.0" y="931.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="777.0" y="942.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.&lt;init&gt; (3 samples, 0.11%)</title><rect x="774.0" y="915.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.0" y="926.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (10 samples, 0.38%)</title><rect x="775.4" y="947.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="778.4" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (10 samples, 0.38%)</title><rect x="775.4" y="931.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="778.4" y="942.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (10 samples, 0.38%)</title><rect x="775.4" y="915.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="778.4" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (8 samples, 0.30%)</title><rect x="775.8" y="899.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="778.8" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.19%)</title><rect x="775.8" y="883.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="778.8" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (5 samples, 0.19%)</title><rect x="775.8" y="867.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="778.8" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (4 samples, 0.15%)</title><rect x="775.8" y="851.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="778.8" y="862.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (4 samples, 0.15%)</title><rect x="775.8" y="835.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="778.8" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (4 samples, 0.15%)</title><rect x="775.8" y="819.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="778.8" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$578/936377716.applyAsLong (3 samples, 0.11%)</title><rect x="776.2" y="803.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="779.2" y="814.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (3 samples, 0.11%)</title><rect x="776.2" y="787.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.2" y="798.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (3 samples, 0.11%)</title><rect x="776.2" y="771.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="779.2" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.04%)</title><rect x="777.1" y="755.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.1" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.04%)</title><rect x="777.1" y="739.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.1" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (1 samples, 0.04%)</title><rect x="777.1" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="780.1" y="734.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (1 samples, 0.04%)</title><rect x="777.6" y="851.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="780.6" y="862.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="777.6" y="835.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="780.6" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.11%)</title><rect x="778.0" y="883.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="781.0" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (2 samples, 0.08%)</title><rect x="778.5" y="867.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="781.5" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.&lt;init&gt; (1 samples, 0.04%)</title><rect x="778.9" y="851.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="781.9" y="862.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1 samples, 0.04%)</title><rect x="778.9" y="835.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="781.9" y="846.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.04%)</title><rect x="779.4" y="899.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="782.4" y="910.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.04%)</title><rect x="779.4" y="883.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="782.4" y="894.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (1 samples, 0.04%)</title><rect x="779.4" y="867.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="782.4" y="878.0"></text>
</g>
<g>
<title>_new_instance_Java (1 samples, 0.04%)</title><rect x="779.4" y="851.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="782.4" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/Value.present (2 samples, 0.08%)</title><rect x="779.8" y="963.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="782.8" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/Value.&lt;init&gt; (1 samples, 0.04%)</title><rect x="780.2" y="947.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="783.2" y="958.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="780.2" y="931.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="783.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (65 samples, 2.45%)</title><rect x="780.7" y="1011.0" width="28.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.7" y="1022.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (65 samples, 2.45%)</title><rect x="780.7" y="995.0" width="28.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="783.7" y="1006.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (1 samples, 0.04%)</title><rect x="780.7" y="979.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="783.7" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="780.7" y="963.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="783.7" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="780.7" y="947.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="783.7" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils$$Lambda$170/1308121008.accept (1 samples, 0.04%)</title><rect x="780.7" y="931.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="783.7" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils$$Lambda$170/1308121008.accept (64 samples, 2.41%)</title><rect x="781.1" y="979.0" width="28.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="784.1" y="990.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils.lambda$firstN$0 (64 samples, 2.41%)</title><rect x="781.1" y="963.0" width="28.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="784.1" y="974.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (62 samples, 2.33%)</title><rect x="781.6" y="947.0" width="27.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="784.6" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (62 samples, 2.33%)</title><rect x="781.6" y="931.0" width="27.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="784.6" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (51 samples, 1.92%)</title><rect x="781.6" y="915.0" width="22.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="784.6" y="926.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeNull (1 samples, 0.04%)</title><rect x="781.6" y="899.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="784.6" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="781.6" y="883.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="784.6" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="781.6" y="867.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="784.6" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$673/392655303.accept (50 samples, 1.88%)</title><rect x="782.0" y="899.0" width="22.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="785.0" y="910.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ServiceSession.send (50 samples, 1.88%)</title><rect x="782.0" y="883.0" width="22.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="785.0" y="894.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (50 samples, 1.88%)</title><rect x="782.0" y="867.0" width="22.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="785.0" y="878.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (48 samples, 1.81%)</title><rect x="782.5" y="851.0" width="21.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="785.5" y="862.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.26%)</title><rect x="782.5" y="835.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="785.5" y="846.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.23%)</title><rect x="782.9" y="819.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="785.9" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.15%)</title><rect x="782.9" y="803.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="785.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.11%)</title><rect x="783.3" y="787.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="786.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.08%)</title><rect x="784.7" y="803.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="787.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.08%)</title><rect x="784.7" y="787.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="787.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="785.1" y="771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="788.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.04%)</title><rect x="785.1" y="755.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="788.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (41 samples, 1.54%)</title><rect x="785.6" y="835.0" width="18.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="788.6" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (41 samples, 1.54%)</title><rect x="785.6" y="819.0" width="18.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="788.6" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (41 samples, 1.54%)</title><rect x="785.6" y="803.0" width="18.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="788.6" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (41 samples, 1.54%)</title><rect x="785.6" y="787.0" width="18.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="788.6" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="786.0" y="771.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="789.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="786.5" y="771.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="789.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="786.5" y="755.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="789.5" y="766.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="786.5" y="739.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="789.5" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="786.5" y="723.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="789.5" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="786.5" y="707.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="789.5" y="718.0"></text>
</g>
<g>
<title>__send (38 samples, 1.43%)</title><rect x="786.9" y="771.0" width="16.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="789.9" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 1.43%)</title><rect x="786.9" y="755.0" width="16.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="789.9" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 1.43%)</title><rect x="786.9" y="739.0" width="16.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="789.9" y="750.0"></text>
</g>
<g>
<title>__x64_sys_sendto (38 samples, 1.43%)</title><rect x="786.9" y="723.0" width="16.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="789.9" y="734.0"></text>
</g>
<g>
<title>__sys_sendto (38 samples, 1.43%)</title><rect x="786.9" y="707.0" width="16.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="789.9" y="718.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="786.9" y="691.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="789.9" y="702.0"></text>
</g>
<g>
<title>sock_sendmsg (35 samples, 1.32%)</title><rect x="787.3" y="691.0" width="15.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="790.3" y="702.0"></text>
</g>
<g>
<title>inet6_sendmsg (35 samples, 1.32%)</title><rect x="787.3" y="675.0" width="15.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="790.3" y="686.0"></text>
</g>
<g>
<title>tcp_sendmsg (34 samples, 1.28%)</title><rect x="787.8" y="659.0" width="15.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="790.8" y="670.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.04%)</title><rect x="787.8" y="643.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="790.8" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (33 samples, 1.24%)</title><rect x="788.2" y="643.0" width="14.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="791.2" y="654.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.04%)</title><rect x="789.1" y="627.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="792.1" y="638.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="789.6" y="627.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="792.6" y="638.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="789.6" y="611.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="792.6" y="622.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.08%)</title><rect x="790.0" y="627.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="793.0" y="638.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.08%)</title><rect x="790.0" y="611.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="793.0" y="622.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.15%)</title><rect x="790.9" y="627.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="793.9" y="638.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.15%)</title><rect x="790.9" y="611.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="793.9" y="622.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.04%)</title><rect x="791.3" y="595.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="794.3" y="606.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="791.3" y="579.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="794.3" y="590.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.08%)</title><rect x="791.8" y="595.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="794.8" y="606.0"></text>
</g>
<g>
<title>tcp_push (23 samples, 0.87%)</title><rect x="792.7" y="627.0" width="10.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="795.7" y="638.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (23 samples, 0.87%)</title><rect x="792.7" y="611.0" width="10.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="795.7" y="622.0"></text>
</g>
<g>
<title>tcp_write_xmit (23 samples, 0.87%)</title><rect x="792.7" y="595.0" width="10.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="795.7" y="606.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (22 samples, 0.83%)</title><rect x="792.7" y="579.0" width="9.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="795.7" y="590.0"></text>
</g>
<g>
<title>ip_queue_xmit (19 samples, 0.71%)</title><rect x="793.1" y="563.0" width="8.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="796.1" y="574.0"></text>
</g>
<g>
<title>__ip_queue_xmit (19 samples, 0.71%)</title><rect x="793.1" y="547.0" width="8.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="796.1" y="558.0"></text>
</g>
<g>
<title>ip_local_out (19 samples, 0.71%)</title><rect x="793.1" y="531.0" width="8.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="796.1" y="542.0"></text>
</g>
<g>
<title>ip_output (19 samples, 0.71%)</title><rect x="793.1" y="515.0" width="8.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="796.1" y="526.0"></text>
</g>
<g>
<title>ip_finish_output (19 samples, 0.71%)</title><rect x="793.1" y="499.0" width="8.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="796.1" y="510.0"></text>
</g>
<g>
<title>__ip_finish_output (18 samples, 0.68%)</title><rect x="793.1" y="483.0" width="8.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="796.1" y="494.0"></text>
</g>
<g>
<title>ip_finish_output2 (18 samples, 0.68%)</title><rect x="793.1" y="467.0" width="8.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="796.1" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (17 samples, 0.64%)</title><rect x="793.1" y="451.0" width="7.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="796.1" y="462.0"></text>
</g>
<g>
<title>do_softirq.part.0 (17 samples, 0.64%)</title><rect x="793.1" y="435.0" width="7.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="796.1" y="446.0"></text>
</g>
<g>
<title>do_softirq_own_stack (17 samples, 0.64%)</title><rect x="793.1" y="419.0" width="7.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="796.1" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (17 samples, 0.64%)</title><rect x="793.1" y="403.0" width="7.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="796.1" y="414.0"></text>
</g>
<g>
<title>net_rx_action (16 samples, 0.60%)</title><rect x="793.1" y="387.0" width="7.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="796.1" y="398.0"></text>
</g>
<g>
<title>process_backlog (16 samples, 0.60%)</title><rect x="793.1" y="371.0" width="7.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="796.1" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb (16 samples, 0.60%)</title><rect x="793.1" y="355.0" width="7.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="796.1" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (16 samples, 0.60%)</title><rect x="793.1" y="339.0" width="7.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="796.1" y="350.0"></text>
</g>
<g>
<title>ip_rcv (15 samples, 0.56%)</title><rect x="793.6" y="323.0" width="6.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="796.6" y="334.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.04%)</title><rect x="793.6" y="307.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="796.6" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (14 samples, 0.53%)</title><rect x="794.0" y="307.0" width="6.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="797.0" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver (14 samples, 0.53%)</title><rect x="794.0" y="291.0" width="6.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="797.0" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (14 samples, 0.53%)</title><rect x="794.0" y="275.0" width="6.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="797.0" y="286.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (14 samples, 0.53%)</title><rect x="794.0" y="259.0" width="6.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="797.0" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (14 samples, 0.53%)</title><rect x="794.0" y="243.0" width="6.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="797.0" y="254.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.04%)</title><rect x="794.0" y="227.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="797.0" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (13 samples, 0.49%)</title><rect x="794.4" y="227.0" width="5.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="797.4" y="238.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.04%)</title><rect x="794.4" y="211.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="797.4" y="222.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.04%)</title><rect x="794.9" y="211.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="797.9" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (11 samples, 0.41%)</title><rect x="795.3" y="211.0" width="4.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="798.3" y="222.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.04%)</title><rect x="795.8" y="195.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="798.8" y="206.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="795.8" y="179.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="798.8" y="190.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="795.8" y="163.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="798.8" y="174.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="795.8" y="147.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="798.8" y="158.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.08%)</title><rect x="796.2" y="195.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="799.2" y="206.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.04%)</title><rect x="797.1" y="195.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="800.1" y="206.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.04%)</title><rect x="797.1" y="179.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="800.1" y="190.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.04%)</title><rect x="797.1" y="163.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="800.1" y="174.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="797.1" y="147.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="800.1" y="158.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.11%)</title><rect x="797.6" y="195.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="800.6" y="206.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.08%)</title><rect x="797.6" y="179.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="800.6" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.08%)</title><rect x="797.6" y="163.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="800.6" y="174.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="797.6" y="147.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="800.6" y="158.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="798.0" y="147.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="801.0" y="158.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="798.0" y="131.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="801.0" y="142.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="798.0" y="115.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="801.0" y="126.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="798.0" y="99.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="801.0" y="110.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.04%)</title><rect x="798.4" y="179.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="801.4" y="190.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.04%)</title><rect x="798.9" y="195.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="801.9" y="206.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="799.3" y="195.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="802.3" y="206.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.04%)</title><rect x="799.8" y="195.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="802.8" y="206.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.04%)</title><rect x="800.2" y="387.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="803.2" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.04%)</title><rect x="800.7" y="451.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="803.7" y="462.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="801.1" y="483.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="804.1" y="494.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.04%)</title><rect x="801.6" y="563.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="804.6" y="574.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.04%)</title><rect x="802.0" y="563.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="805.0" y="574.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.04%)</title><rect x="802.4" y="579.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="805.4" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.08%)</title><rect x="802.9" y="691.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="805.9" y="702.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="803.3" y="675.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="806.3" y="686.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="803.3" y="659.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="806.3" y="670.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="803.3" y="643.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="806.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="803.8" y="851.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="806.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="803.8" y="835.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="806.8" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="803.8" y="819.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="806.8" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.04%)</title><rect x="803.8" y="803.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="806.8" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.04%)</title><rect x="803.8" y="787.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="806.8" y="798.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.04%)</title><rect x="803.8" y="771.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="806.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (11 samples, 0.41%)</title><rect x="804.2" y="915.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="807.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (11 samples, 0.41%)</title><rect x="804.2" y="899.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="807.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.08%)</title><rect x="804.2" y="883.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="807.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.08%)</title><rect x="804.2" y="867.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="807.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.08%)</title><rect x="804.2" y="851.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.08%)</title><rect x="804.2" y="835.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="807.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.localInit (2 samples, 0.08%)</title><rect x="804.2" y="819.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="807.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.mix64 (2 samples, 0.08%)</title><rect x="804.2" y="803.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$671/445154046.apply (9 samples, 0.34%)</title><rect x="805.1" y="883.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="808.1" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.lambda$scheduleGetEntity$4 (9 samples, 0.34%)</title><rect x="805.1" y="867.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="808.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.handleResponses (9 samples, 0.34%)</title><rect x="805.1" y="851.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="808.1" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$677/492662541.apply (9 samples, 0.34%)</title><rect x="805.1" y="835.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="808.1" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.lambda$scheduleGetEntity$3 (9 samples, 0.34%)</title><rect x="805.1" y="819.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="808.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ResponseUtils.valueToResponse (2 samples, 0.08%)</title><rect x="805.1" y="803.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="808.1" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1473981203.linkToTargetMethod (2 samples, 0.08%)</title><rect x="805.1" y="787.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="808.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/802095122.invoke (2 samples, 0.08%)</title><rect x="805.1" y="771.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.1" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/702025003.invokeStatic (2 samples, 0.08%)</title><rect x="805.1" y="755.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="808.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.08%)</title><rect x="805.1" y="739.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.1" y="750.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (2 samples, 0.08%)</title><rect x="805.1" y="723.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="808.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/Value.merge (7 samples, 0.26%)</title><rect x="806.0" y="803.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="809.0" y="814.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.04%)</title><rect x="806.0" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="809.0" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (1 samples, 0.04%)</title><rect x="806.0" y="771.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="809.0" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (6 samples, 0.23%)</title><rect x="806.4" y="787.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="809.4" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (6 samples, 0.23%)</title><rect x="806.4" y="771.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="809.4" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6 samples, 0.23%)</title><rect x="806.4" y="755.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="809.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (6 samples, 0.23%)</title><rect x="806.4" y="739.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.4" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.15%)</title><rect x="806.9" y="723.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="809.9" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.15%)</title><rect x="806.9" y="707.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="809.9" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (4 samples, 0.15%)</title><rect x="806.9" y="691.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="809.9" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3 samples, 0.11%)</title><rect x="807.3" y="675.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="810.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (3 samples, 0.11%)</title><rect x="807.3" y="659.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="810.3" y="670.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$683/344786003.apply (2 samples, 0.08%)</title><rect x="807.8" y="643.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="810.8" y="654.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (2 samples, 0.08%)</title><rect x="807.8" y="627.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="810.8" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$134/462652533.compare (2 samples, 0.08%)</title><rect x="807.8" y="611.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="810.8" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2 samples, 0.08%)</title><rect x="807.8" y="595.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="810.8" y="606.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.08%)</title><rect x="807.8" y="579.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="810.8" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (1 samples, 0.04%)</title><rect x="808.7" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="811.7" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (1 samples, 0.04%)</title><rect x="808.7" y="707.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="811.7" y="718.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.04%)</title><rect x="808.7" y="691.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="811.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeExceptionally (1 samples, 0.04%)</title><rect x="809.1" y="947.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="812.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (1 samples, 0.04%)</title><rect x="809.1" y="931.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="812.1" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="809.1" y="915.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="812.1" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="809.1" y="899.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="812.1" y="910.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.04%)</title><rect x="809.5" y="1011.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="812.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.11%)</title><rect x="810.0" y="1043.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="813.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (2 samples, 0.08%)</title><rect x="810.4" y="1027.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="813.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.08%)</title><rect x="810.4" y="1011.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.08%)</title><rect x="810.4" y="995.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$159/442073090.accept (2 samples, 0.08%)</title><rect x="810.4" y="979.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="813.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.04%)</title><rect x="811.3" y="1123.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="814.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.04%)</title><rect x="811.3" y="1107.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="814.3" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="811.3" y="1091.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="814.3" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.04%)</title><rect x="811.3" y="1075.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="814.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (38 samples, 1.43%)</title><rect x="811.8" y="1123.0" width="16.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="814.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (38 samples, 1.43%)</title><rect x="811.8" y="1107.0" width="16.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="814.8" y="1118.0"></text>
</g>
<g>
<title>Unsafe_Park (18 samples, 0.68%)</title><rect x="811.8" y="1091.0" width="8.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="814.8" y="1102.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="812.2" y="1075.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="815.2" y="1086.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.15%)</title><rect x="812.6" y="1075.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="815.6" y="1086.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="813.5" y="1059.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="816.5" y="1070.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.04%)</title><rect x="814.0" y="1059.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="817.0" y="1070.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (11 samples, 0.41%)</title><rect x="814.4" y="1075.0" width="4.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="817.4" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.15%)</title><rect x="817.5" y="1059.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="820.5" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.15%)</title><rect x="817.5" y="1043.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="820.5" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="818.9" y="1027.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="821.9" y="1038.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="818.9" y="1011.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="821.9" y="1022.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="818.9" y="995.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="821.9" y="1006.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.04%)</title><rect x="819.3" y="1075.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="822.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.71%)</title><rect x="819.8" y="1091.0" width="8.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="822.8" y="1102.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (19 samples, 0.71%)</title><rect x="819.8" y="1075.0" width="8.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="822.8" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.11%)</title><rect x="826.9" y="1059.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="829.9" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.11%)</title><rect x="826.9" y="1043.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="829.9" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.11%)</title><rect x="826.9" y="1027.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="829.9" y="1038.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.08%)</title><rect x="826.9" y="1011.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="829.9" y="1022.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.08%)</title><rect x="826.9" y="995.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="829.9" y="1006.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.08%)</title><rect x="826.9" y="979.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="829.9" y="990.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.08%)</title><rect x="826.9" y="963.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="829.9" y="974.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.04%)</title><rect x="827.7" y="1011.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="830.7" y="1022.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="827.7" y="995.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="830.7" y="1006.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="828.2" y="1091.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="831.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (513 samples, 19.30%)</title><rect x="828.6" y="1155.0" width="227.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="831.6" y="1166.0">jdk/internal/net/http/HttpClie..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="833.5" y="1139.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="836.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="833.5" y="1123.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="836.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$464/438529285.get$Lambda (1 samples, 0.04%)</title><rect x="833.5" y="1107.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="836.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$464/438529285.&lt;init&gt; (1 samples, 0.04%)</title><rect x="833.5" y="1091.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="836.5" y="1102.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (3 samples, 0.11%)</title><rect x="834.0" y="1139.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.0" y="1150.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (2 samples, 0.08%)</title><rect x="834.4" y="1123.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="837.4" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (1 samples, 0.04%)</title><rect x="835.3" y="1139.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="838.3" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.04%)</title><rect x="835.7" y="1139.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="838.7" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.checkForComodification (1 samples, 0.04%)</title><rect x="835.7" y="1123.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="838.7" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.23%)</title><rect x="836.2" y="1139.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.2" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.23%)</title><rect x="836.2" y="1123.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="839.2" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.15%)</title><rect x="836.6" y="1107.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="839.6" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.15%)</title><rect x="836.6" y="1091.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="839.6" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (1 samples, 0.04%)</title><rect x="836.6" y="1075.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="839.6" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (2 samples, 0.08%)</title><rect x="837.1" y="1075.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="840.1" y="1086.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="838.0" y="1075.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="841.0" y="1086.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.04%)</title><rect x="838.4" y="1107.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="841.4" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (2 samples, 0.08%)</title><rect x="838.8" y="1139.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="841.8" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (146 samples, 5.49%)</title><rect x="839.7" y="1139.0" width="64.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="842.7" y="1150.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$466/42157458.accept (143 samples, 5.38%)</title><rect x="839.7" y="1123.0" width="63.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="842.7" y="1134.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (143 samples, 5.38%)</title><rect x="839.7" y="1107.0" width="63.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="842.7" y="1118.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (143 samples, 5.38%)</title><rect x="839.7" y="1091.0" width="63.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="842.7" y="1102.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$ConnectEvent.handle (8 samples, 0.30%)</title><rect x="839.7" y="1075.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="842.7" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.finishConnect (8 samples, 0.30%)</title><rect x="839.7" y="1059.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="842.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.04%)</title><rect x="841.5" y="1043.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="844.5" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginFinishConnect (2 samples, 0.08%)</title><rect x="841.9" y="1043.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="844.9" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.ensureOpen (1 samples, 0.04%)</title><rect x="842.4" y="1027.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="845.4" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.endFinishConnect (1 samples, 0.04%)</title><rect x="842.8" y="1043.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.8" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.localAddress (1 samples, 0.04%)</title><rect x="842.8" y="1027.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="845.8" y="1038.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (1 samples, 0.04%)</title><rect x="842.8" y="1011.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="845.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (135 samples, 5.08%)</title><rect x="843.3" y="1075.0" width="59.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="846.3" y="1086.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (135 samples, 5.08%)</title><rect x="843.3" y="1059.0" width="59.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="846.3" y="1070.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.08%)</title><rect x="843.3" y="1043.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="846.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.08%)</title><rect x="843.3" y="1027.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.08%)</title><rect x="843.3" y="1011.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="846.3" y="1022.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.04%)</title><rect x="843.7" y="995.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="846.7" y="1006.0"></text>
</g>
<g>
<title>java/nio/channels/SelectionKey.attach (1 samples, 0.04%)</title><rect x="843.7" y="979.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="846.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.getAndSet (1 samples, 0.04%)</title><rect x="843.7" y="963.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (133 samples, 5.00%)</title><rect x="844.2" y="1043.0" width="59.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="847.2" y="1054.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (133 samples, 5.00%)</title><rect x="844.2" y="1027.0" width="59.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="847.2" y="1038.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (133 samples, 5.00%)</title><rect x="844.2" y="1011.0" width="59.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="847.2" y="1022.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (133 samples, 5.00%)</title><rect x="844.2" y="995.0" width="59.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="847.2" y="1006.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (133 samples, 5.00%)</title><rect x="844.2" y="979.0" width="59.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="847.2" y="990.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$240/1948350730.run (130 samples, 4.89%)</title><rect x="845.1" y="963.0" width="57.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="848.1" y="974.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (129 samples, 4.85%)</title><rect x="845.1" y="947.0" width="57.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="848.1" y="958.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (43 samples, 1.62%)</title><rect x="845.5" y="931.0" width="19.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (43 samples, 1.62%)</title><rect x="845.5" y="915.0" width="19.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="848.5" y="926.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.04%)</title><rect x="845.5" y="899.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="848.5" y="910.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (1 samples, 0.04%)</title><rect x="845.5" y="883.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="848.5" y="894.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.hasNext (1 samples, 0.04%)</title><rect x="845.9" y="899.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="848.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (41 samples, 1.54%)</title><rect x="846.4" y="899.0" width="18.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="849.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (1 samples, 0.04%)</title><rect x="846.4" y="883.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="849.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.04%)</title><rect x="846.4" y="867.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="849.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.04%)</title><rect x="846.4" y="851.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="849.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 1.50%)</title><rect x="846.8" y="883.0" width="17.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="849.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 1.50%)</title><rect x="846.8" y="867.0" width="17.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="849.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (39 samples, 1.47%)</title><rect x="847.3" y="851.0" width="17.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="850.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (38 samples, 1.43%)</title><rect x="847.7" y="835.0" width="16.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="850.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (38 samples, 1.43%)</title><rect x="847.7" y="819.0" width="16.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (38 samples, 1.43%)</title><rect x="847.7" y="803.0" width="16.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (35 samples, 1.32%)</title><rect x="848.2" y="787.0" width="15.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="851.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (35 samples, 1.32%)</title><rect x="848.2" y="771.0" width="15.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="851.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (35 samples, 1.32%)</title><rect x="848.2" y="755.0" width="15.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="851.2" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.04%)</title><rect x="848.2" y="739.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="851.2" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="848.6" y="739.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="851.6" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.19%)</title><rect x="849.1" y="739.0" width="2.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="852.1" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="849.1" y="723.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="852.1" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="849.5" y="723.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="852.5" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.11%)</title><rect x="849.9" y="723.0" width="1.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="852.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="851.3" y="739.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="854.3" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.30.so (1 samples, 0.04%)</title><rect x="851.3" y="723.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="854.3" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (27 samples, 1.02%)</title><rect x="851.7" y="739.0" width="12.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="854.7" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.83%)</title><rect x="853.9" y="723.0" width="9.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="856.9" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.83%)</title><rect x="853.9" y="707.0" width="9.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="856.9" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (21 samples, 0.79%)</title><rect x="854.4" y="691.0" width="9.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="857.4" y="702.0"></text>
</g>
<g>
<title>do_futex (21 samples, 0.79%)</title><rect x="854.4" y="675.0" width="9.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="857.4" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="854.8" y="659.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="857.8" y="670.0"></text>
</g>
<g>
<title>futex_wake (19 samples, 0.71%)</title><rect x="855.3" y="659.0" width="8.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="858.3" y="670.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="856.6" y="643.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="859.6" y="654.0"></text>
</g>
<g>
<title>wake_up_q (15 samples, 0.56%)</title><rect x="857.0" y="643.0" width="6.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="860.0" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (15 samples, 0.56%)</title><rect x="857.0" y="627.0" width="6.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="860.0" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.56%)</title><rect x="857.0" y="611.0" width="6.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="860.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (2 samples, 0.08%)</title><rect x="863.7" y="787.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="866.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalCompletion (1 samples, 0.04%)</title><rect x="864.6" y="931.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="867.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onComplete (1 samples, 0.04%)</title><rect x="864.6" y="915.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="867.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (83 samples, 3.12%)</title><rect x="865.0" y="931.0" width="36.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="868.0" y="942.0">jdk..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (83 samples, 3.12%)</title><rect x="865.0" y="915.0" width="36.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="868.0" y="926.0">sun..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.15%)</title><rect x="865.0" y="899.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="868.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.15%)</title><rect x="865.0" y="883.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="868.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.08%)</title><rect x="865.9" y="867.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="868.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.04%)</title><rect x="865.9" y="851.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="868.9" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.04%)</title><rect x="865.9" y="835.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="868.9" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.04%)</title><rect x="865.9" y="819.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="868.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.04%)</title><rect x="866.4" y="851.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="869.4" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.04%)</title><rect x="866.4" y="835.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="869.4" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.04%)</title><rect x="866.4" y="819.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="869.4" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (79 samples, 2.97%)</title><rect x="866.8" y="899.0" width="35.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="869.8" y="910.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (79 samples, 2.97%)</title><rect x="866.8" y="883.0" width="35.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="869.8" y="894.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (75 samples, 2.82%)</title><rect x="866.8" y="867.0" width="33.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="869.8" y="878.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (73 samples, 2.75%)</title><rect x="867.7" y="851.0" width="32.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="870.7" y="862.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (73 samples, 2.75%)</title><rect x="867.7" y="835.0" width="32.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="870.7" y="846.0">su..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.04%)</title><rect x="868.1" y="819.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="871.1" y="830.0"></text>
</g>
<g>
<title>read (71 samples, 2.67%)</title><rect x="868.6" y="819.0" width="31.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="871.6" y="830.0">read</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 2.18%)</title><rect x="874.4" y="803.0" width="25.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="877.4" y="814.0">e..</text>
</g>
<g>
<title>do_syscall_64 (58 samples, 2.18%)</title><rect x="874.4" y="787.0" width="25.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="877.4" y="798.0">d..</text>
</g>
<g>
<title>__x64_sys_read (54 samples, 2.03%)</title><rect x="876.1" y="771.0" width="24.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="879.1" y="782.0">_..</text>
</g>
<g>
<title>ksys_read (54 samples, 2.03%)</title><rect x="876.1" y="755.0" width="24.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="879.1" y="766.0">k..</text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.08%)</title><rect x="876.6" y="739.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="879.6" y="750.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="876.6" y="723.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="879.6" y="734.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.08%)</title><rect x="876.6" y="707.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="879.6" y="718.0"></text>
</g>
<g>
<title>vfs_read (51 samples, 1.92%)</title><rect x="877.5" y="739.0" width="22.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="880.5" y="750.0">v..</text>
</g>
<g>
<title>__vfs_read (50 samples, 1.88%)</title><rect x="877.5" y="723.0" width="22.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="880.5" y="734.0">_..</text>
</g>
<g>
<title>new_sync_read (48 samples, 1.81%)</title><rect x="877.9" y="707.0" width="21.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="880.9" y="718.0">n..</text>
</g>
<g>
<title>sock_read_iter (47 samples, 1.77%)</title><rect x="878.4" y="691.0" width="20.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="881.4" y="702.0"></text>
</g>
<g>
<title>sock_recvmsg (45 samples, 1.69%)</title><rect x="879.2" y="675.0" width="20.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="882.2" y="686.0"></text>
</g>
<g>
<title>inet6_recvmsg (45 samples, 1.69%)</title><rect x="879.2" y="659.0" width="20.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="882.2" y="670.0"></text>
</g>
<g>
<title>tcp_recvmsg (44 samples, 1.66%)</title><rect x="879.7" y="643.0" width="19.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="882.7" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.08%)</title><rect x="880.1" y="627.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="883.1" y="638.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (8 samples, 0.30%)</title><rect x="881.0" y="627.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="884.0" y="638.0"></text>
</g>
<g>
<title>__skb_datagram_iter (8 samples, 0.30%)</title><rect x="881.0" y="611.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="884.0" y="622.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.19%)</title><rect x="882.3" y="595.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="885.3" y="606.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.08%)</title><rect x="882.3" y="579.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="885.3" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.08%)</title><rect x="882.3" y="563.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="885.3" y="574.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.08%)</title><rect x="883.2" y="579.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="886.2" y="590.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.08%)</title><rect x="883.2" y="563.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="886.2" y="574.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.04%)</title><rect x="884.1" y="579.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="887.1" y="590.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="884.6" y="627.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="887.6" y="638.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (31 samples, 1.17%)</title><rect x="885.0" y="627.0" width="13.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="888.0" y="638.0"></text>
</g>
<g>
<title>tcp_send_ack (30 samples, 1.13%)</title><rect x="885.5" y="611.0" width="13.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="888.5" y="622.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (30 samples, 1.13%)</title><rect x="885.5" y="595.0" width="13.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="888.5" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.15%)</title><rect x="885.5" y="579.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="888.5" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.08%)</title><rect x="886.3" y="563.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="889.3" y="574.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.04%)</title><rect x="886.8" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="889.8" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (25 samples, 0.94%)</title><rect x="887.2" y="579.0" width="11.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="890.2" y="590.0"></text>
</g>
<g>
<title>ip_queue_xmit (23 samples, 0.87%)</title><rect x="888.1" y="563.0" width="10.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="891.1" y="574.0"></text>
</g>
<g>
<title>__ip_queue_xmit (23 samples, 0.87%)</title><rect x="888.1" y="547.0" width="10.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="891.1" y="558.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="888.1" y="531.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="891.1" y="542.0"></text>
</g>
<g>
<title>ip_local_out (21 samples, 0.79%)</title><rect x="888.6" y="531.0" width="9.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="891.6" y="542.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="889.0" y="515.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="892.0" y="526.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.04%)</title><rect x="889.0" y="499.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="892.0" y="510.0"></text>
</g>
<g>
<title>ip_output (19 samples, 0.71%)</title><rect x="889.5" y="515.0" width="8.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="892.5" y="526.0"></text>
</g>
<g>
<title>ip_finish_output (19 samples, 0.71%)</title><rect x="889.5" y="499.0" width="8.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="892.5" y="510.0"></text>
</g>
<g>
<title>__ip_finish_output (19 samples, 0.71%)</title><rect x="889.5" y="483.0" width="8.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="892.5" y="494.0"></text>
</g>
<g>
<title>ip_finish_output2 (19 samples, 0.71%)</title><rect x="889.5" y="467.0" width="8.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="892.5" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (15 samples, 0.56%)</title><rect x="889.5" y="451.0" width="6.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="892.5" y="462.0"></text>
</g>
<g>
<title>do_softirq.part.0 (15 samples, 0.56%)</title><rect x="889.5" y="435.0" width="6.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="892.5" y="446.0"></text>
</g>
<g>
<title>do_softirq_own_stack (15 samples, 0.56%)</title><rect x="889.5" y="419.0" width="6.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="892.5" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (15 samples, 0.56%)</title><rect x="889.5" y="403.0" width="6.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="892.5" y="414.0"></text>
</g>
<g>
<title>net_rx_action (14 samples, 0.53%)</title><rect x="889.9" y="387.0" width="6.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="892.9" y="398.0"></text>
</g>
<g>
<title>process_backlog (13 samples, 0.49%)</title><rect x="890.3" y="371.0" width="5.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="893.3" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb (12 samples, 0.45%)</title><rect x="890.8" y="355.0" width="5.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="893.8" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (12 samples, 0.45%)</title><rect x="890.8" y="339.0" width="5.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="893.8" y="350.0"></text>
</g>
<g>
<title>ip_rcv (12 samples, 0.45%)</title><rect x="890.8" y="323.0" width="5.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="893.8" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (12 samples, 0.45%)</title><rect x="890.8" y="307.0" width="5.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="893.8" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver (12 samples, 0.45%)</title><rect x="890.8" y="291.0" width="5.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="893.8" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (12 samples, 0.45%)</title><rect x="890.8" y="275.0" width="5.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="893.8" y="286.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (11 samples, 0.41%)</title><rect x="891.2" y="259.0" width="4.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="894.2" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (11 samples, 0.41%)</title><rect x="891.2" y="243.0" width="4.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="894.2" y="254.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.11%)</title><rect x="891.7" y="227.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="894.7" y="238.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="893.0" y="227.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="896.0" y="238.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.04%)</title><rect x="893.0" y="211.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="896.0" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.04%)</title><rect x="893.4" y="227.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="896.4" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 0.19%)</title><rect x="893.9" y="227.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="896.9" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 0.19%)</title><rect x="893.9" y="211.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="896.9" y="222.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="893.9" y="195.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="896.9" y="206.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="893.9" y="179.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="896.9" y="190.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="893.9" y="163.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="896.9" y="174.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.15%)</title><rect x="894.3" y="195.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="897.3" y="206.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.04%)</title><rect x="895.7" y="179.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="898.7" y="190.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="895.7" y="163.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="898.7" y="174.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.15%)</title><rect x="896.1" y="451.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="899.1" y="462.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.11%)</title><rect x="896.1" y="435.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="899.1" y="446.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.04%)</title><rect x="896.6" y="419.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="899.6" y="430.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="896.6" y="403.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="899.6" y="414.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="896.6" y="387.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="899.6" y="398.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="896.6" y="371.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="899.6" y="382.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="896.6" y="355.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="899.6" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.04%)</title><rect x="897.0" y="419.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="900.0" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="897.4" y="435.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="900.4" y="446.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.04%)</title><rect x="897.9" y="531.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="900.9" y="542.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.04%)</title><rect x="898.3" y="579.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="901.3" y="590.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.04%)</title><rect x="898.8" y="627.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="901.8" y="638.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="898.8" y="611.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="901.8" y="622.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="898.8" y="595.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="901.8" y="606.0"></text>
</g>
<g>
<title>sock_read_iter (1 samples, 0.04%)</title><rect x="899.2" y="707.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="902.2" y="718.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.04%)</title><rect x="899.7" y="723.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="902.7" y="734.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.04%)</title><rect x="899.7" y="707.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="902.7" y="718.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.04%)</title><rect x="899.7" y="691.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="902.7" y="702.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.04%)</title><rect x="899.7" y="675.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="902.7" y="686.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.04%)</title><rect x="899.7" y="659.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="902.7" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.08%)</title><rect x="900.1" y="867.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="903.1" y="878.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.04%)</title><rect x="900.1" y="851.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="903.1" y="862.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.04%)</title><rect x="900.1" y="835.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="903.1" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.04%)</title><rect x="900.5" y="851.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="903.5" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.08%)</title><rect x="901.0" y="867.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="904.0" y="878.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.04%)</title><rect x="901.0" y="851.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="904.0" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (1 samples, 0.04%)</title><rect x="901.4" y="851.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="904.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (1 samples, 0.04%)</title><rect x="901.9" y="931.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="904.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.04%)</title><rect x="902.3" y="947.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="905.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1 samples, 0.04%)</title><rect x="902.8" y="963.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$487/568802140.accept (3 samples, 0.11%)</title><rect x="903.2" y="1123.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="906.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (3 samples, 0.11%)</title><rect x="903.2" y="1107.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="906.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$465/316465657.run (3 samples, 0.11%)</title><rect x="903.2" y="1091.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="906.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (3 samples, 0.11%)</title><rect x="903.2" y="1075.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="906.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (3 samples, 0.11%)</title><rect x="903.2" y="1059.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="906.2" y="1070.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectionKey.cancel (1 samples, 0.04%)</title><rect x="903.2" y="1043.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="906.2" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.cancel (1 samples, 0.04%)</title><rect x="903.2" y="1027.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="906.2" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.04%)</title><rect x="903.7" y="1043.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="906.7" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.04%)</title><rect x="903.7" y="1027.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="906.7" y="1038.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.04%)</title><rect x="904.1" y="1043.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="907.1" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.04%)</title><rect x="904.1" y="1027.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="907.1" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="904.1" y="1011.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="907.1" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="904.1" y="995.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="907.1" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.04%)</title><rect x="904.5" y="1139.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="907.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.04%)</title><rect x="904.5" y="1123.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="907.5" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (9 samples, 0.34%)</title><rect x="905.0" y="1139.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="908.0" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.15%)</title><rect x="905.0" y="1123.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="908.0" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (3 samples, 0.11%)</title><rect x="905.4" y="1107.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="908.4" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (3 samples, 0.11%)</title><rect x="905.4" y="1091.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="908.4" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.11%)</title><rect x="905.4" y="1075.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.4" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.08%)</title><rect x="905.4" y="1059.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="908.4" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.04%)</title><rect x="905.4" y="1043.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="908.4" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.04%)</title><rect x="905.4" y="1027.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="908.4" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (1 samples, 0.04%)</title><rect x="905.4" y="1011.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="908.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$464/438529285.accept (1 samples, 0.04%)</title><rect x="905.4" y="995.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="908.4" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="905.4" y="979.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="908.4" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="905.4" y="963.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="908.4" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.04%)</title><rect x="905.9" y="1043.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="908.9" y="1054.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="905.9" y="1027.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="908.9" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.04%)</title><rect x="906.3" y="1059.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="909.3" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (1 samples, 0.04%)</title><rect x="906.3" y="1043.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="909.3" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (5 samples, 0.19%)</title><rect x="906.8" y="1123.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="909.8" y="1134.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.04%)</title><rect x="907.2" y="1107.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="910.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (1 samples, 0.04%)</title><rect x="907.2" y="1091.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="910.2" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.&lt;init&gt; (3 samples, 0.11%)</title><rect x="907.7" y="1107.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="910.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (103 samples, 3.88%)</title><rect x="909.0" y="1139.0" width="45.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="912.0" y="1150.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$247/53036235.run (50 samples, 1.88%)</title><rect x="909.4" y="1123.0" width="22.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="912.4" y="1134.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (50 samples, 1.88%)</title><rect x="909.4" y="1107.0" width="22.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="912.4" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Logger.log (3 samples, 0.11%)</title><rect x="910.3" y="1091.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="913.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/System$Logger.log (3 samples, 0.11%)</title><rect x="910.3" y="1075.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="913.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.log (3 samples, 0.11%)</title><rect x="910.3" y="1059.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="913.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (45 samples, 1.69%)</title><rect x="911.6" y="1091.0" width="20.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="914.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (45 samples, 1.69%)</title><rect x="911.6" y="1075.0" width="20.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="914.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (45 samples, 1.69%)</title><rect x="911.6" y="1059.0" width="20.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (45 samples, 1.69%)</title><rect x="911.6" y="1043.0" width="20.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="914.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$240/1948350730.run (43 samples, 1.62%)</title><rect x="911.6" y="1027.0" width="19.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="914.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (43 samples, 1.62%)</title><rect x="911.6" y="1011.0" width="19.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="914.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (43 samples, 1.62%)</title><rect x="911.6" y="995.0" width="19.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="914.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.getAndSet (1 samples, 0.04%)</title><rect x="912.5" y="979.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="915.5" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_L (1 samples, 0.04%)</title><rect x="912.5" y="963.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="915.5" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.getAndSet (1 samples, 0.04%)</title><rect x="912.5" y="947.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="915.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription (3 samples, 0.11%)</title><rect x="913.0" y="979.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="916.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (1 samples, 0.04%)</title><rect x="913.9" y="963.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="916.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (37 samples, 1.39%)</title><rect x="914.3" y="979.0" width="16.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="917.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (36 samples, 1.35%)</title><rect x="914.8" y="963.0" width="15.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="917.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (35 samples, 1.32%)</title><rect x="915.2" y="947.0" width="15.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="918.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (35 samples, 1.32%)</title><rect x="915.2" y="931.0" width="15.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="918.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (35 samples, 1.32%)</title><rect x="915.2" y="915.0" width="15.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="918.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (35 samples, 1.32%)</title><rect x="915.2" y="899.0" width="15.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (35 samples, 1.32%)</title><rect x="915.2" y="883.0" width="15.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="918.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (35 samples, 1.32%)</title><rect x="915.2" y="867.0" width="15.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="918.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (32 samples, 1.20%)</title><rect x="915.2" y="851.0" width="14.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="918.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (31 samples, 1.17%)</title><rect x="915.6" y="835.0" width="13.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="918.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (31 samples, 1.17%)</title><rect x="915.6" y="819.0" width="13.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="918.6" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="915.6" y="803.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="918.6" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.15%)</title><rect x="916.1" y="803.0" width="1.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="919.1" y="814.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.30.so (1 samples, 0.04%)</title><rect x="916.1" y="787.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="919.1" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="916.5" y="787.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="919.5" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="917.0" y="787.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="920.0" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="917.4" y="787.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="920.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="917.9" y="803.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="920.9" y="814.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.30.so (1 samples, 0.04%)</title><rect x="917.9" y="787.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="920.9" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (25 samples, 0.94%)</title><rect x="918.3" y="803.0" width="11.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="921.3" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.64%)</title><rect x="921.9" y="787.0" width="7.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="924.9" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.64%)</title><rect x="921.9" y="771.0" width="7.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="924.9" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 0.64%)</title><rect x="921.9" y="755.0" width="7.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="924.9" y="766.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.64%)</title><rect x="921.9" y="739.0" width="7.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="924.9" y="750.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.60%)</title><rect x="922.3" y="723.0" width="7.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="925.3" y="734.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 0.60%)</title><rect x="922.3" y="707.0" width="7.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="925.3" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (15 samples, 0.56%)</title><rect x="922.7" y="691.0" width="6.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="925.7" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.56%)</title><rect x="922.7" y="675.0" width="6.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="925.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (1 samples, 0.04%)</title><rect x="929.4" y="851.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="932.4" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="929.4" y="835.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="932.4" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="929.4" y="819.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="932.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (2 samples, 0.08%)</title><rect x="929.8" y="851.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="932.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.08%)</title><rect x="930.7" y="1027.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="933.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (1 samples, 0.04%)</title><rect x="931.2" y="1011.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="934.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$265/945591197.run (52 samples, 1.96%)</title><rect x="931.6" y="1123.0" width="23.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="934.6" y="1134.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (51 samples, 1.92%)</title><rect x="932.1" y="1107.0" width="22.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="935.1" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (49 samples, 1.84%)</title><rect x="932.5" y="1091.0" width="21.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="935.5" y="1102.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (49 samples, 1.84%)</title><rect x="932.5" y="1075.0" width="21.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="935.5" y="1086.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (47 samples, 1.77%)</title><rect x="932.5" y="1059.0" width="20.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="935.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (47 samples, 1.77%)</title><rect x="932.5" y="1043.0" width="20.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="935.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (45 samples, 1.69%)</title><rect x="933.0" y="1027.0" width="19.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="936.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (45 samples, 1.69%)</title><rect x="933.0" y="1011.0" width="19.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="936.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (45 samples, 1.69%)</title><rect x="933.0" y="995.0" width="19.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="936.0" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.11%)</title><rect x="933.4" y="979.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="936.4" y="990.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="933.4" y="963.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="936.4" y="974.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="933.8" y="963.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="936.8" y="974.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.04%)</title><rect x="934.3" y="963.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="937.3" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_signal (40 samples, 1.50%)</title><rect x="934.7" y="979.0" width="17.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="937.7" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 1.35%)</title><rect x="936.5" y="963.0" width="16.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="939.5" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 1.35%)</title><rect x="936.5" y="947.0" width="16.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="939.5" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (34 samples, 1.28%)</title><rect x="937.4" y="931.0" width="15.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="940.4" y="942.0"></text>
</g>
<g>
<title>do_futex (34 samples, 1.28%)</title><rect x="937.4" y="915.0" width="15.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="940.4" y="926.0"></text>
</g>
<g>
<title>futex_wake (34 samples, 1.28%)</title><rect x="937.4" y="899.0" width="15.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="940.4" y="910.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.08%)</title><rect x="938.3" y="883.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="941.3" y="894.0"></text>
</g>
<g>
<title>plist_del (1 samples, 0.04%)</title><rect x="938.7" y="867.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="941.7" y="878.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.04%)</title><rect x="939.2" y="883.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="942.2" y="894.0"></text>
</g>
<g>
<title>wake_up_q (29 samples, 1.09%)</title><rect x="939.6" y="883.0" width="12.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="942.6" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (29 samples, 1.09%)</title><rect x="939.6" y="867.0" width="12.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="942.6" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (29 samples, 1.09%)</title><rect x="939.6" y="851.0" width="12.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="942.6" y="862.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="952.5" y="979.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="955.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (1 samples, 0.04%)</title><rect x="952.9" y="1027.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="955.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="952.9" y="1011.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="955.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="952.9" y="995.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="955.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (2 samples, 0.08%)</title><rect x="953.4" y="1059.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="956.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.&lt;init&gt; (1 samples, 0.04%)</title><rect x="953.4" y="1043.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="956.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DefaultThreadFactory.newThread (1 samples, 0.04%)</title><rect x="953.4" y="1027.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="956.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (1 samples, 0.04%)</title><rect x="953.4" y="1011.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="956.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (1 samples, 0.04%)</title><rect x="953.4" y="995.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="956.4" y="1006.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (1 samples, 0.04%)</title><rect x="953.4" y="979.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="956.4" y="990.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (1 samples, 0.04%)</title><rect x="953.4" y="963.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="956.4" y="974.0"></text>
</g>
<g>
<title>JVM_GetStackAccessControlContext (1 samples, 0.04%)</title><rect x="953.4" y="947.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="956.4" y="958.0"></text>
</g>
<g>
<title>vframeStreamCommon::next() (1 samples, 0.04%)</title><rect x="953.4" y="931.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="956.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.04%)</title><rect x="953.8" y="1043.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="956.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="953.8" y="1027.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="956.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="953.8" y="1011.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="956.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="953.8" y="995.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="956.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.04%)</title><rect x="953.8" y="979.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="956.8" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="953.8" y="963.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="956.8" y="974.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="954.3" y="1091.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="957.3" y="1102.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="954.3" y="1075.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="957.3" y="1086.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="954.3" y="1059.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="957.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (11 samples, 0.41%)</title><rect x="954.7" y="1139.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="957.7" y="1150.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.11%)</title><rect x="954.7" y="1123.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="957.7" y="1134.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.11%)</title><rect x="954.7" y="1107.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="957.7" y="1118.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.04%)</title><rect x="954.7" y="1091.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="957.7" y="1102.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.04%)</title><rect x="954.7" y="1075.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="957.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1 samples, 0.04%)</title><rect x="954.7" y="1059.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="957.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.08%)</title><rect x="955.2" y="1091.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="958.2" y="1102.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.04%)</title><rect x="955.2" y="1075.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="958.2" y="1086.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="955.2" y="1059.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="958.2" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.04%)</title><rect x="955.6" y="1075.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="958.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (8 samples, 0.30%)</title><rect x="956.0" y="1123.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="959.0" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.04%)</title><rect x="956.0" y="1107.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="959.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (4 samples, 0.15%)</title><rect x="956.5" y="1107.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="959.5" y="1118.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.next (1 samples, 0.04%)</title><rect x="956.5" y="1091.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="959.5" y="1102.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.previous (1 samples, 0.04%)</title><rect x="956.5" y="1075.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="959.5" y="1086.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.checkForComodification (1 samples, 0.04%)</title><rect x="956.5" y="1059.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="959.5" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (3 samples, 0.11%)</title><rect x="956.9" y="1091.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="959.9" y="1102.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (3 samples, 0.11%)</title><rect x="956.9" y="1075.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="959.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.11%)</title><rect x="956.9" y="1059.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="959.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.removeFromPool (3 samples, 0.11%)</title><rect x="958.3" y="1107.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="961.3" y="1118.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.isEmpty (3 samples, 0.11%)</title><rect x="958.3" y="1091.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="961.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.&lt;init&gt; (5 samples, 0.19%)</title><rect x="959.6" y="1139.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="962.6" y="1150.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (4 samples, 0.15%)</title><rect x="960.0" y="1123.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="963.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (9 samples, 0.34%)</title><rect x="961.8" y="1139.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="964.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="961.8" y="1123.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="964.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="961.8" y="1107.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="964.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$463/582870490.get$Lambda (1 samples, 0.04%)</title><rect x="961.8" y="1091.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="964.8" y="1102.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.11%)</title><rect x="962.3" y="1123.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="965.3" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.11%)</title><rect x="962.3" y="1107.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="965.3" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (2 samples, 0.08%)</title><rect x="962.7" y="1091.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="965.7" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (2 samples, 0.08%)</title><rect x="962.7" y="1075.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="965.7" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.08%)</title><rect x="962.7" y="1059.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="965.7" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (5 samples, 0.19%)</title><rect x="963.6" y="1123.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="966.6" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (4 samples, 0.15%)</title><rect x="963.6" y="1107.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="966.6" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (2 samples, 0.08%)</title><rect x="964.0" y="1091.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="967.0" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (1 samples, 0.04%)</title><rect x="964.9" y="1091.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="967.9" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.04%)</title><rect x="964.9" y="1075.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="967.9" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.04%)</title><rect x="964.9" y="1059.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isReferenced (1 samples, 0.04%)</title><rect x="965.4" y="1107.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="968.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.08%)</title><rect x="965.8" y="1139.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.8" y="1150.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.04%)</title><rect x="965.8" y="1123.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="968.8" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.04%)</title><rect x="966.3" y="1123.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="969.3" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.04%)</title><rect x="966.3" y="1107.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="969.3" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.04%)</title><rect x="966.3" y="1091.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="969.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (1 samples, 0.04%)</title><rect x="966.7" y="1139.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="969.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isReferenced (1 samples, 0.04%)</title><rect x="967.1" y="1139.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="970.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.04%)</title><rect x="967.1" y="1123.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="970.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (13 samples, 0.49%)</title><rect x="967.6" y="1139.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="970.6" y="1150.0"></text>
</g>
<g>
<title>java/time/Instant.now (7 samples, 0.26%)</title><rect x="968.5" y="1123.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="971.5" y="1134.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (7 samples, 0.26%)</title><rect x="968.5" y="1107.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="971.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (7 samples, 0.26%)</title><rect x="968.5" y="1091.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.5" y="1102.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (5 samples, 0.19%)</title><rect x="969.4" y="1075.0" width="2.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="972.4" y="1086.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="969.8" y="1059.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="972.8" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (3 samples, 0.11%)</title><rect x="970.2" y="1059.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="973.2" y="1070.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="970.2" y="1043.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="973.2" y="1054.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.08%)</title><rect x="970.7" y="1043.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="973.7" y="1054.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.08%)</title><rect x="970.7" y="1027.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="973.7" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (2 samples, 0.08%)</title><rect x="971.6" y="1123.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="974.6" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.08%)</title><rect x="971.6" y="1107.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="974.6" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.remove (1 samples, 0.04%)</title><rect x="972.5" y="1123.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="975.5" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (1 samples, 0.04%)</title><rect x="972.5" y="1107.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="975.5" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1 samples, 0.04%)</title><rect x="972.9" y="1123.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="975.9" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (1 samples, 0.04%)</title><rect x="972.9" y="1107.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="975.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Log.logTrace (1 samples, 0.04%)</title><rect x="973.4" y="1139.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="976.4" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (148 samples, 5.57%)</title><rect x="973.8" y="1139.0" width="65.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="976.8" y="1150.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (148 samples, 5.57%)</title><rect x="973.8" y="1123.0" width="65.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="976.8" y="1134.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (147 samples, 5.53%)</title><rect x="974.2" y="1107.0" width="65.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="977.2" y="1118.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (86 samples, 3.24%)</title><rect x="974.2" y="1091.0" width="38.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="977.2" y="1102.0">sun..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (1 samples, 0.04%)</title><rect x="976.5" y="1075.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="979.5" y="1086.0"></text>
</g>
<g>
<title>epoll_wait (80 samples, 3.01%)</title><rect x="976.9" y="1075.0" width="35.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="979.9" y="1086.0">epo..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (55 samples, 2.07%)</title><rect x="988.0" y="1059.0" width="24.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="991.0" y="1070.0">e..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.04%)</title><rect x="988.0" y="1043.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="991.0" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (54 samples, 2.03%)</title><rect x="988.4" y="1043.0" width="24.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="991.4" y="1054.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (49 samples, 1.84%)</title><rect x="990.7" y="1027.0" width="21.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="993.7" y="1038.0">_..</text>
</g>
<g>
<title>do_epoll_wait (49 samples, 1.84%)</title><rect x="990.7" y="1011.0" width="21.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="993.7" y="1022.0">d..</text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="991.1" y="995.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="994.1" y="1006.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="991.1" y="979.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="994.1" y="990.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.08%)</title><rect x="991.1" y="963.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="994.1" y="974.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.11%)</title><rect x="992.0" y="995.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="995.0" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_lock_irq (1 samples, 0.04%)</title><rect x="993.3" y="995.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="996.3" y="1006.0"></text>
</g>
<g>
<title>ep_poll (40 samples, 1.50%)</title><rect x="993.8" y="995.0" width="17.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="996.8" y="1006.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (29 samples, 1.09%)</title><rect x="996.0" y="979.0" width="12.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="999.0" y="990.0"></text>
</g>
<g>
<title>ep_send_events_proc (18 samples, 0.68%)</title><rect x="1000.0" y="963.0" width="8.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1003.0" y="974.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (10 samples, 0.38%)</title><rect x="1003.1" y="947.0" width="4.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1006.1" y="958.0"></text>
</g>
<g>
<title>pipe_poll (2 samples, 0.08%)</title><rect x="1003.5" y="931.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1006.5" y="942.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.26%)</title><rect x="1004.4" y="931.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1007.4" y="942.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="1005.8" y="915.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1008.8" y="926.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.11%)</title><rect x="1006.2" y="915.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1009.2" y="926.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="1007.5" y="947.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1010.5" y="958.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.08%)</title><rect x="1008.0" y="963.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1011.0" y="974.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="1008.9" y="979.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1011.9" y="990.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 0.15%)</title><rect x="1009.3" y="979.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1012.3" y="990.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.15%)</title><rect x="1009.3" y="963.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1012.3" y="974.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (4 samples, 0.15%)</title><rect x="1009.3" y="947.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1012.3" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.15%)</title><rect x="1009.3" y="931.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1012.3" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.04%)</title><rect x="1011.1" y="979.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1014.1" y="990.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.08%)</title><rect x="1011.5" y="995.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1014.5" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (50 samples, 1.88%)</title><rect x="1012.4" y="1091.0" width="22.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1015.4" y="1102.0">s..</text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.11%)</title><rect x="1012.4" y="1075.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1015.4" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.08%)</title><rect x="1012.4" y="1059.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1015.4" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="1013.3" y="1059.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1016.3" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (44 samples, 1.66%)</title><rect x="1013.8" y="1075.0" width="19.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1016.8" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (42 samples, 1.58%)</title><rect x="1014.6" y="1059.0" width="18.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1017.6" y="1070.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_drain (1 samples, 0.04%)</title><rect x="1014.6" y="1043.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1017.6" y="1054.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="1015.1" y="1043.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1018.1" y="1054.0"></text>
</g>
<g>
<title>read (40 samples, 1.50%)</title><rect x="1015.5" y="1043.0" width="17.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1018.5" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 1.05%)</title><rect x="1020.9" y="1027.0" width="12.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1023.9" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 1.05%)</title><rect x="1020.9" y="1011.0" width="12.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1023.9" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_read (27 samples, 1.02%)</title><rect x="1021.3" y="995.0" width="12.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1024.3" y="1006.0"></text>
</g>
<g>
<title>ksys_read (27 samples, 1.02%)</title><rect x="1021.3" y="979.0" width="12.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1024.3" y="990.0"></text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.11%)</title><rect x="1021.7" y="963.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1024.7" y="974.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.11%)</title><rect x="1021.7" y="947.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1024.7" y="958.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.11%)</title><rect x="1021.7" y="931.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1024.7" y="942.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1023.1" y="963.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1026.1" y="974.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="1023.5" y="963.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1026.5" y="974.0"></text>
</g>
<g>
<title>vfs_read (21 samples, 0.79%)</title><rect x="1024.0" y="963.0" width="9.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1027.0" y="974.0"></text>
</g>
<g>
<title>__vfs_read (15 samples, 0.56%)</title><rect x="1024.0" y="947.0" width="6.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1027.0" y="958.0"></text>
</g>
<g>
<title>new_sync_read (15 samples, 0.56%)</title><rect x="1024.0" y="931.0" width="6.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1027.0" y="942.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.04%)</title><rect x="1024.4" y="915.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1027.4" y="926.0"></text>
</g>
<g>
<title>pipe_read (13 samples, 0.49%)</title><rect x="1024.9" y="915.0" width="5.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1027.9" y="926.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.11%)</title><rect x="1027.1" y="899.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1030.1" y="910.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.11%)</title><rect x="1027.1" y="883.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1030.1" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.11%)</title><rect x="1027.1" y="867.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1030.1" y="878.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.04%)</title><rect x="1028.4" y="899.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1031.4" y="910.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.04%)</title><rect x="1028.8" y="899.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1031.8" y="910.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="1028.8" y="883.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1031.8" y="894.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.04%)</title><rect x="1029.3" y="899.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1032.3" y="910.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.08%)</title><rect x="1029.7" y="899.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1032.7" y="910.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.04%)</title><rect x="1029.7" y="883.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1032.7" y="894.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.04%)</title><rect x="1030.2" y="883.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1033.2" y="894.0"></text>
</g>
<g>
<title>rw_verify_area (6 samples, 0.23%)</title><rect x="1030.6" y="947.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1033.6" y="958.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.23%)</title><rect x="1030.6" y="931.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1033.6" y="942.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.04%)</title><rect x="1030.6" y="915.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1033.6" y="926.0"></text>
</g>
<g>
<title>apparmor_file_permission (5 samples, 0.19%)</title><rect x="1031.1" y="915.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1034.1" y="926.0"></text>
</g>
<g>
<title>common_file_perm (5 samples, 0.19%)</title><rect x="1031.1" y="899.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1034.1" y="910.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.04%)</title><rect x="1032.8" y="883.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1035.8" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.11%)</title><rect x="1033.3" y="1075.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1036.3" y="1086.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.04%)</title><rect x="1033.3" y="1059.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1036.3" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.04%)</title><rect x="1033.3" y="1043.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1036.3" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.04%)</title><rect x="1033.3" y="1027.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1036.3" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.04%)</title><rect x="1033.3" y="1011.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1036.3" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$Node.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1033.3" y="995.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1036.3" y="1006.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.04%)</title><rect x="1033.7" y="1059.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1036.7" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.04%)</title><rect x="1033.7" y="1043.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1036.7" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="1033.7" y="1027.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1036.7" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.nioReadyOps (1 samples, 0.04%)</title><rect x="1034.2" y="1059.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1037.2" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (4 samples, 0.15%)</title><rect x="1034.6" y="1091.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1037.6" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (5 samples, 0.19%)</title><rect x="1036.4" y="1091.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1039.4" y="1102.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (5 samples, 0.19%)</title><rect x="1036.4" y="1075.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1039.4" y="1086.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.19%)</title><rect x="1036.4" y="1059.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1039.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.19%)</title><rect x="1036.4" y="1043.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1039.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.19%)</title><rect x="1036.4" y="1027.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1039.4" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (2 samples, 0.08%)</title><rect x="1038.6" y="1091.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1041.6" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (11 samples, 0.41%)</title><rect x="1039.5" y="1139.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1042.5" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (11 samples, 0.41%)</title><rect x="1039.5" y="1123.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1042.5" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (1 samples, 0.04%)</title><rect x="1039.9" y="1107.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1042.9" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (9 samples, 0.34%)</title><rect x="1040.4" y="1107.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1043.4" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (7 samples, 0.26%)</title><rect x="1040.4" y="1091.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1043.4" y="1102.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 0.26%)</title><rect x="1040.4" y="1075.0" width="3.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1043.4" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.23%)</title><rect x="1040.8" y="1059.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1043.8" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.23%)</title><rect x="1040.8" y="1043.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1043.8" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (5 samples, 0.19%)</title><rect x="1041.3" y="1027.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1044.3" y="1038.0"></text>
</g>
<g>
<title>do_epoll_wait (5 samples, 0.19%)</title><rect x="1041.3" y="1011.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1044.3" y="1022.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="1041.3" y="995.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1044.3" y="1006.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1041.3" y="979.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1044.3" y="990.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="1041.3" y="963.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1044.3" y="974.0"></text>
</g>
<g>
<title>ep_poll (4 samples, 0.15%)</title><rect x="1041.7" y="995.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1044.7" y="1006.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (3 samples, 0.11%)</title><rect x="1041.7" y="979.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1044.7" y="990.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.11%)</title><rect x="1041.7" y="963.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1044.7" y="974.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (1 samples, 0.04%)</title><rect x="1042.6" y="947.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1045.6" y="958.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="1042.6" y="931.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1045.6" y="942.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.04%)</title><rect x="1043.1" y="979.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1046.1" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (2 samples, 0.08%)</title><rect x="1043.5" y="1091.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1046.5" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (1 samples, 0.04%)</title><rect x="1043.5" y="1075.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1046.5" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (1 samples, 0.04%)</title><rect x="1043.5" y="1059.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1046.5" y="1070.0"></text>
</g>
<g>
<title>read (1 samples, 0.04%)</title><rect x="1043.5" y="1043.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1046.5" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1043.5" y="1027.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1046.5" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1043.5" y="1011.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1046.5" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.04%)</title><rect x="1043.5" y="995.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1046.5" y="1006.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.04%)</title><rect x="1043.5" y="979.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1046.5" y="990.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.04%)</title><rect x="1043.5" y="963.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1046.5" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.04%)</title><rect x="1043.9" y="1075.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1046.9" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndUpdateReadyOps (1 samples, 0.04%)</title><rect x="1043.9" y="1059.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1046.9" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectedKeys (1 samples, 0.04%)</title><rect x="1044.4" y="1139.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1047.4" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (9 samples, 0.34%)</title><rect x="1044.8" y="1139.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1047.8" y="1150.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (8 samples, 0.30%)</title><rect x="1044.8" y="1123.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1047.8" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (8 samples, 0.30%)</title><rect x="1044.8" y="1107.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1047.8" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1 samples, 0.04%)</title><rect x="1048.4" y="1123.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1051.4" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (17 samples, 0.64%)</title><rect x="1048.8" y="1139.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.8" y="1150.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (17 samples, 0.64%)</title><rect x="1048.8" y="1123.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1051.8" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (10 samples, 0.38%)</title><rect x="1049.3" y="1107.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1052.3" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (10 samples, 0.38%)</title><rect x="1049.3" y="1091.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1052.3" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (10 samples, 0.38%)</title><rect x="1049.3" y="1075.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1052.3" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (6 samples, 0.23%)</title><rect x="1053.7" y="1107.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1056.7" y="1118.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (218 samples, 8.20%)</title><rect x="1056.4" y="1155.0" width="96.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1059.4" y="1166.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (22 samples, 0.83%)</title><rect x="1056.4" y="1139.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1059.4" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (22 samples, 0.83%)</title><rect x="1056.4" y="1123.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1059.4" y="1134.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1057.7" y="1107.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1060.7" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (18 samples, 0.68%)</title><rect x="1058.1" y="1107.0" width="8.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1061.1" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.53%)</title><rect x="1059.9" y="1091.0" width="6.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1062.9" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.53%)</title><rect x="1059.9" y="1075.0" width="6.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1062.9" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (13 samples, 0.49%)</title><rect x="1060.4" y="1059.0" width="5.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1063.4" y="1070.0"></text>
</g>
<g>
<title>do_epoll_wait (12 samples, 0.45%)</title><rect x="1060.4" y="1043.0" width="5.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1063.4" y="1054.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="1060.4" y="1027.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1063.4" y="1038.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1060.4" y="1011.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1063.4" y="1022.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="1060.4" y="995.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1063.4" y="1006.0"></text>
</g>
<g>
<title>ep_poll (10 samples, 0.38%)</title><rect x="1060.8" y="1027.0" width="4.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1063.8" y="1038.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (9 samples, 0.34%)</title><rect x="1060.8" y="1011.0" width="4.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1063.8" y="1022.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.26%)</title><rect x="1061.3" y="995.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1064.3" y="1006.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (5 samples, 0.19%)</title><rect x="1061.7" y="979.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1064.7" y="990.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.15%)</title><rect x="1062.1" y="963.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1065.1" y="974.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="1063.9" y="979.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1066.9" y="990.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="1064.4" y="995.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1067.4" y="1006.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.04%)</title><rect x="1064.8" y="1011.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1067.8" y="1022.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.04%)</title><rect x="1064.8" y="995.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1067.8" y="1006.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="1064.8" y="979.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1067.8" y="990.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.04%)</title><rect x="1064.8" y="963.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1067.8" y="974.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="1064.8" y="947.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1067.8" y="958.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="1065.3" y="1027.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1068.3" y="1038.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="1065.7" y="1043.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1068.7" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (196 samples, 7.37%)</title><rect x="1066.1" y="1139.0" width="87.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1069.1" y="1150.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (196 samples, 7.37%)</title><rect x="1066.1" y="1123.0" width="87.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1069.1" y="1134.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (179 samples, 6.73%)</title><rect x="1066.6" y="1107.0" width="79.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1069.6" y="1118.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (171 samples, 6.43%)</title><rect x="1067.0" y="1091.0" width="75.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1070.0" y="1102.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (171 samples, 6.43%)</title><rect x="1067.0" y="1075.0" width="75.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1070.0" y="1086.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (170 samples, 6.40%)</title><rect x="1067.0" y="1059.0" width="75.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1070.0" y="1070.0">RequestH..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.19%)</title><rect x="1067.0" y="1043.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1070.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="1067.0" y="1027.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1070.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="1067.0" y="1011.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1070.0" y="1022.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="1067.0" y="995.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1070.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.04%)</title><rect x="1067.5" y="1027.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1070.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="1067.5" y="1011.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1070.5" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.11%)</title><rect x="1067.9" y="1027.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1070.9" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.entity (165 samples, 6.21%)</title><rect x="1069.2" y="1043.0" width="73.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1072.2" y="1054.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.scheduleGetEntity (165 samples, 6.21%)</title><rect x="1069.2" y="1027.0" width="73.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1072.2" y="1038.0">ru/mail/..</text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.04%)</title><rect x="1069.2" y="1011.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1072.2" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.04%)</title><rect x="1069.2" y="995.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1072.2" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.04%)</title><rect x="1069.2" y="979.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1072.2" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (147 samples, 5.53%)</title><rect x="1069.7" y="1011.0" width="65.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1072.7" y="1022.0">java/ut..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (147 samples, 5.53%)</title><rect x="1069.7" y="995.0" width="65.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1072.7" y="1006.0">java/ut..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (147 samples, 5.53%)</title><rect x="1069.7" y="979.0" width="65.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1072.7" y="990.0">java/ut..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (145 samples, 5.46%)</title><rect x="1070.6" y="963.0" width="64.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1073.6" y="974.0">java/ut..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (145 samples, 5.46%)</title><rect x="1070.6" y="947.0" width="64.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1073.6" y="958.0">java/ut..</text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (142 samples, 5.34%)</title><rect x="1070.6" y="931.0" width="63.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1073.6" y="942.0">java/ut..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (142 samples, 5.34%)</title><rect x="1070.6" y="915.0" width="63.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1073.6" y="926.0">java/ut..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (140 samples, 5.27%)</title><rect x="1070.6" y="899.0" width="62.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1073.6" y="910.0">java/u..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (1 samples, 0.04%)</title><rect x="1070.6" y="883.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1073.6" y="894.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$27/1043208434.accept (1 samples, 0.04%)</title><rect x="1070.6" y="867.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1073.6" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="1070.6" y="851.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1073.6" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$662/554399477.apply (139 samples, 5.23%)</title><rect x="1071.0" y="883.0" width="61.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1074.0" y="894.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.lambda$scheduleGetEntity$2 (139 samples, 5.23%)</title><rect x="1071.0" y="867.0" width="61.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1074.0" y="878.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$LocalServiceClient.getAsync (15 samples, 0.56%)</title><rect x="1071.0" y="851.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1074.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (15 samples, 0.56%)</title><rect x="1071.0" y="835.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1074.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (15 samples, 0.56%)</title><rect x="1071.0" y="819.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1074.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.56%)</title><rect x="1071.0" y="803.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1074.0" y="814.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (15 samples, 0.56%)</title><rect x="1071.0" y="787.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1074.0" y="798.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (15 samples, 0.56%)</title><rect x="1071.0" y="771.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1074.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (15 samples, 0.56%)</title><rect x="1071.0" y="755.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1074.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (15 samples, 0.56%)</title><rect x="1071.0" y="739.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1074.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (14 samples, 0.53%)</title><rect x="1071.0" y="723.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1074.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.53%)</title><rect x="1071.0" y="707.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1074.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.53%)</title><rect x="1071.0" y="691.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1074.0" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.45%)</title><rect x="1071.5" y="675.0" width="5.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1074.5" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.34%)</title><rect x="1072.8" y="659.0" width="4.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1075.8" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="1072.8" y="643.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1075.8" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.30%)</title><rect x="1073.2" y="643.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1076.2" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.26%)</title><rect x="1073.7" y="627.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1076.7" y="638.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.23%)</title><rect x="1073.7" y="611.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1076.7" y="622.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.23%)</title><rect x="1073.7" y="595.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1076.7" y="606.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.23%)</title><rect x="1073.7" y="579.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1076.7" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.23%)</title><rect x="1073.7" y="563.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1076.7" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.23%)</title><rect x="1073.7" y="547.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1076.7" y="558.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="1076.4" y="611.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1079.4" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1076.8" y="675.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1079.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.04%)</title><rect x="1077.2" y="723.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1080.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpServiceClient.getAsync (124 samples, 4.67%)</title><rect x="1077.7" y="851.0" width="55.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1080.7" y="862.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.08%)</title><rect x="1078.1" y="835.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1081.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.08%)</title><rect x="1078.1" y="819.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1081.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2 samples, 0.08%)</title><rect x="1078.1" y="803.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1081.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$290/1393051360.apply (2 samples, 0.08%)</title><rect x="1078.1" y="787.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1081.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (2 samples, 0.08%)</title><rect x="1078.1" y="771.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1081.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (2 samples, 0.08%)</title><rect x="1078.1" y="755.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1081.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (2 samples, 0.08%)</title><rect x="1078.1" y="739.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1081.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.08%)</title><rect x="1078.1" y="723.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1081.1" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.08%)</title><rect x="1078.1" y="707.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1081.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (93 samples, 3.50%)</title><rect x="1079.0" y="835.0" width="41.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1082.0" y="846.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (93 samples, 3.50%)</title><rect x="1079.0" y="819.0" width="41.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1082.0" y="830.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (93 samples, 3.50%)</title><rect x="1079.0" y="803.0" width="41.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1082.0" y="814.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (93 samples, 3.50%)</title><rect x="1079.0" y="787.0" width="41.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1082.0" y="798.0">jdk..</text>
</g>
<g>
<title>java/util/Objects.requireNonNull (2 samples, 0.08%)</title><rect x="1079.0" y="771.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1082.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.04%)</title><rect x="1079.9" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1082.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (43 samples, 1.62%)</title><rect x="1080.3" y="771.0" width="19.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1083.3" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (4 samples, 0.15%)</title><rect x="1080.8" y="755.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1083.8" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.04%)</title><rect x="1080.8" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1083.8" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.04%)</title><rect x="1080.8" y="723.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1083.8" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.11%)</title><rect x="1081.2" y="739.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1084.2" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.11%)</title><rect x="1081.2" y="723.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1084.2" y="734.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.11%)</title><rect x="1081.2" y="707.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1084.2" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.11%)</title><rect x="1081.2" y="691.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1084.2" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.04%)</title><rect x="1082.1" y="675.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1085.1" y="686.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (1 samples, 0.04%)</title><rect x="1082.1" y="659.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1085.1" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$HashMapSpliterator.estimateSize (1 samples, 0.04%)</title><rect x="1082.1" y="643.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1085.1" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (10 samples, 0.38%)</title><rect x="1082.6" y="755.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1085.6" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (10 samples, 0.38%)</title><rect x="1082.6" y="739.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1085.6" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (1 samples, 0.04%)</title><rect x="1082.6" y="723.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1085.6" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (1 samples, 0.04%)</title><rect x="1082.6" y="707.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1085.6" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (1 samples, 0.04%)</title><rect x="1082.6" y="691.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1085.6" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (9 samples, 0.34%)</title><rect x="1083.0" y="723.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1086.0" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (8 samples, 0.30%)</title><rect x="1083.5" y="707.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1086.5" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.accept (8 samples, 0.30%)</title><rect x="1083.5" y="691.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1086.5" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (8 samples, 0.30%)</title><rect x="1083.5" y="675.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1086.5" y="686.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.19%)</title><rect x="1083.5" y="659.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1086.5" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.accept (2 samples, 0.08%)</title><rect x="1083.5" y="643.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1086.5" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.08%)</title><rect x="1083.5" y="627.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1086.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$81/352083716.test (2 samples, 0.08%)</title><rect x="1083.5" y="611.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1086.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (2 samples, 0.08%)</title><rect x="1083.5" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1086.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/871160466.test (2 samples, 0.08%)</title><rect x="1083.5" y="579.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1086.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (2 samples, 0.08%)</title><rect x="1083.5" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1086.5" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.08%)</title><rect x="1083.5" y="547.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1086.5" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (2 samples, 0.08%)</title><rect x="1083.5" y="531.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1086.5" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.08%)</title><rect x="1083.5" y="515.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1086.5" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.08%)</title><rect x="1083.5" y="499.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1086.5" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.08%)</title><rect x="1083.5" y="483.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1086.5" y="494.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.08%)</title><rect x="1083.5" y="467.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1086.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="1083.9" y="451.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1086.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.04%)</title><rect x="1083.9" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1086.9" y="446.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.04%)</title><rect x="1083.9" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1086.9" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (3 samples, 0.11%)</title><rect x="1084.3" y="643.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1087.3" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (3 samples, 0.11%)</title><rect x="1084.3" y="627.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1087.3" y="638.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.04%)</title><rect x="1085.7" y="659.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1088.7" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.04%)</title><rect x="1085.7" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1088.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="1086.1" y="659.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1089.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$81/352083716.test (1 samples, 0.04%)</title><rect x="1086.1" y="643.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1089.1" y="654.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.04%)</title><rect x="1086.6" y="659.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1089.6" y="670.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.04%)</title><rect x="1086.6" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1089.6" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.04%)</title><rect x="1086.6" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1089.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (1 samples, 0.04%)</title><rect x="1087.0" y="755.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1090.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.04%)</title><rect x="1087.0" y="739.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1090.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.04%)</title><rect x="1087.0" y="723.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1090.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.checkTimeout (1 samples, 0.04%)</title><rect x="1087.4" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1090.4" y="766.0"></text>
</g>
<g>
<title>java/time/Duration.equals (1 samples, 0.04%)</title><rect x="1087.4" y="739.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1090.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (26 samples, 0.98%)</title><rect x="1087.9" y="755.0" width="11.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1090.9" y="766.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (26 samples, 0.98%)</title><rect x="1087.9" y="739.0" width="11.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1090.9" y="750.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (25 samples, 0.94%)</title><rect x="1088.3" y="723.0" width="11.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1091.3" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.04%)</title><rect x="1088.3" y="707.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1091.3" y="718.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (17 samples, 0.64%)</title><rect x="1088.8" y="707.0" width="7.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1091.8" y="718.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.04%)</title><rect x="1090.1" y="691.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1093.1" y="702.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.04%)</title><rect x="1090.6" y="691.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1093.6" y="702.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.04%)</title><rect x="1090.6" y="675.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1093.6" y="686.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (6 samples, 0.23%)</title><rect x="1091.0" y="691.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1094.0" y="702.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="1091.0" y="675.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1094.0" y="686.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.08%)</title><rect x="1091.4" y="675.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1094.4" y="686.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.08%)</title><rect x="1091.4" y="659.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1094.4" y="670.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (3 samples, 0.11%)</title><rect x="1092.3" y="675.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1095.3" y="686.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (6 samples, 0.23%)</title><rect x="1093.7" y="691.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1096.7" y="702.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.08%)</title><rect x="1094.1" y="675.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1097.1" y="686.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.04%)</title><rect x="1094.6" y="659.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1097.6" y="670.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.11%)</title><rect x="1095.0" y="675.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1098.0" y="686.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="1095.4" y="659.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1098.4" y="670.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.04%)</title><rect x="1095.9" y="659.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1098.9" y="670.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="1095.9" y="643.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1098.9" y="654.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.04%)</title><rect x="1095.9" y="627.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1098.9" y="638.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.04%)</title><rect x="1096.3" y="707.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1099.3" y="718.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (6 samples, 0.23%)</title><rect x="1096.8" y="707.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1099.8" y="718.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (6 samples, 0.23%)</title><rect x="1096.8" y="691.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1099.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.08%)</title><rect x="1096.8" y="675.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1099.8" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="1096.8" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1099.8" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="1096.8" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1099.8" y="654.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.04%)</title><rect x="1097.2" y="659.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1100.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.04%)</title><rect x="1097.7" y="675.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1100.7" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.04%)</title><rect x="1097.7" y="659.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1100.7" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.04%)</title><rect x="1097.7" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1100.7" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="1097.7" y="627.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1100.7" y="638.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (3 samples, 0.11%)</title><rect x="1098.1" y="675.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1101.1" y="686.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.04%)</title><rect x="1099.0" y="659.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1102.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.method (1 samples, 0.04%)</title><rect x="1099.4" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1102.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (10 samples, 0.38%)</title><rect x="1099.9" y="771.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1102.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1100.8" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1103.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="1100.8" y="739.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1103.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="1100.8" y="723.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1103.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$149/525938521.get$Lambda (1 samples, 0.04%)</title><rect x="1100.8" y="707.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1103.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$149/525938521.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1100.8" y="691.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1103.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (5 samples, 0.19%)</title><rect x="1101.2" y="755.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1104.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (5 samples, 0.19%)</title><rect x="1101.2" y="739.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1104.2" y="750.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (3 samples, 0.11%)</title><rect x="1101.2" y="723.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1104.2" y="734.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (3 samples, 0.11%)</title><rect x="1101.2" y="707.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1104.2" y="718.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (3 samples, 0.11%)</title><rect x="1101.2" y="691.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1104.2" y="702.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (3 samples, 0.11%)</title><rect x="1101.2" y="675.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1104.2" y="686.0"></text>
</g>
<g>
<title>java/lang/ref/SoftReference.get (1 samples, 0.04%)</title><rect x="1102.1" y="659.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1105.1" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (2 samples, 0.08%)</title><rect x="1102.5" y="723.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1105.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (1 samples, 0.04%)</title><rect x="1103.4" y="755.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1106.4" y="766.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.04%)</title><rect x="1103.9" y="755.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1106.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (36 samples, 1.35%)</title><rect x="1104.3" y="771.0" width="16.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1107.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (35 samples, 1.32%)</title><rect x="1104.3" y="755.0" width="15.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1107.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.&lt;init&gt; (2 samples, 0.08%)</title><rect x="1104.8" y="739.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1107.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (32 samples, 1.20%)</title><rect x="1105.7" y="739.0" width="14.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1108.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (31 samples, 1.17%)</title><rect x="1105.7" y="723.0" width="13.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1108.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (31 samples, 1.17%)</title><rect x="1105.7" y="707.0" width="13.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1108.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (30 samples, 1.13%)</title><rect x="1106.1" y="691.0" width="13.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1109.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (30 samples, 1.13%)</title><rect x="1106.1" y="675.0" width="13.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1109.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (30 samples, 1.13%)</title><rect x="1106.1" y="659.0" width="13.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1109.1" y="670.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.11%)</title><rect x="1106.5" y="643.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1109.5" y="654.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="1106.5" y="627.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1109.5" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="1107.0" y="627.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1110.0" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="1107.4" y="627.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1110.4" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (26 samples, 0.98%)</title><rect x="1107.9" y="643.0" width="11.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1110.9" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.83%)</title><rect x="1109.6" y="627.0" width="9.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1112.6" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.83%)</title><rect x="1109.6" y="611.0" width="9.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1112.6" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (22 samples, 0.83%)</title><rect x="1109.6" y="595.0" width="9.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1112.6" y="606.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.83%)</title><rect x="1109.6" y="579.0" width="9.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1112.6" y="590.0"></text>
</g>
<g>
<title>futex_wake (22 samples, 0.83%)</title><rect x="1109.6" y="563.0" width="9.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1112.6" y="574.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.04%)</title><rect x="1110.1" y="547.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1113.1" y="558.0"></text>
</g>
<g>
<title>plist_del (1 samples, 0.04%)</title><rect x="1110.1" y="531.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1113.1" y="542.0"></text>
</g>
<g>
<title>wake_up_q (20 samples, 0.75%)</title><rect x="1110.5" y="547.0" width="8.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1113.5" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (20 samples, 0.75%)</title><rect x="1110.5" y="531.0" width="8.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1113.5" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.75%)</title><rect x="1110.5" y="515.0" width="8.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1113.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (1 samples, 0.04%)</title><rect x="1119.4" y="723.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1122.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (1 samples, 0.04%)</title><rect x="1119.9" y="755.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1122.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.04%)</title><rect x="1119.9" y="739.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1122.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.04%)</title><rect x="1119.9" y="723.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1122.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="1119.9" y="707.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1122.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="1119.9" y="691.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (6 samples, 0.23%)</title><rect x="1120.3" y="835.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1123.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (6 samples, 0.23%)</title><rect x="1120.3" y="819.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1123.3" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (5 samples, 0.19%)</title><rect x="1120.3" y="803.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1123.3" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (5 samples, 0.19%)</title><rect x="1120.3" y="787.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1123.3" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="1120.3" y="771.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1123.3" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="1120.3" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1123.3" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.get$Lambda (1 samples, 0.04%)</title><rect x="1120.3" y="739.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1123.3" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (1 samples, 0.04%)</title><rect x="1120.7" y="771.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1123.7" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (1 samples, 0.04%)</title><rect x="1120.7" y="755.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1123.7" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.04%)</title><rect x="1120.7" y="739.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1123.7" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3 samples, 0.11%)</title><rect x="1121.2" y="771.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1124.2" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.accept (3 samples, 0.11%)</title><rect x="1121.2" y="755.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1124.2" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.08%)</title><rect x="1121.6" y="739.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1124.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.04%)</title><rect x="1121.6" y="723.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1124.6" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.04%)</title><rect x="1121.6" y="707.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1124.6" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.04%)</title><rect x="1121.6" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1124.6" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.04%)</title><rect x="1122.1" y="723.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1125.1" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.accept (1 samples, 0.04%)</title><rect x="1122.1" y="707.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1125.1" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.04%)</title><rect x="1122.1" y="691.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1125.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/871160466.test (1 samples, 0.04%)</title><rect x="1122.1" y="675.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1125.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.04%)</title><rect x="1122.1" y="659.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1125.1" y="670.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.04%)</title><rect x="1122.1" y="643.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1125.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.04%)</title><rect x="1122.1" y="627.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1125.1" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.04%)</title><rect x="1122.1" y="611.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1125.1" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.04%)</title><rect x="1122.1" y="595.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1125.1" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.04%)</title><rect x="1122.1" y="579.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1125.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="1122.1" y="563.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1125.1" y="574.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="1122.1" y="547.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1125.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.04%)</title><rect x="1122.1" y="531.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1125.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.map (1 samples, 0.04%)</title><rect x="1122.5" y="803.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1125.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpServiceClient.request (22 samples, 0.83%)</title><rect x="1123.0" y="835.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1126.0" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.15%)</title><rect x="1123.0" y="819.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1126.0" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (3 samples, 0.11%)</title><rect x="1123.4" y="803.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1126.4" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1806431167.invoke (3 samples, 0.11%)</title><rect x="1123.4" y="787.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1126.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.11%)</title><rect x="1123.4" y="771.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1126.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.04%)</title><rect x="1123.4" y="755.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1126.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1123.4" y="739.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1126.4" y="750.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1123.4" y="723.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1126.4" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.04%)</title><rect x="1123.4" y="707.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1126.4" y="718.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.04%)</title><rect x="1123.9" y="755.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1126.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.04%)</title><rect x="1123.9" y="739.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1126.9" y="750.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (1 samples, 0.04%)</title><rect x="1124.3" y="755.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1127.3" y="766.0"></text>
</g>
<g>
<title>java/net/URI.create (11 samples, 0.41%)</title><rect x="1124.7" y="819.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1127.7" y="830.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (11 samples, 0.41%)</title><rect x="1124.7" y="803.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1127.7" y="814.0"></text>
</g>
<g>
<title>java/net/URI$Parser.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1124.7" y="787.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.7" y="798.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (9 samples, 0.34%)</title><rect x="1125.2" y="787.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1128.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="1125.2" y="771.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1128.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="1125.2" y="755.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1128.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1125.2" y="739.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1128.2" y="750.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (1 samples, 0.04%)</title><rect x="1125.6" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1128.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="1125.6" y="755.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.6" y="766.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.04%)</title><rect x="1126.1" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.1" y="782.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.04%)</title><rect x="1126.1" y="755.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1129.1" y="766.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (6 samples, 0.23%)</title><rect x="1126.5" y="771.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.5" y="782.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (1 samples, 0.04%)</title><rect x="1127.0" y="755.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1130.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="1127.0" y="739.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1130.0" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.04%)</title><rect x="1127.0" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1130.0" y="734.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (4 samples, 0.15%)</title><rect x="1127.4" y="755.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1130.4" y="766.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (4 samples, 0.15%)</title><rect x="1127.4" y="739.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1130.4" y="750.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (2 samples, 0.08%)</title><rect x="1127.8" y="723.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1130.8" y="734.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.08%)</title><rect x="1127.8" y="707.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1130.8" y="718.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.04%)</title><rect x="1128.7" y="723.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1131.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="1128.7" y="707.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1131.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="1128.7" y="691.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1131.7" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="1128.7" y="675.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1131.7" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1129.2" y="787.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1132.2" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (4 samples, 0.15%)</title><rect x="1129.6" y="819.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1132.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (4 samples, 0.15%)</title><rect x="1129.6" y="803.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1132.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (3 samples, 0.11%)</title><rect x="1131.4" y="819.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1134.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (3 samples, 0.11%)</title><rect x="1131.4" y="803.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1134.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (3 samples, 0.11%)</title><rect x="1131.4" y="787.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1134.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/871160466.test (3 samples, 0.11%)</title><rect x="1131.4" y="771.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1134.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (3 samples, 0.11%)</title><rect x="1131.4" y="755.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1134.4" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (3 samples, 0.11%)</title><rect x="1131.4" y="739.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1134.4" y="750.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (3 samples, 0.11%)</title><rect x="1131.4" y="723.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1134.4" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (3 samples, 0.11%)</title><rect x="1131.4" y="707.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1134.4" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.11%)</title><rect x="1131.4" y="691.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1134.4" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.08%)</title><rect x="1131.8" y="675.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1134.8" y="686.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="1132.3" y="659.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1135.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="1132.3" y="643.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1135.3" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.04%)</title><rect x="1132.3" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1135.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.getChar (1 samples, 0.04%)</title><rect x="1132.3" y="611.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1135.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$661/216336529.apply (2 samples, 0.08%)</title><rect x="1132.7" y="899.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1135.7" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.08%)</title><rect x="1132.7" y="883.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1135.7" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.08%)</title><rect x="1132.7" y="867.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1135.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.04%)</title><rect x="1133.2" y="851.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1136.2" y="862.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (1 samples, 0.04%)</title><rect x="1133.6" y="931.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1136.6" y="942.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (1 samples, 0.04%)</title><rect x="1133.6" y="915.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1136.6" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (1 samples, 0.04%)</title><rect x="1133.6" y="899.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.6" y="910.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (2 samples, 0.08%)</title><rect x="1134.1" y="931.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1137.1" y="942.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.04%)</title><rect x="1134.5" y="915.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1137.5" y="926.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="1134.5" y="899.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1137.5" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils.firstN (3 samples, 0.11%)</title><rect x="1135.0" y="1011.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1138.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1182594129.linkToTargetMethod (1 samples, 0.04%)</title><rect x="1135.0" y="995.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1138.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1191051212.invokeStatic (1 samples, 0.04%)</title><rect x="1135.0" y="979.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1138.0" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils$$Lambda$170/1308121008.get$Lambda (1 samples, 0.04%)</title><rect x="1135.0" y="963.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1138.0" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.08%)</title><rect x="1135.4" y="995.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1138.4" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils$$Lambda$175/1236692729.accept (2 samples, 0.08%)</title><rect x="1135.4" y="979.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1138.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils.lambda$firstN$1 (2 samples, 0.08%)</title><rect x="1135.4" y="963.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1138.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.08%)</title><rect x="1135.4" y="947.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1138.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.08%)</title><rect x="1135.4" y="931.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1138.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (2 samples, 0.08%)</title><rect x="1135.4" y="915.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1138.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.08%)</title><rect x="1135.4" y="899.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1138.4" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/topology/ConsistentHashingTopology.primaryFor (14 samples, 0.53%)</title><rect x="1136.3" y="1011.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1139.3" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (3 samples, 0.11%)</title><rect x="1136.7" y="995.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1139.7" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (3 samples, 0.11%)</title><rect x="1136.7" y="979.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1139.7" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (3 samples, 0.11%)</title><rect x="1136.7" y="963.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1139.7" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (3 samples, 0.11%)</title><rect x="1136.7" y="947.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1139.7" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (3 samples, 0.11%)</title><rect x="1136.7" y="931.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1139.7" y="942.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.19%)</title><rect x="1138.1" y="995.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1141.1" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.19%)</title><rect x="1138.1" y="979.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1141.1" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.19%)</title><rect x="1138.1" y="963.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1141.1" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.04%)</title><rect x="1138.5" y="947.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1141.5" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (3 samples, 0.11%)</title><rect x="1138.9" y="947.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1141.9" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/topology/ConsistentHashingTopology.hash (5 samples, 0.19%)</title><rect x="1140.3" y="995.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1143.3" y="1006.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashString (4 samples, 0.15%)</title><rect x="1140.7" y="979.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1143.7" y="990.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHasher.putString (2 samples, 0.08%)</title><rect x="1140.7" y="963.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1143.7" y="974.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHasher.putBytes (2 samples, 0.08%)</title><rect x="1140.7" y="947.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1143.7" y="958.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytes (2 samples, 0.08%)</title><rect x="1140.7" y="931.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1143.7" y="942.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytesInternal (2 samples, 0.08%)</title><rect x="1140.7" y="915.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1143.7" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.08%)</title><rect x="1140.7" y="899.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1143.7" y="910.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (1 samples, 0.04%)</title><rect x="1141.6" y="963.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1144.6" y="974.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.processRemaining (1 samples, 0.04%)</title><rect x="1141.6" y="947.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.6" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getLong (1 samples, 0.04%)</title><rect x="1141.6" y="931.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1144.6" y="942.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (1 samples, 0.04%)</title><rect x="1142.1" y="963.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1145.1" y="974.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1142.1" y="947.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1145.1" y="958.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1142.1" y="931.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1145.1" y="942.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1142.1" y="915.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1145.1" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.04%)</title><rect x="1142.1" y="899.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1145.1" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1142.1" y="883.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1145.1" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1142.1" y="867.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1145.1" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1142.1" y="851.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1145.1" y="862.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1142.1" y="835.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1145.1" y="846.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.04%)</title><rect x="1142.1" y="819.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1145.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="1142.5" y="1059.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1145.5" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="1142.5" y="1043.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1145.5" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="1142.5" y="1027.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1145.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.19%)</title><rect x="1142.9" y="1091.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1145.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1143.8" y="1075.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1146.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="1143.8" y="1059.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1146.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.08%)</title><rect x="1144.3" y="1075.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1147.3" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.08%)</title><rect x="1144.3" y="1059.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1147.3" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.04%)</title><rect x="1145.2" y="1091.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1148.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="1145.2" y="1075.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1148.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="1145.2" y="1059.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1148.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="1145.6" y="1091.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1148.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="1145.6" y="1075.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1148.6" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (16 samples, 0.60%)</title><rect x="1146.0" y="1107.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1149.0" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (16 samples, 0.60%)</title><rect x="1146.0" y="1091.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1149.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="1146.9" y="1075.0" width="2.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1149.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="1146.9" y="1059.0" width="2.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1149.9" y="1070.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.19%)</title><rect x="1146.9" y="1043.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1149.9" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (1 samples, 0.04%)</title><rect x="1147.8" y="1027.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1150.8" y="1038.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.08%)</title><rect x="1148.3" y="1027.0" width="0.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1151.3" y="1038.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.08%)</title><rect x="1148.3" y="1011.0" width="0.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1151.3" y="1022.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.08%)</title><rect x="1148.3" y="995.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1151.3" y="1006.0"></text>
</g>
<g>
<title>__libc_recv (9 samples, 0.34%)</title><rect x="1149.2" y="1075.0" width="4.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1152.2" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.30%)</title><rect x="1149.6" y="1059.0" width="3.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1152.6" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.30%)</title><rect x="1149.6" y="1043.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1152.6" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (7 samples, 0.26%)</title><rect x="1150.0" y="1027.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1153.0" y="1038.0"></text>
</g>
<g>
<title>__sys_recvfrom (7 samples, 0.26%)</title><rect x="1150.0" y="1011.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1153.0" y="1022.0"></text>
</g>
<g>
<title>sock_recvmsg (4 samples, 0.15%)</title><rect x="1150.0" y="995.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1153.0" y="1006.0"></text>
</g>
<g>
<title>inet6_recvmsg (4 samples, 0.15%)</title><rect x="1150.0" y="979.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1153.0" y="990.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 0.15%)</title><rect x="1150.0" y="963.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1153.0" y="974.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="1150.0" y="947.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1153.0" y="958.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="1150.0" y="931.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1153.0" y="942.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.04%)</title><rect x="1150.0" y="915.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1153.0" y="926.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.08%)</title><rect x="1150.5" y="947.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1153.5" y="958.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.08%)</title><rect x="1150.5" y="931.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1153.5" y="942.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.04%)</title><rect x="1150.9" y="915.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1153.9" y="926.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.04%)</title><rect x="1150.9" y="899.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1153.9" y="910.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="1150.9" y="883.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1153.9" y="894.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.04%)</title><rect x="1151.4" y="947.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1154.4" y="958.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="1151.4" y="931.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1154.4" y="942.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="1151.4" y="915.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1154.4" y="926.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.11%)</title><rect x="1151.8" y="995.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1154.8" y="1006.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="1151.8" y="979.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1154.8" y="990.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1151.8" y="963.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1154.8" y="974.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="1151.8" y="947.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1154.8" y="958.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="1152.3" y="979.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1155.3" y="990.0"></text>
</g>
<g>
<title>start_thread (83 samples, 3.12%)</title><rect x="1153.2" y="1155.0" width="36.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1156.2" y="1166.0">sta..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (83 samples, 3.12%)</title><rect x="1153.2" y="1139.0" width="36.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1156.2" y="1150.0">thr..</text>
</g>
<g>
<title>Thread::call_run() (83 samples, 3.12%)</title><rect x="1153.2" y="1123.0" width="36.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.2" y="1134.0">Thr..</text>
</g>
<g>
<title>GangWorker::loop() (52 samples, 1.96%)</title><rect x="1153.2" y="1107.0" width="23.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1156.2" y="1118.0">G..</text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="1153.2" y="1091.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1156.2" y="1102.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (1 samples, 0.04%)</title><rect x="1153.2" y="1075.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.2" y="1086.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::G1SerialFreeCollectionSetClosure::do_heap_region(HeapRegion*) (1 samples, 0.04%)</title><rect x="1153.2" y="1059.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1156.2" y="1070.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (40 samples, 1.50%)</title><rect x="1153.6" y="1091.0" width="17.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.6" y="1102.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (31 samples, 1.17%)</title><rect x="1153.6" y="1075.0" width="13.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1156.6" y="1086.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.04%)</title><rect x="1154.0" y="1059.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1157.0" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (1 samples, 0.04%)</title><rect x="1154.0" y="1043.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1157.0" y="1054.0"></text>
</g>
<g>
<title>SpinPause (29 samples, 1.09%)</title><rect x="1154.5" y="1059.0" width="12.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1157.5" y="1070.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (6 samples, 0.23%)</title><rect x="1167.4" y="1075.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1170.4" y="1086.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (6 samples, 0.23%)</title><rect x="1167.4" y="1059.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1170.4" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (5 samples, 0.19%)</title><rect x="1167.4" y="1043.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1170.4" y="1054.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (5 samples, 0.19%)</title><rect x="1167.4" y="1027.0" width="2.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1170.4" y="1038.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (5 samples, 0.19%)</title><rect x="1167.4" y="1011.0" width="2.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1170.4" y="1022.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.08%)</title><rect x="1167.4" y="995.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1170.4" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (1 samples, 0.04%)</title><rect x="1167.4" y="979.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1170.4" y="990.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.04%)</title><rect x="1167.8" y="979.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1170.8" y="990.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (3 samples, 0.11%)</title><rect x="1168.2" y="995.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1171.2" y="1006.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (3 samples, 0.11%)</title><rect x="1168.2" y="979.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.2" y="990.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (2 samples, 0.08%)</title><rect x="1168.2" y="963.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.2" y="974.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*, MemRegion) (1 samples, 0.04%)</title><rect x="1169.1" y="963.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1172.1" y="974.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.04%)</title><rect x="1169.1" y="947.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1172.1" y="958.0"></text>
</g>
<g>
<title>G1EvacPhaseTimesTracker::~G1EvacPhaseTimesTracker() (1 samples, 0.04%)</title><rect x="1169.6" y="1043.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1172.6" y="1054.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (3 samples, 0.11%)</title><rect x="1170.0" y="1075.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1173.0" y="1086.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.08%)</title><rect x="1170.0" y="1059.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.0" y="1070.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (2 samples, 0.08%)</title><rect x="1170.0" y="1043.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1173.0" y="1054.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.04%)</title><rect x="1170.0" y="1027.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1173.0" y="1038.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.04%)</title><rect x="1170.5" y="1027.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.5" y="1038.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (1 samples, 0.04%)</title><rect x="1170.5" y="1011.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1173.5" y="1022.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (1 samples, 0.04%)</title><rect x="1170.5" y="995.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1173.5" y="1006.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.04%)</title><rect x="1170.5" y="979.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.5" y="990.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (1 samples, 0.04%)</title><rect x="1170.9" y="1059.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.9" y="1070.0"></text>
</g>
<g>
<title>G1STWRefProcTaskProxy::work(unsigned int) (11 samples, 0.41%)</title><rect x="1171.4" y="1091.0" width="4.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.4" y="1102.0"></text>
</g>
<g>
<title>RefProcPhase1Task::work(unsigned int, BoolObjectClosure&amp;, OopClosure&amp;, VoidClosure&amp;) (11 samples, 0.41%)</title><rect x="1171.4" y="1075.0" width="4.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1174.4" y="1086.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_soft_ref_reconsider_work(DiscoveredList&amp;, ReferencePolicy*, BoolObjectClosure*, OopClosure*, VoidClosure*) (11 samples, 0.41%)</title><rect x="1171.4" y="1059.0" width="4.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1174.4" y="1070.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (11 samples, 0.41%)</title><rect x="1171.4" y="1043.0" width="4.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1174.4" y="1054.0"></text>
</g>
<g>
<title>SpinPause (11 samples, 0.41%)</title><rect x="1171.4" y="1027.0" width="4.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1174.4" y="1038.0"></text>
</g>
<g>
<title>JavaThread::run() (30 samples, 1.13%)</title><rect x="1176.2" y="1107.0" width="13.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1179.2" y="1118.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (30 samples, 1.13%)</title><rect x="1176.2" y="1091.0" width="13.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.2" y="1102.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (30 samples, 1.13%)</title><rect x="1176.2" y="1075.0" width="13.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.2" y="1086.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (30 samples, 1.13%)</title><rect x="1176.2" y="1059.0" width="13.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1179.2" y="1070.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (29 samples, 1.09%)</title><rect x="1176.2" y="1043.0" width="12.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.2" y="1054.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (29 samples, 1.09%)</title><rect x="1176.2" y="1027.0" width="12.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1179.2" y="1038.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (16 samples, 0.60%)</title><rect x="1176.2" y="1011.0" width="7.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1179.2" y="1022.0"></text>
</g>
<g>
<title>Compile::Output() (3 samples, 0.11%)</title><rect x="1176.2" y="995.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1179.2" y="1006.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (2 samples, 0.08%)</title><rect x="1176.2" y="979.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1179.2" y="990.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (1 samples, 0.04%)</title><rect x="1176.7" y="963.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1179.7" y="974.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.04%)</title><rect x="1177.1" y="979.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1180.1" y="990.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.04%)</title><rect x="1177.1" y="963.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1180.1" y="974.0"></text>
</g>
<g>
<title>Block::code_alignment() const (1 samples, 0.04%)</title><rect x="1177.1" y="947.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1180.1" y="958.0"></text>
</g>
<g>
<title>Matcher::match() (2 samples, 0.08%)</title><rect x="1177.6" y="995.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.6" y="1006.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (1 samples, 0.04%)</title><rect x="1177.6" y="979.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1180.6" y="990.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 0.04%)</title><rect x="1178.0" y="979.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.0" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (11 samples, 0.41%)</title><rect x="1178.5" y="995.0" width="4.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.5" y="1006.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.04%)</title><rect x="1178.5" y="979.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.5" y="990.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (2 samples, 0.08%)</title><rect x="1178.9" y="979.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.9" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.04%)</title><rect x="1179.8" y="979.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1182.8" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (3 samples, 0.11%)</title><rect x="1180.2" y="979.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.2" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.04%)</title><rect x="1180.2" y="963.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.2" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::check_for_high_pressure_transition_at_fatproj(unsigned int&amp;, unsigned int, LRG&amp;, PhaseChaitin::Pressure&amp;, int) (1 samples, 0.04%)</title><rect x="1180.7" y="963.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.7" y="974.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.04%)</title><rect x="1180.7" y="947.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.7" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.04%)</title><rect x="1181.1" y="963.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.1" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.04%)</title><rect x="1181.6" y="979.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.6" y="990.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.04%)</title><rect x="1181.6" y="963.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.6" y="974.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.04%)</title><rect x="1182.0" y="979.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.0" y="990.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.04%)</title><rect x="1182.0" y="963.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.0" y="974.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.04%)</title><rect x="1182.5" y="979.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1185.5" y="990.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.04%)</title><rect x="1182.9" y="979.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.9" y="990.0"></text>
</g>
<g>
<title>Compile::Optimize() (9 samples, 0.34%)</title><rect x="1183.3" y="1011.0" width="4.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.3" y="1022.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.04%)</title><rect x="1183.3" y="995.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.3" y="1006.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.04%)</title><rect x="1183.3" y="979.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.3" y="990.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) [clone .part.252] (1 samples, 0.04%)</title><rect x="1183.3" y="963.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.3" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (7 samples, 0.26%)</title><rect x="1183.8" y="995.0" width="3.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.8" y="1006.0"></text>
</g>
<g>
<title>CProjNode::is_CFG() const (1 samples, 0.04%)</title><rect x="1183.8" y="979.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.8" y="990.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.04%)</title><rect x="1184.2" y="979.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.2" y="990.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.04%)</title><rect x="1184.2" y="963.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.2" y="974.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.04%)</title><rect x="1184.2" y="947.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.2" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_unroll(IdealLoopTree*, Node_List&amp;, bool) (1 samples, 0.04%)</title><rect x="1184.2" y="931.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.2" y="942.0"></text>
</g>
<g>
<title>NodeHash::hash_delete(Node const*) (1 samples, 0.04%)</title><rect x="1184.2" y="915.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.2" y="926.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.11%)</title><rect x="1184.7" y="979.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.7" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.04%)</title><rect x="1185.1" y="963.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.1" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.04%)</title><rect x="1185.1" y="947.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.1" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (1 samples, 0.04%)</title><rect x="1185.1" y="931.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.1" y="942.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.04%)</title><rect x="1185.6" y="963.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.6" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::eliminate_useless_predicates() [clone .part.143] (1 samples, 0.04%)</title><rect x="1186.0" y="979.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.0" y="990.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.04%)</title><rect x="1186.0" y="963.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.0" y="974.0"></text>
</g>
<g>
<title>Node::del_req(unsigned int) (1 samples, 0.04%)</title><rect x="1186.0" y="947.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.0" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.04%)</title><rect x="1186.4" y="979.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.4" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.04%)</title><rect x="1186.4" y="963.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.4" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_local_phi_input(Node*) (1 samples, 0.04%)</title><rect x="1186.4" y="947.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.4" y="958.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.04%)</title><rect x="1186.9" y="995.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.9" y="1006.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.04%)</title><rect x="1186.9" y="979.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.9" y="990.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.04%)</title><rect x="1186.9" y="963.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.9" y="974.0"></text>
</g>
<g>
<title>PhiNode::hash() const (1 samples, 0.04%)</title><rect x="1186.9" y="947.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.9" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.11%)</title><rect x="1187.3" y="1011.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.3" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.11%)</title><rect x="1187.3" y="995.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.3" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.11%)</title><rect x="1187.3" y="979.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.3" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.11%)</title><rect x="1187.3" y="963.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.3" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.11%)</title><rect x="1187.3" y="947.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.3" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.11%)</title><rect x="1187.3" y="931.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.3" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.08%)</title><rect x="1187.3" y="915.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.3" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.08%)</title><rect x="1187.3" y="899.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.3" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.08%)</title><rect x="1187.3" y="883.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.3" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.08%)</title><rect x="1187.3" y="867.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.3" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.08%)</title><rect x="1187.3" y="851.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.3" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.08%)</title><rect x="1187.3" y="835.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.3" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.08%)</title><rect x="1187.3" y="819.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.3" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.08%)</title><rect x="1187.3" y="803.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.3" y="814.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.04%)</title><rect x="1187.3" y="787.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.3" y="798.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.04%)</title><rect x="1187.3" y="771.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.3" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1187.8" y="787.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.8" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1187.8" y="771.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1187.8" y="755.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.8" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1187.8" y="739.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.8" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1187.8" y="723.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.8" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1187.8" y="707.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.8" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1187.8" y="691.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.8" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1187.8" y="675.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.8" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1187.8" y="659.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.8" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1187.8" y="643.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.8" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1187.8" y="627.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.8" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1187.8" y="611.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.8" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1187.8" y="595.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.8" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1187.8" y="579.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.8" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1187.8" y="563.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.8" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1187.8" y="547.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.8" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1187.8" y="531.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.8" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1187.8" y="515.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.8" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1187.8" y="499.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.8" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1187.8" y="483.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.8" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1187.8" y="467.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.8" y="478.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1187.8" y="451.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.8" y="462.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.04%)</title><rect x="1187.8" y="435.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.8" y="446.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.04%)</title><rect x="1187.8" y="419.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.8" y="430.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.04%)</title><rect x="1187.8" y="403.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.8" y="414.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.04%)</title><rect x="1187.8" y="387.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.8" y="398.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.04%)</title><rect x="1187.8" y="371.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.8" y="382.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.04%)</title><rect x="1187.8" y="355.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.8" y="366.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.04%)</title><rect x="1187.8" y="339.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.8" y="350.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.04%)</title><rect x="1187.8" y="323.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.8" y="334.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.04%)</title><rect x="1187.8" y="307.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.8" y="318.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.04%)</title><rect x="1187.8" y="291.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.8" y="302.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.04%)</title><rect x="1187.8" y="275.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.8" y="286.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.04%)</title><rect x="1187.8" y="259.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.8" y="270.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.04%)</title><rect x="1187.8" y="243.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.8" y="254.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call_or_null(LinkInfo const&amp;) (1 samples, 0.04%)</title><rect x="1187.8" y="227.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.8" y="238.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1188.2" y="915.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.2" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1188.2" y="899.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.2" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1188.2" y="883.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.2" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1188.2" y="867.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.2" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1188.2" y="851.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.2" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1188.2" y="835.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.2" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1188.2" y="819.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.2" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1188.2" y="803.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.2" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1188.2" y="787.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.2" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1188.2" y="771.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.2" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1188.2" y="755.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.2" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1188.2" y="739.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.2" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1188.2" y="723.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.2" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1188.2" y="707.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.2" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1188.2" y="691.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.2" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1188.2" y="675.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.2" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1188.2" y="659.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.2" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1188.2" y="643.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.2" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1188.2" y="627.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.2" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1188.2" y="611.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.2" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1188.2" y="595.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.2" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1188.2" y="579.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.2" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1188.2" y="563.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.2" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1188.2" y="547.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.2" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1188.2" y="531.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.2" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1188.2" y="515.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.2" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1188.2" y="499.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.2" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1188.2" y="483.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.2" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1188.2" y="467.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.2" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1188.2" y="451.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.2" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1188.2" y="435.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.2" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1188.2" y="419.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.2" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1188.2" y="403.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.2" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1188.2" y="387.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.2" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1188.2" y="371.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.2" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1188.2" y="355.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.2" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1188.2" y="339.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.2" y="350.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1188.2" y="323.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.2" y="334.0"></text>
</g>
<g>
<title>ReplacedNodes::clone() (1 samples, 0.04%)</title><rect x="1188.2" y="307.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.2" y="318.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.04%)</title><rect x="1188.7" y="1011.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.7" y="1022.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.04%)</title><rect x="1188.7" y="995.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.7" y="1006.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.04%)</title><rect x="1189.1" y="1043.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.1" y="1054.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (1 samples, 0.04%)</title><rect x="1189.1" y="1027.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.1" y="1038.0"></text>
</g>
<g>
<title>Compilation::compile_method() (1 samples, 0.04%)</title><rect x="1189.1" y="1011.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.1" y="1022.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.04%)</title><rect x="1189.1" y="995.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.1" y="1006.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (1 samples, 0.04%)</title><rect x="1189.1" y="979.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.1" y="990.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (1 samples, 0.04%)</title><rect x="1189.1" y="963.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.1" y="974.0"></text>
</g>
<g>
<title>CounterOverflowStub::emit_code(LIR_Assembler*) (1 samples, 0.04%)</title><rect x="1189.1" y="947.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.1" y="958.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.04%)</title><rect x="1189.1" y="931.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.1" y="942.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.04%)</title><rect x="1189.1" y="915.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.1" y="926.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.04%)</title><rect x="1189.1" y="899.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.1" y="910.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.04%)</title><rect x="1189.1" y="883.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.1" y="894.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.04%)</title><rect x="1189.6" y="1107.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.6" y="1118.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.04%)</title><rect x="1189.6" y="1091.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.6" y="1102.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (1 samples, 0.04%)</title><rect x="1189.6" y="1075.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.6" y="1086.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.04%)</title><rect x="1189.6" y="1059.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.6" y="1070.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.04%)</title><rect x="1189.6" y="1043.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.6" y="1054.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.04%)</title><rect x="1189.6" y="1027.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.6" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::free_collection_set(G1CollectionSet*, EvacuationInfo&amp;, unsigned long const*) (1 samples, 0.04%)</title><rect x="1189.6" y="1011.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.6" y="1022.0"></text>
</g>
<g>
<title>TruncatedSeq::add(double) (1 samples, 0.04%)</title><rect x="1189.6" y="995.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.6" y="1006.0"></text>
</g>
</g>
</svg>
