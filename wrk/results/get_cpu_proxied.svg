<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (651 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.15%)</title><rect x="10.0" y="883.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.15%)</title><rect x="10.0" y="867.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.15%)</title><rect x="10.0" y="851.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.15%)</title><rect x="10.0" y="835.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.15%)</title><rect x="10.0" y="819.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>[not_walkable_Java] (4 samples, 0.61%)</title><rect x="11.8" y="883.0" width="7.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="14.8" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.31%)</title><rect x="11.8" y="867.0" width="3.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.8" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.31%)</title><rect x="11.8" y="851.0" width="3.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.8" y="862.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.15%)</title><rect x="11.8" y="835.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.8" y="846.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.15%)</title><rect x="11.8" y="819.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="14.8" y="830.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.15%)</title><rect x="13.6" y="835.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="16.6" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.15%)</title><rect x="15.4" y="867.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="18.4" y="878.0"></text>
</g>
<g>
<title>G1CardTable::is_in_young(oopDesc*) const (1 samples, 0.15%)</title><rect x="15.4" y="851.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="18.4" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.15%)</title><rect x="17.3" y="867.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="20.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.31%)</title><rect x="19.1" y="883.0" width="3.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="22.1" y="894.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.30.so (2 samples, 0.31%)</title><rect x="19.1" y="867.0" width="3.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="22.1" y="878.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.61%)</title><rect x="22.7" y="883.0" width="7.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="25.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.15%)</title><rect x="28.1" y="867.0" width="1.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="31.1" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.15%)</title><rect x="28.1" y="851.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="31.1" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.run (536 samples, 82.33%)</title><rect x="29.9" y="883.0" width="971.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="32.9" y="894.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (536 samples, 82.33%)</title><rect x="29.9" y="867.0" width="971.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="32.9" y="878.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (536 samples, 82.33%)</title><rect x="29.9" y="851.0" width="971.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="32.9" y="862.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (159 samples, 24.42%)</title><rect x="29.9" y="835.0" width="288.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="32.9" y="846.0">java/util/concurrent/ThreadPoolExecutor..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (159 samples, 24.42%)</title><rect x="29.9" y="819.0" width="288.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="32.9" y="830.0">java/util/concurrent/SynchronousQueue.t..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (159 samples, 24.42%)</title><rect x="29.9" y="803.0" width="288.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="32.9" y="814.0">java/util/concurrent/SynchronousQueue$T..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (4 samples, 0.61%)</title><rect x="29.9" y="787.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.46%)</title><rect x="31.8" y="771.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (155 samples, 23.81%)</title><rect x="37.2" y="787.0" width="280.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="40.2" y="798.0">java/util/concurrent/SynchronousQueue$..</text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.15%)</title><rect x="37.2" y="771.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="40.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (154 samples, 23.66%)</title><rect x="39.0" y="771.0" width="279.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.0" y="782.0">java/util/concurrent/locks/LockSuppor..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (25 samples, 3.84%)</title><rect x="272.8" y="755.0" width="45.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="275.8" y="766.0">jdk/..</text>
</g>
<g>
<title>Unsafe_Park (10 samples, 1.54%)</title><rect x="272.8" y="739.0" width="18.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="275.8" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.46%)</title><rect x="274.6" y="723.0" width="5.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="277.6" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.15%)</title><rect x="278.3" y="707.0" width="1.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="281.3" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (4 samples, 0.61%)</title><rect x="280.1" y="723.0" width="7.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="283.1" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.15%)</title><rect x="285.5" y="707.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="288.5" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.15%)</title><rect x="285.5" y="691.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="288.5" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.15%)</title><rect x="285.5" y="675.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="288.5" y="686.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.15%)</title><rect x="285.5" y="659.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="288.5" y="670.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.15%)</title><rect x="285.5" y="643.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="288.5" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.15%)</title><rect x="287.3" y="723.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="290.3" y="734.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.15%)</title><rect x="289.1" y="723.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="292.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 2.30%)</title><rect x="291.0" y="739.0" width="27.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="294.0" y="750.0">[..</text>
</g>
<g>
<title>__pthread_cond_wait (12 samples, 1.84%)</title><rect x="291.0" y="723.0" width="21.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="294.0" y="734.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 1.08%)</title><rect x="300.0" y="707.0" width="12.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="303.0" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 1.08%)</title><rect x="300.0" y="691.0" width="12.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="303.0" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.92%)</title><rect x="301.8" y="675.0" width="10.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="304.8" y="686.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.92%)</title><rect x="301.8" y="659.0" width="10.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="304.8" y="670.0"></text>
</g>
<g>
<title>futex_wait (6 samples, 0.92%)</title><rect x="301.8" y="643.0" width="10.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="304.8" y="654.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.31%)</title><rect x="305.5" y="627.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="308.5" y="638.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.15%)</title><rect x="307.3" y="611.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="310.3" y="622.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.15%)</title><rect x="309.1" y="627.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="312.1" y="638.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.15%)</title><rect x="310.9" y="627.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="313.9" y="638.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.15%)</title><rect x="312.7" y="723.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="315.7" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.15%)</title><rect x="314.5" y="723.0" width="1.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="317.5" y="734.0"></text>
</g>
<g>
<title>_pthread_cleanup_pop (1 samples, 0.15%)</title><rect x="316.3" y="723.0" width="1.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="319.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$137/536900398.run (377 samples, 57.91%)</title><rect x="318.1" y="835.0" width="683.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="321.1" y="846.0">ru/mail/polis/service/vaddya/HttpService$$Lambda$137/536900398.run</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.lambda$scheduleGetEntity$1 (377 samples, 57.91%)</title><rect x="318.1" y="819.0" width="683.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="321.1" y="830.0">ru/mail/polis/service/vaddya/HttpService.lambda$scheduleGetEntity$1</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.getEntityLocal (320 samples, 49.16%)</title><rect x="318.1" y="803.0" width="580.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.1" y="814.0">ru/mail/polis/service/vaddya/HttpService.getEntityLocal</text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.15%)</title><rect x="318.1" y="787.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="321.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/DAOImpl.getEntry (317 samples, 48.69%)</title><rect x="320.0" y="787.0" width="574.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="323.0" y="798.0">ru/mail/polis/dao/vaddya/DAOImpl.getEntry</text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (3 samples, 0.46%)</title><rect x="320.0" y="771.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="323.0" y="782.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.31%)</title><rect x="321.8" y="755.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="324.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (56 samples, 8.60%)</title><rect x="325.4" y="771.0" width="101.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="328.4" y="782.0">ru/mail/poli..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (52 samples, 7.99%)</title><rect x="327.2" y="755.0" width="94.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="330.2" y="766.0">com/google/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.15%)</title><rect x="327.2" y="739.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="330.2" y="750.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.15%)</title><rect x="329.0" y="739.0" width="1.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="332.0" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (26 samples, 3.99%)</title><rect x="330.8" y="739.0" width="47.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="333.8" y="750.0">java..</text>
</g>
<g>
<title>java/util/PriorityQueue.poll (26 samples, 3.99%)</title><rect x="330.8" y="723.0" width="47.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="333.8" y="734.0">java..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (26 samples, 3.99%)</title><rect x="330.8" y="707.0" width="47.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="333.8" y="718.0">java..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (23 samples, 3.53%)</title><rect x="336.3" y="691.0" width="41.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="339.3" y="702.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (21 samples, 3.23%)</title><rect x="339.9" y="675.0" width="38.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="342.9" y="686.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2 samples, 0.31%)</title><rect x="339.9" y="659.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="342.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.next (2 samples, 0.31%)</title><rect x="339.9" y="643.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="342.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.next (2 samples, 0.31%)</title><rect x="339.9" y="627.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="342.9" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$134/1520946586.compare (2 samples, 0.31%)</title><rect x="339.9" y="611.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="342.9" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$134/1520946586.compare (19 samples, 2.92%)</title><rect x="343.5" y="659.0" width="34.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="346.5" y="670.0">ja..</text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (18 samples, 2.76%)</title><rect x="345.3" y="643.0" width="32.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="348.3" y="654.0">ja..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$131/2016790851.compare (18 samples, 2.76%)</title><rect x="345.3" y="627.0" width="32.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.3" y="638.0">ja..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (18 samples, 2.76%)</title><rect x="345.3" y="611.0" width="32.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="348.3" y="622.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (18 samples, 2.76%)</title><rect x="345.3" y="595.0" width="32.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="348.3" y="606.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (18 samples, 2.76%)</title><rect x="345.3" y="579.0" width="32.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="348.3" y="590.0">ja..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (15 samples, 2.30%)</title><rect x="349.0" y="563.0" width="27.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="352.0" y="574.0">j..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.77%)</title><rect x="358.0" y="547.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="361.0" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.15%)</title><rect x="365.3" y="531.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="368.3" y="542.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.31%)</title><rect x="367.1" y="547.0" width="3.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="370.1" y="558.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.46%)</title><rect x="370.7" y="547.0" width="5.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="373.7" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.15%)</title><rect x="376.1" y="563.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="379.1" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (23 samples, 3.53%)</title><rect x="378.0" y="739.0" width="41.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="381.0" y="750.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (23 samples, 3.53%)</title><rect x="378.0" y="723.0" width="41.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="381.0" y="734.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (23 samples, 3.53%)</title><rect x="378.0" y="707.0" width="41.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="381.0" y="718.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (23 samples, 3.53%)</title><rect x="378.0" y="691.0" width="41.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="381.0" y="702.0">jav..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (22 samples, 3.38%)</title><rect x="379.8" y="675.0" width="39.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.8" y="686.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (22 samples, 3.38%)</title><rect x="379.8" y="659.0" width="39.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="382.8" y="670.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (17 samples, 2.61%)</title><rect x="379.8" y="643.0" width="30.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.8" y="654.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.next (17 samples, 2.61%)</title><rect x="379.8" y="627.0" width="30.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.8" y="638.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.next (17 samples, 2.61%)</title><rect x="379.8" y="611.0" width="30.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="382.8" y="622.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable.entryAt (16 samples, 2.46%)</title><rect x="381.6" y="595.0" width="29.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.6" y="606.0">ru..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14 samples, 2.15%)</title><rect x="381.6" y="579.0" width="25.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="384.6" y="590.0">j..</text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.15%)</title><rect x="385.2" y="563.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="388.2" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (11 samples, 1.69%)</title><rect x="387.0" y="563.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="390.0" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (11 samples, 1.69%)</title><rect x="387.0" y="547.0" width="20.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="390.0" y="558.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (11 samples, 1.69%)</title><rect x="387.0" y="531.0" width="20.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="390.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 1.69%)</title><rect x="387.0" y="515.0" width="20.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 1.69%)</title><rect x="387.0" y="499.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="390.0" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (11 samples, 1.69%)</title><rect x="387.0" y="483.0" width="20.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="390.0" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 1.54%)</title><rect x="387.0" y="467.0" width="18.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="390.0" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 1.54%)</title><rect x="387.0" y="451.0" width="18.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="390.0" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (10 samples, 1.54%)</title><rect x="387.0" y="435.0" width="18.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="390.0" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.15%)</title><rect x="403.3" y="419.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="406.3" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.15%)</title><rect x="405.1" y="467.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="408.1" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.15%)</title><rect x="405.1" y="451.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="408.1" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.15%)</title><rect x="405.1" y="435.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="408.1" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (2 samples, 0.31%)</title><rect x="407.0" y="579.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="410.0" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (2 samples, 0.31%)</title><rect x="407.0" y="563.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="410.0" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (2 samples, 0.31%)</title><rect x="407.0" y="547.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="410.0" y="558.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (2 samples, 0.31%)</title><rect x="407.0" y="531.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="410.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.31%)</title><rect x="407.0" y="515.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="410.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.31%)</title><rect x="407.0" y="499.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="410.0" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.31%)</title><rect x="407.0" y="483.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="410.0" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.15%)</title><rect x="407.0" y="467.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="410.0" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.15%)</title><rect x="407.0" y="451.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="410.0" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.15%)</title><rect x="407.0" y="435.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="410.0" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.15%)</title><rect x="408.8" y="467.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="411.8" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.15%)</title><rect x="408.8" y="451.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="411.8" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.15%)</title><rect x="408.8" y="435.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="411.8" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.15%)</title><rect x="408.8" y="419.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="411.8" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$134/1520946586.compare (5 samples, 0.77%)</title><rect x="410.6" y="643.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="413.6" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5 samples, 0.77%)</title><rect x="410.6" y="627.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="413.6" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$131/2016790851.compare (5 samples, 0.77%)</title><rect x="410.6" y="611.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="413.6" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (5 samples, 0.77%)</title><rect x="410.6" y="595.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="413.6" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.77%)</title><rect x="410.6" y="579.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.6" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.77%)</title><rect x="410.6" y="563.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="413.6" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.77%)</title><rect x="410.6" y="547.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="413.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.hasNext (1 samples, 0.15%)</title><rect x="419.6" y="739.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="422.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (2 samples, 0.31%)</title><rect x="421.5" y="755.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.5" y="766.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.31%)</title><rect x="421.5" y="739.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="424.5" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.15%)</title><rect x="421.5" y="723.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="424.5" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.15%)</title><rect x="421.5" y="707.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="424.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (1 samples, 0.15%)</title><rect x="423.3" y="723.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="426.3" y="734.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.15%)</title><rect x="425.1" y="755.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="428.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/DAOImpl.entryIterator (258 samples, 39.63%)</title><rect x="426.9" y="771.0" width="467.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="429.9" y="782.0">ru/mail/polis/dao/vaddya/DAOImpl.entryIterator</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.31%)</title><rect x="430.5" y="755.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="433.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.31%)</title><rect x="430.5" y="739.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="433.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.31%)</title><rect x="430.5" y="723.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="433.5" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.15%)</title><rect x="430.5" y="707.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="433.5" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.15%)</title><rect x="430.5" y="691.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="433.5" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.15%)</title><rect x="430.5" y="675.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.5" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.15%)</title><rect x="430.5" y="659.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="433.5" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.15%)</title><rect x="430.5" y="643.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.5" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.15%)</title><rect x="432.3" y="707.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="435.3" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.15%)</title><rect x="432.3" y="691.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="435.3" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.15%)</title><rect x="432.3" y="675.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="435.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/IteratorUtils.collapseIterators (35 samples, 5.38%)</title><rect x="434.1" y="755.0" width="63.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="437.1" y="766.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (32 samples, 4.92%)</title><rect x="434.1" y="739.0" width="58.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="437.1" y="750.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (32 samples, 4.92%)</title><rect x="434.1" y="723.0" width="58.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="437.1" y="734.0">com/go..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (31 samples, 4.76%)</title><rect x="434.1" y="707.0" width="56.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="437.1" y="718.0">java/u..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (31 samples, 4.76%)</title><rect x="434.1" y="691.0" width="56.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="437.1" y="702.0">java/u..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (2 samples, 0.31%)</title><rect x="434.1" y="675.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="437.1" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.31%)</title><rect x="434.1" y="659.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="437.1" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (29 samples, 4.45%)</title><rect x="437.8" y="675.0" width="52.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="440.8" y="686.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (29 samples, 4.45%)</title><rect x="437.8" y="659.0" width="52.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="440.8" y="670.0">java/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (24 samples, 3.69%)</title><rect x="446.8" y="643.0" width="43.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="449.8" y="654.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (24 samples, 3.69%)</title><rect x="446.8" y="627.0" width="43.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="449.8" y="638.0">com/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (14 samples, 2.15%)</title><rect x="446.8" y="611.0" width="25.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="449.8" y="622.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.46%)</title><rect x="446.8" y="595.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="449.8" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.31%)</title><rect x="446.8" y="579.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="449.8" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.15%)</title><rect x="446.8" y="563.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="449.8" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.15%)</title><rect x="446.8" y="547.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="449.8" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.15%)</title><rect x="446.8" y="531.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="449.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.hasNext (1 samples, 0.15%)</title><rect x="448.6" y="563.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="451.6" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.15%)</title><rect x="450.5" y="579.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="453.5" y="590.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.15%)</title><rect x="450.5" y="563.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="453.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.next (11 samples, 1.69%)</title><rect x="452.3" y="595.0" width="19.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="455.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.next (11 samples, 1.69%)</title><rect x="452.3" y="579.0" width="19.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="455.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable.entryAt (8 samples, 1.23%)</title><rect x="457.7" y="563.0" width="14.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.7" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6 samples, 0.92%)</title><rect x="457.7" y="547.0" width="10.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="460.7" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.92%)</title><rect x="457.7" y="531.0" width="10.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="460.7" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.92%)</title><rect x="457.7" y="515.0" width="10.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="460.7" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.92%)</title><rect x="457.7" y="499.0" width="10.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="460.7" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.92%)</title><rect x="457.7" y="483.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="460.7" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.92%)</title><rect x="457.7" y="467.0" width="10.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="460.7" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.92%)</title><rect x="457.7" y="451.0" width="10.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="460.7" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.92%)</title><rect x="457.7" y="435.0" width="10.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="460.7" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.92%)</title><rect x="457.7" y="419.0" width="10.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.7" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.92%)</title><rect x="457.7" y="403.0" width="10.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="460.7" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (2 samples, 0.31%)</title><rect x="468.6" y="547.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="471.6" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (2 samples, 0.31%)</title><rect x="468.6" y="531.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="471.6" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (2 samples, 0.31%)</title><rect x="468.6" y="515.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="471.6" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (2 samples, 0.31%)</title><rect x="468.6" y="499.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="471.6" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.31%)</title><rect x="468.6" y="483.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="471.6" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.31%)</title><rect x="468.6" y="467.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="471.6" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.31%)</title><rect x="468.6" y="451.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="471.6" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.31%)</title><rect x="468.6" y="435.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="471.6" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.31%)</title><rect x="468.6" y="419.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="471.6" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.31%)</title><rect x="468.6" y="403.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="471.6" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$134/1520946586.compare (10 samples, 1.54%)</title><rect x="472.2" y="611.0" width="18.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="475.2" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (9 samples, 1.38%)</title><rect x="474.0" y="595.0" width="16.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="477.0" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$131/2016790851.compare (9 samples, 1.38%)</title><rect x="474.0" y="579.0" width="16.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="477.0" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (9 samples, 1.38%)</title><rect x="474.0" y="563.0" width="16.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.0" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 1.38%)</title><rect x="474.0" y="547.0" width="16.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="477.0" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 1.38%)</title><rect x="474.0" y="531.0" width="16.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="477.0" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.92%)</title><rect x="474.0" y="515.0" width="10.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.0" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.31%)</title><rect x="477.6" y="499.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="480.6" y="510.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.31%)</title><rect x="481.3" y="499.0" width="3.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="484.3" y="510.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.46%)</title><rect x="484.9" y="515.0" width="5.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="487.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.hasNext (1 samples, 0.15%)</title><rect x="490.3" y="707.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="493.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.46%)</title><rect x="492.2" y="739.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="495.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.46%)</title><rect x="492.2" y="723.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="495.2" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.46%)</title><rect x="492.2" y="707.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="495.2" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.46%)</title><rect x="492.2" y="691.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="495.2" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.46%)</title><rect x="492.2" y="675.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="495.2" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.46%)</title><rect x="492.2" y="659.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="495.2" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.46%)</title><rect x="492.2" y="643.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="495.2" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.46%)</title><rect x="492.2" y="627.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="495.2" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$134/1520946586.compare (3 samples, 0.46%)</title><rect x="492.2" y="611.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="495.2" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3 samples, 0.46%)</title><rect x="492.2" y="595.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="495.2" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$131/2016790851.compare (3 samples, 0.46%)</title><rect x="492.2" y="579.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="495.2" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3 samples, 0.46%)</title><rect x="492.2" y="563.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="495.2" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.46%)</title><rect x="492.2" y="547.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="495.2" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.46%)</title><rect x="492.2" y="531.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="495.2" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.31%)</title><rect x="492.2" y="515.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="495.2" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.15%)</title><rect x="494.0" y="499.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="497.0" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.15%)</title><rect x="494.0" y="483.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="497.0" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.15%)</title><rect x="495.8" y="515.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/IteratorUtils.collectIterators (219 samples, 33.64%)</title><rect x="497.6" y="755.0" width="396.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="500.6" y="766.0">ru/mail/polis/dao/vaddya/IteratorUtils.collectIterators</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (200 samples, 30.72%)</title><rect x="497.6" y="739.0" width="362.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="500.6" y="750.0">java/util/stream/ReferencePipeline.collect</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (200 samples, 30.72%)</title><rect x="497.6" y="723.0" width="362.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="500.6" y="734.0">java/util/stream/AbstractPipeline.evaluate</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (200 samples, 30.72%)</title><rect x="497.6" y="707.0" width="362.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="500.6" y="718.0">java/util/stream/ReduceOps$ReduceOp.evaluateSeque..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (200 samples, 30.72%)</title><rect x="497.6" y="691.0" width="362.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="500.6" y="702.0">java/util/stream/AbstractPipeline.wrapAndCopyInto</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (200 samples, 30.72%)</title><rect x="497.6" y="675.0" width="362.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="500.6" y="686.0">java/util/stream/AbstractPipeline.copyInto</text>
</g>
<g>
<title>java/util/HashMap$ValueSpliterator.forEachRemaining (200 samples, 30.72%)</title><rect x="497.6" y="659.0" width="362.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="500.6" y="670.0">java/util/HashMap$ValueSpliterator.forEachRemaining</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (199 samples, 30.57%)</title><rect x="499.4" y="643.0" width="360.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="502.4" y="654.0">java/util/stream/ReferencePipeline$3$1.accept</text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (4 samples, 0.61%)</title><rect x="499.4" y="627.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="502.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$27/1043208434.accept (4 samples, 0.61%)</title><rect x="499.4" y="611.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="502.4" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.61%)</title><rect x="499.4" y="595.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="502.4" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.61%)</title><rect x="499.4" y="579.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="502.4" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.61%)</title><rect x="499.4" y="563.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="502.4" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.61%)</title><rect x="499.4" y="547.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="502.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.61%)</title><rect x="499.4" y="531.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="502.4" y="542.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.15%)</title><rect x="504.8" y="515.0" width="1.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="507.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/IteratorUtils$$Lambda$139/2022243674.apply (195 samples, 29.95%)</title><rect x="506.7" y="627.0" width="353.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="509.7" y="638.0">ru/mail/polis/dao/vaddya/IteratorUtils$$Lambda$1..</text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/IteratorUtils.lambda$collectIterators$0 (195 samples, 29.95%)</title><rect x="506.7" y="611.0" width="353.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.7" y="622.0">ru/mail/polis/dao/vaddya/IteratorUtils.lambda$co..</text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable.iterator (195 samples, 29.95%)</title><rect x="506.7" y="595.0" width="353.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="509.7" y="606.0">ru/mail/polis/dao/vaddya/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.&lt;init&gt; (195 samples, 29.95%)</title><rect x="506.7" y="579.0" width="353.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="509.7" y="590.0">ru/mail/polis/dao/vaddya/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable.position (192 samples, 29.49%)</title><rect x="512.1" y="563.0" width="348.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="515.1" y="574.0">ru/mail/polis/dao/vaddya/SSTable.position</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (81 samples, 12.44%)</title><rect x="526.6" y="547.0" width="146.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.6" y="558.0">java/nio/ByteBuffe..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (50 samples, 7.68%)</title><rect x="568.3" y="531.0" width="90.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="571.3" y="542.0">java/nio/B..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (11 samples, 1.69%)</title><rect x="626.3" y="515.0" width="19.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="629.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (3 samples, 0.46%)</title><rect x="646.2" y="515.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="649.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable.keyAt (4 samples, 0.61%)</title><rect x="651.7" y="515.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="654.7" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (8 samples, 1.23%)</title><rect x="658.9" y="531.0" width="14.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="661.9" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.15%)</title><rect x="673.4" y="547.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable.keyAt (102 samples, 15.67%)</title><rect x="675.2" y="547.0" width="184.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="678.2" y="558.0">ru/mail/polis/dao/vaddya..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (79 samples, 12.14%)</title><rect x="675.2" y="531.0" width="143.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="678.2" y="542.0">java/nio/DirectByt..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (76 samples, 11.67%)</title><rect x="680.7" y="515.0" width="137.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="683.7" y="526.0">java/nio/DirectBy..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (76 samples, 11.67%)</title><rect x="680.7" y="499.0" width="137.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.7" y="510.0">java/nio/DirectBy..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (76 samples, 11.67%)</title><rect x="680.7" y="483.0" width="137.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="683.7" y="494.0">java/nio/MappedBy..</text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (76 samples, 11.67%)</title><rect x="680.7" y="467.0" width="137.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="683.7" y="478.0">java/nio/ByteBuff..</text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (76 samples, 11.67%)</title><rect x="680.7" y="451.0" width="137.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="683.7" y="462.0">java/nio/ByteBuff..</text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (76 samples, 11.67%)</title><rect x="680.7" y="435.0" width="137.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.7" y="446.0">java/nio/Buffer.&lt;..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (74 samples, 11.37%)</title><rect x="680.7" y="419.0" width="134.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="683.7" y="430.0">java/nio/MappedBy..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (74 samples, 11.37%)</title><rect x="680.7" y="403.0" width="134.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="683.7" y="414.0">java/nio/MappedBy..</text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (74 samples, 11.37%)</title><rect x="680.7" y="387.0" width="134.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="683.7" y="398.0">java/nio/ByteBuff..</text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.15%)</title><rect x="813.0" y="371.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="816.0" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.31%)</title><rect x="814.8" y="419.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="817.8" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.31%)</title><rect x="814.8" y="403.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="817.8" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.31%)</title><rect x="814.8" y="387.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="817.8" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.31%)</title><rect x="814.8" y="371.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="817.8" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (23 samples, 3.53%)</title><rect x="818.4" y="531.0" width="41.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="821.4" y="542.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (23 samples, 3.53%)</title><rect x="818.4" y="515.0" width="41.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="821.4" y="526.0">jav..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (23 samples, 3.53%)</title><rect x="818.4" y="499.0" width="41.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="821.4" y="510.0">jav..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (23 samples, 3.53%)</title><rect x="818.4" y="483.0" width="41.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="821.4" y="494.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (23 samples, 3.53%)</title><rect x="818.4" y="467.0" width="41.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="821.4" y="478.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (23 samples, 3.53%)</title><rect x="818.4" y="451.0" width="41.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="821.4" y="462.0">jav..</text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (23 samples, 3.53%)</title><rect x="818.4" y="435.0" width="41.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="821.4" y="446.0">jav..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (19 samples, 2.92%)</title><rect x="818.4" y="419.0" width="34.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="821.4" y="430.0">ja..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (19 samples, 2.92%)</title><rect x="818.4" y="403.0" width="34.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.4" y="414.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (19 samples, 2.92%)</title><rect x="818.4" y="387.0" width="34.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="821.4" y="398.0">ja..</text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.61%)</title><rect x="843.8" y="371.0" width="7.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="846.8" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.15%)</title><rect x="851.0" y="371.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="854.0" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.61%)</title><rect x="852.9" y="419.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="855.9" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.61%)</title><rect x="852.9" y="403.0" width="7.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.9" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.61%)</title><rect x="852.9" y="387.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.9" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.31%)</title><rect x="856.5" y="371.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="859.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/MemTablePool.iterator (19 samples, 2.92%)</title><rect x="860.1" y="739.0" width="34.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="863.1" y="750.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/IteratorUtils.collapseIterators (3 samples, 0.46%)</title><rect x="860.1" y="723.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="863.1" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2 samples, 0.31%)</title><rect x="860.1" y="707.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="863.1" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.15%)</title><rect x="861.9" y="691.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="864.9" y="702.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.15%)</title><rect x="861.9" y="675.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="864.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.15%)</title><rect x="863.7" y="707.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="866.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1 samples, 0.15%)</title><rect x="863.7" y="691.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="866.7" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.15%)</title><rect x="863.7" y="675.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="866.7" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.15%)</title><rect x="863.7" y="659.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="866.7" y="670.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.15%)</title><rect x="863.7" y="643.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="866.7" y="654.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.15%)</title><rect x="863.7" y="627.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="866.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/IteratorUtils.collectIterators (16 samples, 2.46%)</title><rect x="865.5" y="723.0" width="29.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="868.5" y="734.0">ru..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (2 samples, 0.31%)</title><rect x="865.5" y="707.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="868.5" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.15%)</title><rect x="867.4" y="691.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="870.4" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.15%)</title><rect x="867.4" y="675.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="870.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.15%)</title><rect x="867.4" y="659.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="870.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.15%)</title><rect x="867.4" y="643.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="870.4" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$ValueSpliterator.forEachRemaining (1 samples, 0.15%)</title><rect x="867.4" y="627.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="870.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (1 samples, 0.15%)</title><rect x="869.2" y="707.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="872.2" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.&lt;init&gt; (1 samples, 0.15%)</title><rect x="869.2" y="691.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="872.2" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (1 samples, 0.15%)</title><rect x="869.2" y="675.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="872.2" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.15%)</title><rect x="869.2" y="659.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="872.2" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.15%)</title><rect x="869.2" y="643.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="872.2" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.combineOpFlags (1 samples, 0.15%)</title><rect x="869.2" y="627.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="872.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/MemTable.iterator (12 samples, 1.84%)</title><rect x="871.0" y="707.0" width="21.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="874.0" y="718.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (10 samples, 1.54%)</title><rect x="871.0" y="691.0" width="18.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="874.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (10 samples, 1.54%)</title><rect x="871.0" y="675.0" width="18.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="874.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (10 samples, 1.54%)</title><rect x="871.0" y="659.0" width="18.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="874.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (10 samples, 1.54%)</title><rect x="871.0" y="643.0" width="18.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="874.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (10 samples, 1.54%)</title><rect x="871.0" y="627.0" width="18.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="874.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.15%)</title><rect x="871.0" y="611.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="874.0" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.15%)</title><rect x="871.0" y="595.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="874.0" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.15%)</title><rect x="871.0" y="579.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="874.0" y="590.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.15%)</title><rect x="871.0" y="563.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="874.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (9 samples, 1.38%)</title><rect x="872.8" y="611.0" width="16.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="875.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (8 samples, 1.23%)</title><rect x="874.6" y="595.0" width="14.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="877.6" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 1.23%)</title><rect x="874.6" y="579.0" width="14.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="877.6" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 1.23%)</title><rect x="874.6" y="563.0" width="14.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="877.6" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 1.08%)</title><rect x="876.4" y="547.0" width="12.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="879.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.31%)</title><rect x="889.1" y="691.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="892.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.31%)</title><rect x="889.1" y="675.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="892.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.31%)</title><rect x="889.1" y="659.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="892.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (2 samples, 0.31%)</title><rect x="889.1" y="643.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="892.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/MemTablePool.iterator (1 samples, 0.15%)</title><rect x="892.7" y="707.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="895.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/Value.fromEntry (2 samples, 0.31%)</title><rect x="894.5" y="787.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="897.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ByteBufferUtils.unwrapBytes (2 samples, 0.31%)</title><rect x="894.5" y="771.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="897.5" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1 samples, 0.15%)</title><rect x="896.4" y="755.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.4" y="766.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (1 samples, 0.15%)</title><rect x="896.4" y="739.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="899.4" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (1 samples, 0.15%)</title><rect x="896.4" y="723.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="899.4" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (1 samples, 0.15%)</title><rect x="896.4" y="707.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="899.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.15%)</title><rect x="896.4" y="691.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="899.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.15%)</title><rect x="896.4" y="675.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.4" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.15%)</title><rect x="896.4" y="659.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="899.4" y="670.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.15%)</title><rect x="896.4" y="643.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="899.4" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.15%)</title><rect x="896.4" y="627.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="899.4" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.15%)</title><rect x="896.4" y="611.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="899.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ServiceSession.send (57 samples, 8.76%)</title><rect x="898.2" y="803.0" width="103.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="901.2" y="814.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ResponseUtils.valueToResponse (2 samples, 0.31%)</title><rect x="898.2" y="787.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="901.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (2 samples, 0.31%)</title><rect x="898.2" y="771.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="901.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ServiceSession.send (1 samples, 0.15%)</title><rect x="900.0" y="755.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="903.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ServiceSession.send (55 samples, 8.45%)</title><rect x="901.8" y="787.0" width="99.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="904.8" y="798.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (55 samples, 8.45%)</title><rect x="901.8" y="771.0" width="99.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="904.8" y="782.0">one/nio/http..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.15%)</title><rect x="903.6" y="755.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="906.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.15%)</title><rect x="903.6" y="739.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="906.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.15%)</title><rect x="903.6" y="723.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="906.6" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.15%)</title><rect x="903.6" y="707.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="906.6" y="718.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.15%)</title><rect x="903.6" y="691.0" width="1.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="906.6" y="702.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.15%)</title><rect x="903.6" y="675.0" width="1.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="906.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (53 samples, 8.14%)</title><rect x="905.4" y="755.0" width="96.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="908.4" y="766.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.15%)</title><rect x="905.4" y="739.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (52 samples, 7.99%)</title><rect x="907.2" y="739.0" width="94.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="910.2" y="750.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/Session.write (52 samples, 7.99%)</title><rect x="907.2" y="723.0" width="94.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="910.2" y="734.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.15%)</title><rect x="907.2" y="707.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="910.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (51 samples, 7.83%)</title><rect x="909.0" y="707.0" width="92.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="912.0" y="718.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (51 samples, 7.83%)</title><rect x="909.0" y="691.0" width="92.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="912.0" y="702.0">one/nio/net..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.46%)</title><rect x="909.0" y="675.0" width="5.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="912.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.46%)</title><rect x="909.0" y="659.0" width="5.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="912.0" y="670.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.31%)</title><rect x="909.0" y="643.0" width="3.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="912.0" y="654.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.15%)</title><rect x="909.0" y="627.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="912.0" y="638.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.15%)</title><rect x="910.9" y="627.0" width="1.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="913.9" y="638.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.15%)</title><rect x="910.9" y="611.0" width="1.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="913.9" y="622.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.15%)</title><rect x="910.9" y="595.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="913.9" y="606.0"></text>
</g>
<g>
<title>_init (1 samples, 0.15%)</title><rect x="912.7" y="643.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="915.7" y="654.0"></text>
</g>
<g>
<title>__send (48 samples, 7.37%)</title><rect x="914.5" y="675.0" width="87.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="917.5" y="686.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 7.37%)</title><rect x="914.5" y="659.0" width="87.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="917.5" y="670.0">entry_SYSC..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.15%)</title><rect x="914.5" y="643.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="917.5" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (47 samples, 7.22%)</title><rect x="916.3" y="643.0" width="85.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="919.3" y="654.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_sendto (47 samples, 7.22%)</title><rect x="916.3" y="627.0" width="85.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="919.3" y="638.0">__x64_sys_..</text>
</g>
<g>
<title>__sys_sendto (47 samples, 7.22%)</title><rect x="916.3" y="611.0" width="85.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="919.3" y="622.0">__sys_sendto</text>
</g>
<g>
<title>import_single_range (1 samples, 0.15%)</title><rect x="916.3" y="595.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="919.3" y="606.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.15%)</title><rect x="916.3" y="579.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="919.3" y="590.0"></text>
</g>
<g>
<title>sock_sendmsg (46 samples, 7.07%)</title><rect x="918.1" y="595.0" width="83.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="921.1" y="606.0">sock_send..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.15%)</title><rect x="918.1" y="579.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="921.1" y="590.0"></text>
</g>
<g>
<title>inet6_sendmsg (44 samples, 6.76%)</title><rect x="919.9" y="579.0" width="79.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="922.9" y="590.0">inet6_sen..</text>
</g>
<g>
<title>release_sock (1 samples, 0.15%)</title><rect x="919.9" y="563.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="922.9" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg (43 samples, 6.61%)</title><rect x="921.7" y="563.0" width="78.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="924.7" y="574.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (42 samples, 6.45%)</title><rect x="921.7" y="547.0" width="76.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="924.7" y="558.0">tcp_send..</text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.15%)</title><rect x="921.7" y="531.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="924.7" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.15%)</title><rect x="921.7" y="515.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="924.7" y="526.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.15%)</title><rect x="921.7" y="499.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="924.7" y="510.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.15%)</title><rect x="923.5" y="531.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="926.5" y="542.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.15%)</title><rect x="923.5" y="515.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="926.5" y="526.0"></text>
</g>
<g>
<title>tcp_push (40 samples, 6.14%)</title><rect x="925.4" y="531.0" width="72.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="928.4" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (40 samples, 6.14%)</title><rect x="925.4" y="515.0" width="72.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="928.4" y="526.0">__tcp_pu..</text>
</g>
<g>
<title>tcp_write_xmit (40 samples, 6.14%)</title><rect x="925.4" y="499.0" width="72.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="928.4" y="510.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_transmit_skb (37 samples, 5.68%)</title><rect x="925.4" y="483.0" width="67.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="928.4" y="494.0">__tcp_t..</text>
</g>
<g>
<title>ip_queue_xmit (36 samples, 5.53%)</title><rect x="927.2" y="467.0" width="65.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="930.2" y="478.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (36 samples, 5.53%)</title><rect x="927.2" y="451.0" width="65.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="930.2" y="462.0">__ip_qu..</text>
</g>
<g>
<title>ip_local_out (36 samples, 5.53%)</title><rect x="927.2" y="435.0" width="65.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="930.2" y="446.0">ip_loca..</text>
</g>
<g>
<title>ip_output (36 samples, 5.53%)</title><rect x="927.2" y="419.0" width="65.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="930.2" y="430.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (36 samples, 5.53%)</title><rect x="927.2" y="403.0" width="65.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="930.2" y="414.0">ip_fini..</text>
</g>
<g>
<title>__ip_finish_output (36 samples, 5.53%)</title><rect x="927.2" y="387.0" width="65.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="930.2" y="398.0">__ip_fi..</text>
</g>
<g>
<title>ip_finish_output2 (36 samples, 5.53%)</title><rect x="927.2" y="371.0" width="65.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="930.2" y="382.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (32 samples, 4.92%)</title><rect x="930.8" y="355.0" width="58.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="933.8" y="366.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.0 (32 samples, 4.92%)</title><rect x="930.8" y="339.0" width="58.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="933.8" y="350.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (32 samples, 4.92%)</title><rect x="930.8" y="323.0" width="58.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="933.8" y="334.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (32 samples, 4.92%)</title><rect x="930.8" y="307.0" width="58.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="933.8" y="318.0">__soft..</text>
</g>
<g>
<title>net_rx_action (32 samples, 4.92%)</title><rect x="930.8" y="291.0" width="58.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="933.8" y="302.0">net_rx..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.15%)</title><rect x="932.6" y="275.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="935.6" y="286.0"></text>
</g>
<g>
<title>process_backlog (30 samples, 4.61%)</title><rect x="934.4" y="275.0" width="54.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="937.4" y="286.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (30 samples, 4.61%)</title><rect x="934.4" y="259.0" width="54.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="937.4" y="270.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (30 samples, 4.61%)</title><rect x="934.4" y="243.0" width="54.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="937.4" y="254.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.15%)</title><rect x="936.2" y="227.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="939.2" y="238.0"></text>
</g>
<g>
<title>ip_rcv (28 samples, 4.30%)</title><rect x="938.0" y="227.0" width="50.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="941.0" y="238.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (28 samples, 4.30%)</title><rect x="938.0" y="211.0" width="50.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="941.0" y="222.0">ip_rc..</text>
</g>
<g>
<title>ip_local_deliver (28 samples, 4.30%)</title><rect x="938.0" y="195.0" width="50.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="941.0" y="206.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (28 samples, 4.30%)</title><rect x="938.0" y="179.0" width="50.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="941.0" y="190.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (28 samples, 4.30%)</title><rect x="938.0" y="163.0" width="50.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="941.0" y="174.0">ip_pr..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.15%)</title><rect x="938.0" y="147.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="941.0" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (27 samples, 4.15%)</title><rect x="939.9" y="147.0" width="48.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="942.9" y="158.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.15%)</title><rect x="943.5" y="131.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="946.5" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (24 samples, 3.69%)</title><rect x="945.3" y="131.0" width="43.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="948.3" y="142.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.31%)</title><rect x="945.3" y="115.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="948.3" y="126.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.15%)</title><rect x="948.9" y="115.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="951.9" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.15%)</title><rect x="950.7" y="115.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="953.7" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (20 samples, 3.07%)</title><rect x="952.5" y="115.0" width="36.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="955.5" y="126.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.15%)</title><rect x="952.5" y="99.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="955.5" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.15%)</title><rect x="952.5" y="83.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="955.5" y="94.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.15%)</title><rect x="954.4" y="99.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="957.4" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (6 samples, 0.92%)</title><rect x="956.2" y="99.0" width="10.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="959.2" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (6 samples, 0.92%)</title><rect x="956.2" y="83.0" width="10.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="959.2" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.92%)</title><rect x="956.2" y="67.0" width="10.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="959.2" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.92%)</title><rect x="956.2" y="51.0" width="10.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="959.2" y="62.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.61%)</title><rect x="967.1" y="99.0" width="7.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="970.1" y="110.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.15%)</title><rect x="967.1" y="83.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="970.1" y="94.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.31%)</title><rect x="968.9" y="83.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="971.9" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.15%)</title><rect x="970.7" y="67.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="973.7" y="78.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.15%)</title><rect x="970.7" y="51.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="973.7" y="62.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.15%)</title><rect x="970.7" y="35.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="973.7" y="46.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.15%)</title><rect x="972.5" y="83.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="975.5" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (8 samples, 1.23%)</title><rect x="974.3" y="99.0" width="14.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="977.3" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (7 samples, 1.08%)</title><rect x="976.1" y="83.0" width="12.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="979.1" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (7 samples, 1.08%)</title><rect x="976.1" y="67.0" width="12.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="979.1" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 1.08%)</title><rect x="976.1" y="51.0" width="12.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="979.1" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 1.08%)</title><rect x="976.1" y="35.0" width="12.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="979.1" y="46.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.31%)</title><rect x="988.8" y="355.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="991.8" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.31%)</title><rect x="988.8" y="339.0" width="3.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="991.8" y="350.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.15%)</title><rect x="990.6" y="323.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="993.6" y="334.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.15%)</title><rect x="992.4" y="483.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="995.4" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.15%)</title><rect x="992.4" y="467.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="995.4" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.15%)</title><rect x="992.4" y="451.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="995.4" y="462.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.15%)</title><rect x="992.4" y="435.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="995.4" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.15%)</title><rect x="992.4" y="419.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="995.4" y="430.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.15%)</title><rect x="994.2" y="483.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="997.2" y="494.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.15%)</title><rect x="996.1" y="483.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="999.1" y="494.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.15%)</title><rect x="997.9" y="547.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1000.9" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.15%)</title><rect x="999.7" y="579.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1002.7" y="590.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.15%)</title><rect x="999.7" y="563.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1002.7" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.15%)</title><rect x="999.7" y="547.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1002.7" y="558.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (95 samples, 14.59%)</title><rect x="1001.5" y="883.0" width="172.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1004.5" y="894.0">one/nio/server/Selecto..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (26 samples, 3.99%)</title><rect x="1001.5" y="867.0" width="47.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1004.5" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (22 samples, 3.38%)</title><rect x="1008.7" y="851.0" width="39.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1011.7" y="862.0">one..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (1 samples, 0.15%)</title><rect x="1014.2" y="835.0" width="1.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1017.2" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.15%)</title><rect x="1016.0" y="835.0" width="1.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1019.0" y="846.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.15%)</title><rect x="1017.8" y="835.0" width="1.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1020.8" y="846.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.15%)</title><rect x="1017.8" y="819.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1020.8" y="830.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.15%)</title><rect x="1017.8" y="803.0" width="1.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1020.8" y="814.0"></text>
</g>
<g>
<title>epoll_wait (16 samples, 2.46%)</title><rect x="1019.6" y="835.0" width="29.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1022.6" y="846.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 1.38%)</title><rect x="1032.3" y="819.0" width="16.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1035.3" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 1.38%)</title><rect x="1032.3" y="803.0" width="16.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1035.3" y="814.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (9 samples, 1.38%)</title><rect x="1032.3" y="787.0" width="16.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1035.3" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (9 samples, 1.38%)</title><rect x="1032.3" y="771.0" width="16.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1035.3" y="782.0"></text>
</g>
<g>
<title>ep_poll (9 samples, 1.38%)</title><rect x="1032.3" y="755.0" width="16.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1035.3" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (5 samples, 0.77%)</title><rect x="1032.3" y="739.0" width="9.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1035.3" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.77%)</title><rect x="1032.3" y="723.0" width="9.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1035.3" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (3 samples, 0.46%)</title><rect x="1034.1" y="707.0" width="5.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1037.1" y="718.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.31%)</title><rect x="1035.9" y="691.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1038.9" y="702.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.15%)</title><rect x="1037.7" y="675.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1040.7" y="686.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.15%)</title><rect x="1039.6" y="707.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1042.6" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 0.61%)</title><rect x="1041.4" y="739.0" width="7.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1044.4" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.61%)</title><rect x="1041.4" y="723.0" width="7.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1044.4" y="734.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.61%)</title><rect x="1041.4" y="707.0" width="7.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1044.4" y="718.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.46%)</title><rect x="1043.2" y="691.0" width="5.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1046.2" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.15%)</title><rect x="1046.8" y="675.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1049.8" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (69 samples, 10.60%)</title><rect x="1048.6" y="867.0" width="125.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1051.6" y="878.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (69 samples, 10.60%)</title><rect x="1048.6" y="851.0" width="125.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1051.6" y="862.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (50 samples, 7.68%)</title><rect x="1048.6" y="835.0" width="90.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1051.6" y="846.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (37 samples, 5.68%)</title><rect x="1050.4" y="819.0" width="67.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1053.4" y="830.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (37 samples, 5.68%)</title><rect x="1050.4" y="803.0" width="67.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1053.4" y="814.0">one/nio..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (34 samples, 5.22%)</title><rect x="1050.4" y="787.0" width="61.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1053.4" y="798.0">Reques..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.61%)</title><rect x="1050.4" y="771.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1053.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.entity (30 samples, 4.61%)</title><rect x="1057.7" y="771.0" width="54.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1060.7" y="782.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.scheduleGetEntity (28 samples, 4.30%)</title><rect x="1057.7" y="755.0" width="50.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1060.7" y="766.0">ru/ma..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (28 samples, 4.30%)</title><rect x="1057.7" y="739.0" width="50.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1060.7" y="750.0">one/n..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (28 samples, 4.30%)</title><rect x="1057.7" y="723.0" width="50.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1060.7" y="734.0">java/..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (28 samples, 4.30%)</title><rect x="1057.7" y="707.0" width="50.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1060.7" y="718.0">one/n..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (28 samples, 4.30%)</title><rect x="1057.7" y="691.0" width="50.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1060.7" y="702.0">one/n..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (28 samples, 4.30%)</title><rect x="1057.7" y="675.0" width="50.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1060.7" y="686.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (27 samples, 4.15%)</title><rect x="1059.5" y="659.0" width="48.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1062.5" y="670.0">java..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (27 samples, 4.15%)</title><rect x="1059.5" y="643.0" width="48.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1062.5" y="654.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (27 samples, 4.15%)</title><rect x="1059.5" y="627.0" width="48.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1062.5" y="638.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (25 samples, 3.84%)</title><rect x="1063.1" y="611.0" width="45.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1066.1" y="622.0">jdk/..</text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 1.08%)</title><rect x="1063.1" y="595.0" width="12.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1066.1" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.15%)</title><rect x="1063.1" y="579.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1066.1" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.15%)</title><rect x="1064.9" y="579.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1067.9" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.15%)</title><rect x="1066.7" y="579.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1069.7" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.15%)</title><rect x="1068.6" y="579.0" width="1.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1071.6" y="590.0"></text>
</g>
<g>
<title>_init (1 samples, 0.15%)</title><rect x="1070.4" y="579.0" width="1.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1073.4" y="590.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.15%)</title><rect x="1072.2" y="579.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1075.2" y="590.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.15%)</title><rect x="1074.0" y="579.0" width="1.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1077.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.15%)</title><rect x="1075.8" y="595.0" width="1.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1078.8" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.30.so (1 samples, 0.15%)</title><rect x="1075.8" y="579.0" width="1.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1078.8" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (16 samples, 2.46%)</title><rect x="1077.6" y="595.0" width="29.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1080.6" y="606.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 1.84%)</title><rect x="1084.9" y="579.0" width="21.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1087.9" y="590.0">e..</text>
</g>
<g>
<title>do_syscall_64 (12 samples, 1.84%)</title><rect x="1084.9" y="563.0" width="21.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1087.9" y="574.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 1.84%)</title><rect x="1084.9" y="547.0" width="21.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1087.9" y="558.0">_..</text>
</g>
<g>
<title>do_futex (11 samples, 1.69%)</title><rect x="1086.7" y="531.0" width="19.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1089.7" y="542.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 1.69%)</title><rect x="1086.7" y="515.0" width="19.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1089.7" y="526.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.31%)</title><rect x="1090.3" y="499.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1093.3" y="510.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 1.08%)</title><rect x="1093.9" y="499.0" width="12.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1096.9" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 1.08%)</title><rect x="1093.9" y="483.0" width="12.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1096.9" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 1.08%)</title><rect x="1093.9" y="467.0" width="12.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1096.9" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.15%)</title><rect x="1106.6" y="595.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1109.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ResponseUtils.isProxied (2 samples, 0.31%)</title><rect x="1108.4" y="755.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1111.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.31%)</title><rect x="1108.4" y="739.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1111.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.15%)</title><rect x="1110.2" y="723.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1113.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.15%)</title><rect x="1110.2" y="707.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1113.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.31%)</title><rect x="1112.1" y="787.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1115.1" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.31%)</title><rect x="1112.1" y="771.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1115.1" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.31%)</title><rect x="1112.1" y="755.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1115.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.15%)</title><rect x="1115.7" y="787.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1118.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.15%)</title><rect x="1115.7" y="771.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1118.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.15%)</title><rect x="1115.7" y="755.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1118.7" y="766.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1 samples, 0.15%)</title><rect x="1115.7" y="739.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1118.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.31%)</title><rect x="1117.5" y="819.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1120.5" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.31%)</title><rect x="1117.5" y="803.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1120.5" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.31%)</title><rect x="1117.5" y="787.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1120.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.46%)</title><rect x="1121.1" y="819.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1124.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.46%)</title><rect x="1121.1" y="803.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1124.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.46%)</title><rect x="1121.1" y="787.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1124.1" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.46%)</title><rect x="1121.1" y="771.0" width="5.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1124.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 1.08%)</title><rect x="1126.6" y="819.0" width="12.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.31%)</title><rect x="1135.6" y="803.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1138.6" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (19 samples, 2.92%)</title><rect x="1139.2" y="835.0" width="34.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1142.2" y="846.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (17 samples, 2.61%)</title><rect x="1141.1" y="819.0" width="30.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1144.1" y="830.0">on..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.46%)</title><rect x="1144.7" y="803.0" width="5.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1147.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.46%)</title><rect x="1144.7" y="787.0" width="5.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1147.7" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.46%)</title><rect x="1144.7" y="771.0" width="5.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1147.7" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (1 samples, 0.15%)</title><rect x="1144.7" y="755.0" width="1.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1147.7" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.31%)</title><rect x="1146.5" y="755.0" width="3.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1149.5" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.31%)</title><rect x="1146.5" y="739.0" width="3.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1149.5" y="750.0"></text>
</g>
<g>
<title>__libc_recv (12 samples, 1.84%)</title><rect x="1150.1" y="803.0" width="21.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1153.1" y="814.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 1.54%)</title><rect x="1153.7" y="787.0" width="18.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1156.7" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 1.54%)</title><rect x="1153.7" y="771.0" width="18.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1156.7" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (10 samples, 1.54%)</title><rect x="1153.7" y="755.0" width="18.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1156.7" y="766.0"></text>
</g>
<g>
<title>__sys_recvfrom (10 samples, 1.54%)</title><rect x="1153.7" y="739.0" width="18.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1156.7" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (8 samples, 1.23%)</title><rect x="1153.7" y="723.0" width="14.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1156.7" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.15%)</title><rect x="1153.7" y="707.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1156.7" y="718.0"></text>
</g>
<g>
<title>inet6_recvmsg (6 samples, 0.92%)</title><rect x="1155.6" y="707.0" width="10.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1158.6" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (6 samples, 0.92%)</title><rect x="1155.6" y="691.0" width="10.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1158.6" y="702.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.15%)</title><rect x="1155.6" y="675.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1158.6" y="686.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.15%)</title><rect x="1155.6" y="659.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1158.6" y="670.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.15%)</title><rect x="1155.6" y="643.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1158.6" y="654.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.15%)</title><rect x="1155.6" y="627.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1158.6" y="638.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.15%)</title><rect x="1157.4" y="675.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1160.4" y="686.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.15%)</title><rect x="1157.4" y="659.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1160.4" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.46%)</title><rect x="1159.2" y="675.0" width="5.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1162.2" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.46%)</title><rect x="1159.2" y="659.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1162.2" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.46%)</title><rect x="1159.2" y="643.0" width="5.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1162.2" y="654.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.15%)</title><rect x="1159.2" y="627.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1162.2" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.31%)</title><rect x="1161.0" y="627.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1164.0" y="638.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.31%)</title><rect x="1161.0" y="611.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1164.0" y="622.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.15%)</title><rect x="1164.6" y="675.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1167.6" y="686.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.15%)</title><rect x="1164.6" y="659.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1167.6" y="670.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.15%)</title><rect x="1164.6" y="643.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1167.6" y="654.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.15%)</title><rect x="1166.4" y="707.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1169.4" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.15%)</title><rect x="1166.4" y="691.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1169.4" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.15%)</title><rect x="1166.4" y="675.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1169.4" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.31%)</title><rect x="1168.2" y="723.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1171.2" y="734.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.15%)</title><rect x="1168.2" y="707.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1171.2" y="718.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.15%)</title><rect x="1168.2" y="691.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1171.2" y="702.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.15%)</title><rect x="1168.2" y="675.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1171.2" y="686.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.15%)</title><rect x="1170.1" y="707.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1173.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.15%)</title><rect x="1171.9" y="819.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1174.9" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.listen (1 samples, 0.15%)</title><rect x="1171.9" y="803.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1174.9" y="814.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.15%)</title><rect x="1171.9" y="787.0" width="1.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1174.9" y="798.0"></text>
</g>
<g>
<title>start_thread (9 samples, 1.38%)</title><rect x="1173.7" y="883.0" width="16.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1176.7" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (9 samples, 1.38%)</title><rect x="1173.7" y="867.0" width="16.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1176.7" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (9 samples, 1.38%)</title><rect x="1173.7" y="851.0" width="16.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1176.7" y="862.0"></text>
</g>
<g>
<title>GangWorker::loop() (9 samples, 1.38%)</title><rect x="1173.7" y="835.0" width="16.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.7" y="846.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (9 samples, 1.38%)</title><rect x="1173.7" y="819.0" width="16.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1176.7" y="830.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (9 samples, 1.38%)</title><rect x="1173.7" y="803.0" width="16.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1176.7" y="814.0"></text>
</g>
<g>
<title>SpinPause (9 samples, 1.38%)</title><rect x="1173.7" y="787.0" width="16.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1176.7" y="798.0"></text>
</g>
</g>
</svg>
