<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="821"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="821"> </text>
<g id="frames">
<g>
<title>all (205,368 samples, 100.00%)</title><rect x="10.0" y="787.0" width="1180.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="13.0" y="798.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (141,992 samples, 69.14%)</title><rect x="10.0" y="771.0" width="815.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (141,962 samples, 69.13%)</title><rect x="10.2" y="755.0" width="815.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.2" y="766.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (141,962 samples, 69.13%)</title><rect x="10.2" y="739.0" width="815.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.2" y="750.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (91,272 samples, 44.44%)</title><rect x="10.2" y="723.0" width="524.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.2" y="734.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (62,293 samples, 30.33%)</title><rect x="10.2" y="707.0" width="357.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.2" y="718.0">java/util/concurrent/CompletableFuture.postComplete</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (62,281 samples, 30.33%)</title><rect x="10.2" y="691.0" width="357.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.2" y="702.0">java/util/concurrent/CompletableFuture$UniCompose..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (259 samples, 0.13%)</title><rect x="10.2" y="675.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="13.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$150/1603050069.apply (61,972 samples, 30.18%)</title><rect x="11.7" y="675.0" width="356.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="14.7" y="686.0">jdk/internal/net/http/MultiExchange$$Lambda$150/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (61,972 samples, 30.18%)</title><rect x="11.7" y="659.0" width="356.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.7" y="670.0">jdk/internal/net/http/MultiExchange.lambda$respo..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (61,972 samples, 30.18%)</title><rect x="11.7" y="643.0" width="356.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="14.7" y="654.0">jdk/internal/net/http/MultiExchange.responseAsyn..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (379 samples, 0.18%)</title><rect x="11.7" y="627.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (379 samples, 0.18%)</title><rect x="11.7" y="611.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$446/989563096.get$Lambda (235 samples, 0.11%)</title><rect x="11.7" y="595.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="14.7" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$446 (235 samples, 0.11%)</title><rect x="11.7" y="579.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="14.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$449/843290145.get$Lambda (144 samples, 0.07%)</title><rect x="13.0" y="595.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="16.0" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$449 (144 samples, 0.07%)</title><rect x="13.0" y="579.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="16.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (627 samples, 0.31%)</title><rect x="13.8" y="627.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="16.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (627 samples, 0.31%)</title><rect x="13.8" y="611.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="16.8" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (343 samples, 0.17%)</title><rect x="13.8" y="595.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="16.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (283 samples, 0.14%)</title><rect x="15.8" y="595.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (283 samples, 0.14%)</title><rect x="15.8" y="579.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (283 samples, 0.14%)</title><rect x="15.8" y="563.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="18.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,342 samples, 0.65%)</title><rect x="17.4" y="627.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,342 samples, 0.65%)</title><rect x="17.4" y="611.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.4" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (695 samples, 0.34%)</title><rect x="17.4" y="595.0" width="4.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="20.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (646 samples, 0.31%)</title><rect x="21.4" y="595.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (646 samples, 0.31%)</title><rect x="21.4" y="579.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (646 samples, 0.31%)</title><rect x="21.4" y="563.0" width="3.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="24.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (57,697 samples, 28.09%)</title><rect x="25.2" y="627.0" width="331.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.2" y="638.0">jdk/internal/net/http/Exchange.responseAsync</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (57,697 samples, 28.09%)</title><rect x="25.2" y="611.0" width="331.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="28.2" y="622.0">jdk/internal/net/http/Exchange.responseAsyncI..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (57,697 samples, 28.09%)</title><rect x="25.2" y="595.0" width="331.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.2" y="606.0">jdk/internal/net/http/Exchange.responseAsyncI..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (531 samples, 0.26%)</title><rect x="25.2" y="579.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="28.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (531 samples, 0.26%)</title><rect x="25.2" y="563.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="28.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$158/1087713702.get$Lambda (141 samples, 0.07%)</title><rect x="25.2" y="547.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$158 (141 samples, 0.07%)</title><rect x="25.2" y="531.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="28.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$163/1625023506.get$Lambda (195 samples, 0.09%)</title><rect x="26.0" y="547.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="29.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$163 (195 samples, 0.09%)</title><rect x="26.0" y="531.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="29.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$352/1505209664.get$Lambda (195 samples, 0.09%)</title><rect x="27.1" y="547.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="30.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$352 (195 samples, 0.09%)</title><rect x="27.1" y="531.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="30.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (36,673 samples, 17.86%)</title><rect x="28.2" y="579.0" width="210.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.2" y="590.0">java/util/concurrent/Complet..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (36,673 samples, 17.86%)</title><rect x="28.2" y="563.0" width="210.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="31.2" y="574.0">java/util/concurrent/Complet..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (36,365 samples, 17.71%)</title><rect x="28.2" y="547.0" width="209.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="31.2" y="558.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$352/1505209664.apply (36,365 samples, 17.71%)</title><rect x="28.2" y="531.0" width="209.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.2" y="542.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (36,365 samples, 17.71%)</title><rect x="28.2" y="515.0" width="209.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.2" y="526.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (36,365 samples, 17.71%)</title><rect x="28.2" y="499.0" width="209.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="31.2" y="510.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$163/1625023506.apply (36,365 samples, 17.71%)</title><rect x="28.2" y="483.0" width="209.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.2" y="494.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (36,365 samples, 17.71%)</title><rect x="28.2" y="467.0" width="209.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="31.2" y="478.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (349 samples, 0.17%)</title><rect x="28.2" y="451.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="31.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (349 samples, 0.17%)</title><rect x="28.2" y="435.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="31.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$443/90862708.get$Lambda (349 samples, 0.17%)</title><rect x="28.2" y="419.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$443 (349 samples, 0.17%)</title><rect x="28.2" y="403.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="31.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,022 samples, 0.50%)</title><rect x="30.2" y="451.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,022 samples, 0.50%)</title><rect x="30.2" y="435.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.2" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (359 samples, 0.17%)</title><rect x="30.2" y="419.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="33.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (162 samples, 0.08%)</title><rect x="32.3" y="419.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$443/90862708.apply (162 samples, 0.08%)</title><rect x="32.3" y="403.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="35.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (162 samples, 0.08%)</title><rect x="32.3" y="387.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="35.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (162 samples, 0.08%)</title><rect x="32.3" y="371.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="35.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$158/1087713702.apply (162 samples, 0.08%)</title><rect x="32.3" y="355.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="35.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (162 samples, 0.08%)</title><rect x="32.3" y="339.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="35.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (49 samples, 0.02%)</title><rect x="32.3" y="323.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="35.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (49 samples, 0.02%)</title><rect x="32.3" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (77 samples, 0.04%)</title><rect x="32.8" y="323.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="35.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (52 samples, 0.03%)</title><rect x="32.9" y="307.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="35.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (46 samples, 0.02%)</title><rect x="32.9" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (501 samples, 0.24%)</title><rect x="33.2" y="419.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="36.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (501 samples, 0.24%)</title><rect x="33.2" y="403.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="36.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (501 samples, 0.24%)</title><rect x="33.2" y="387.0" width="2.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="36.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (689 samples, 0.34%)</title><rect x="36.1" y="451.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (689 samples, 0.34%)</title><rect x="36.1" y="435.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.1" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (399 samples, 0.19%)</title><rect x="36.1" y="419.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="39.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (283 samples, 0.14%)</title><rect x="38.4" y="419.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (283 samples, 0.14%)</title><rect x="38.4" y="403.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (283 samples, 0.14%)</title><rect x="38.4" y="387.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="41.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (34,305 samples, 16.70%)</title><rect x="40.0" y="451.0" width="197.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.0" y="462.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (406 samples, 0.20%)</title><rect x="40.0" y="435.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="43.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (406 samples, 0.20%)</title><rect x="40.0" y="419.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="43.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$427/237799779.get$Lambda (161 samples, 0.08%)</title><rect x="40.0" y="403.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$427 (161 samples, 0.08%)</title><rect x="40.0" y="387.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="43.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$438/1122744859.get$Lambda (245 samples, 0.12%)</title><rect x="41.0" y="403.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="44.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$438 (245 samples, 0.12%)</title><rect x="41.0" y="387.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="44.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (29,167 samples, 14.20%)</title><rect x="42.4" y="435.0" width="167.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.4" y="446.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (29,167 samples, 14.20%)</title><rect x="42.4" y="419.0" width="167.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="45.4" y="430.0">java/util/concurrent/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (387 samples, 0.19%)</title><rect x="42.4" y="403.0" width="2.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="45.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$427/237799779.apply (28,001 samples, 13.63%)</title><rect x="44.6" y="403.0" width="160.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="47.6" y="414.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (28,001 samples, 13.63%)</title><rect x="44.6" y="387.0" width="160.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.6" y="398.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (139 samples, 0.07%)</title><rect x="44.6" y="371.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (139 samples, 0.07%)</title><rect x="44.6" y="355.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$469/399554666.get$Lambda (139 samples, 0.07%)</title><rect x="44.6" y="339.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$469 (139 samples, 0.07%)</title><rect x="44.6" y="323.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="47.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (649 samples, 0.32%)</title><rect x="45.4" y="371.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (649 samples, 0.32%)</title><rect x="45.4" y="355.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (339 samples, 0.17%)</title><rect x="45.4" y="339.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="48.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (310 samples, 0.15%)</title><rect x="47.3" y="339.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="50.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (310 samples, 0.15%)</title><rect x="47.3" y="323.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="50.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (310 samples, 0.15%)</title><rect x="47.3" y="307.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="50.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (294 samples, 0.14%)</title><rect x="49.1" y="371.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="52.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (666 samples, 0.32%)</title><rect x="50.8" y="371.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="53.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (228 samples, 0.11%)</title><rect x="50.8" y="355.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="53.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (438 samples, 0.21%)</title><rect x="52.1" y="355.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (261 samples, 0.13%)</title><rect x="52.1" y="339.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="55.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (261 samples, 0.13%)</title><rect x="52.1" y="323.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="55.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (261 samples, 0.13%)</title><rect x="52.1" y="307.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="55.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (261 samples, 0.13%)</title><rect x="52.1" y="291.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.1" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (261 samples, 0.13%)</title><rect x="52.1" y="275.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="55.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (177 samples, 0.09%)</title><rect x="53.6" y="339.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (177 samples, 0.09%)</title><rect x="53.6" y="323.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (177 samples, 0.09%)</title><rect x="53.6" y="307.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="56.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (177 samples, 0.09%)</title><rect x="53.6" y="291.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (176 samples, 0.09%)</title><rect x="53.6" y="275.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="56.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (176 samples, 0.09%)</title><rect x="53.6" y="259.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="56.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (53 samples, 0.03%)</title><rect x="53.6" y="243.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (123 samples, 0.06%)</title><rect x="53.9" y="243.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (123 samples, 0.06%)</title><rect x="53.9" y="227.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="56.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (123 samples, 0.06%)</title><rect x="53.9" y="211.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (123 samples, 0.06%)</title><rect x="53.9" y="195.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (123 samples, 0.06%)</title><rect x="53.9" y="179.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.9" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (123 samples, 0.06%)</title><rect x="53.9" y="163.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.9" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (90 samples, 0.04%)</title><rect x="54.1" y="147.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.1" y="158.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (90 samples, 0.04%)</title><rect x="54.1" y="131.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="57.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (692 samples, 0.34%)</title><rect x="54.6" y="371.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="57.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (692 samples, 0.34%)</title><rect x="54.6" y="355.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (227 samples, 0.11%)</title><rect x="54.6" y="339.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (227 samples, 0.11%)</title><rect x="54.6" y="323.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="57.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (227 samples, 0.11%)</title><rect x="54.6" y="307.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (227 samples, 0.11%)</title><rect x="54.6" y="291.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="57.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (465 samples, 0.23%)</title><rect x="55.9" y="339.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="58.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (465 samples, 0.23%)</title><rect x="55.9" y="323.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (336 samples, 0.16%)</title><rect x="55.9" y="307.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="58.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (129 samples, 0.06%)</title><rect x="57.9" y="307.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (129 samples, 0.06%)</title><rect x="57.9" y="291.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="60.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (25,561 samples, 12.45%)</title><rect x="58.6" y="371.0" width="146.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.6" y="382.0">jdk/internal/net/h..</text>
</g>
<g>
<title>java.lang.StringBuilder (219 samples, 0.11%)</title><rect x="58.6" y="355.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="61.6" y="366.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2,946 samples, 1.43%)</title><rect x="59.9" y="355.0" width="16.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2,946 samples, 1.43%)</title><rect x="59.9" y="339.0" width="16.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="62.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (2,946 samples, 1.43%)</title><rect x="59.9" y="323.0" width="16.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.9" y="334.0"></text>
</g>
<g>
<title>byte[] (1,940 samples, 0.94%)</title><rect x="59.9" y="307.0" width="11.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="62.9" y="318.0"></text>
</g>
<g>
<title>byte[] (1,006 samples, 0.49%)</title><rect x="71.0" y="307.0" width="5.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="74.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (677 samples, 0.33%)</title><rect x="76.8" y="355.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="79.8" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (677 samples, 0.33%)</title><rect x="76.8" y="339.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="79.8" y="350.0"></text>
</g>
<g>
<title>byte[] (658 samples, 0.32%)</title><rect x="76.8" y="323.0" width="3.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="79.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2,745 samples, 1.34%)</title><rect x="80.7" y="355.0" width="15.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.7" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,745 samples, 1.34%)</title><rect x="80.7" y="339.0" width="15.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="83.7" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,745 samples, 1.34%)</title><rect x="80.7" y="323.0" width="15.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.7" y="334.0"></text>
</g>
<g>
<title>byte[] (2,174 samples, 1.06%)</title><rect x="80.7" y="307.0" width="12.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="83.7" y="318.0"></text>
</g>
<g>
<title>byte[] (571 samples, 0.28%)</title><rect x="93.2" y="307.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="96.2" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (400 samples, 0.19%)</title><rect x="96.5" y="355.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.5" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (400 samples, 0.19%)</title><rect x="96.5" y="339.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.5" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (400 samples, 0.19%)</title><rect x="96.5" y="323.0" width="2.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="99.5" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (229 samples, 0.11%)</title><rect x="98.8" y="355.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.8" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (229 samples, 0.11%)</title><rect x="98.8" y="339.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="101.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (15,440 samples, 7.52%)</title><rect x="100.1" y="355.0" width="88.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="103.1" y="366.0">jdk/intern..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (217 samples, 0.11%)</title><rect x="100.1" y="339.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (217 samples, 0.11%)</title><rect x="100.1" y="323.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="103.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (217 samples, 0.11%)</title><rect x="100.1" y="307.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="103.1" y="318.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$479/1948513388.get$Lambda (217 samples, 0.11%)</title><rect x="100.1" y="291.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="103.1" y="302.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$479 (217 samples, 0.11%)</title><rect x="100.1" y="275.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="103.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (8,081 samples, 3.93%)</title><rect x="101.3" y="339.0" width="46.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.3" y="350.0">jdk/..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (3,939 samples, 1.92%)</title><rect x="101.3" y="323.0" width="22.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.3" y="334.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3,939 samples, 1.92%)</title><rect x="101.3" y="307.0" width="22.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="104.3" y="318.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3,939 samples, 1.92%)</title><rect x="101.3" y="291.0" width="22.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.3" y="302.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,939 samples, 1.92%)</title><rect x="101.3" y="275.0" width="22.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="104.3" y="286.0">j..</text>
</g>
<g>
<title>byte[] (3,148 samples, 1.53%)</title><rect x="101.3" y="259.0" width="18.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="104.3" y="270.0"></text>
</g>
<g>
<title>byte[] (791 samples, 0.39%)</title><rect x="119.4" y="259.0" width="4.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="122.4" y="270.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (648 samples, 0.32%)</title><rect x="124.0" y="323.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="127.0" y="334.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (648 samples, 0.32%)</title><rect x="124.0" y="307.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="127.0" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (648 samples, 0.32%)</title><rect x="124.0" y="291.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="127.0" y="302.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (648 samples, 0.32%)</title><rect x="124.0" y="275.0" width="3.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="127.0" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (626 samples, 0.30%)</title><rect x="127.7" y="323.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="130.7" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (306 samples, 0.15%)</title><rect x="127.7" y="307.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="130.7" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (320 samples, 0.16%)</title><rect x="129.4" y="307.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="132.4" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (320 samples, 0.16%)</title><rect x="129.4" y="291.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="132.4" y="302.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$479/1948513388.test (2,868 samples, 1.40%)</title><rect x="131.3" y="323.0" width="16.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="134.3" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (2,868 samples, 1.40%)</title><rect x="131.3" y="307.0" width="16.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="134.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$94/2068598972.test (2,868 samples, 1.40%)</title><rect x="131.3" y="291.0" width="16.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="134.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (2,868 samples, 1.40%)</title><rect x="131.3" y="275.0" width="16.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="134.3" y="286.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$83/477376212.test (2,868 samples, 1.40%)</title><rect x="131.3" y="259.0" width="16.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="134.3" y="270.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (2,868 samples, 1.40%)</title><rect x="131.3" y="243.0" width="16.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1072377306.test (2,868 samples, 1.40%)</title><rect x="131.3" y="227.0" width="16.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="134.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (2,868 samples, 1.40%)</title><rect x="131.3" y="211.0" width="16.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.3" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,868 samples, 1.40%)</title><rect x="131.3" y="195.0" width="16.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.3" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,868 samples, 1.40%)</title><rect x="131.3" y="179.0" width="16.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.3" y="190.0"></text>
</g>
<g>
<title>java.lang.String (1,365 samples, 0.66%)</title><rect x="131.3" y="163.0" width="7.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="134.3" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,503 samples, 0.73%)</title><rect x="139.1" y="163.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="142.1" y="174.0"></text>
</g>
<g>
<title>byte[] (1,503 samples, 0.73%)</title><rect x="139.1" y="147.0" width="8.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="142.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (7,142 samples, 3.48%)</title><rect x="147.8" y="339.0" width="41.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.8" y="350.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (7,142 samples, 3.48%)</title><rect x="147.8" y="323.0" width="41.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.8" y="334.0">jav..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (7,142 samples, 3.48%)</title><rect x="147.8" y="307.0" width="41.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="150.8" y="318.0">jav..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (135 samples, 0.07%)</title><rect x="147.8" y="291.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="150.8" y="302.0"></text>
</g>
<g>
<title>java.util.ArrayList (185 samples, 0.09%)</title><rect x="148.5" y="291.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="151.5" y="302.0"></text>
</g>
<g>
<title>java.util.TreeMap (439 samples, 0.21%)</title><rect x="149.6" y="291.0" width="2.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="152.6" y="302.0"></text>
</g>
<g>
<title>java.util.TreeSet (118 samples, 0.06%)</title><rect x="152.1" y="291.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="155.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (269 samples, 0.13%)</title><rect x="152.8" y="291.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (269 samples, 0.13%)</title><rect x="152.8" y="275.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="155.8" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.get$Lambda (269 samples, 0.13%)</title><rect x="152.8" y="259.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="155.8" y="270.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$139 (269 samples, 0.13%)</title><rect x="152.8" y="243.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="155.8" y="254.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (340 samples, 0.17%)</title><rect x="154.3" y="291.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="157.3" y="302.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (340 samples, 0.17%)</title><rect x="154.3" y="275.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="157.3" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5,212 samples, 2.54%)</title><rect x="156.3" y="291.0" width="29.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="159.3" y="302.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.accept (5,212 samples, 2.54%)</title><rect x="156.3" y="275.0" width="29.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="159.3" y="286.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5,212 samples, 2.54%)</title><rect x="156.3" y="259.0" width="29.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="159.3" y="270.0">ja..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (508 samples, 0.25%)</title><rect x="156.3" y="243.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="159.3" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.accept (508 samples, 0.25%)</title><rect x="156.3" y="227.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="159.3" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (508 samples, 0.25%)</title><rect x="156.3" y="211.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="159.3" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (508 samples, 0.25%)</title><rect x="156.3" y="195.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="159.3" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (508 samples, 0.25%)</title><rect x="156.3" y="179.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="159.3" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (508 samples, 0.25%)</title><rect x="156.3" y="163.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.3" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (508 samples, 0.25%)</title><rect x="156.3" y="147.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="159.3" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (508 samples, 0.25%)</title><rect x="156.3" y="131.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.3" y="142.0"></text>
</g>
<g>
<title>java.lang.Object[] (502 samples, 0.24%)</title><rect x="156.3" y="115.0" width="2.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="159.3" y="126.0"></text>
</g>
<g>
<title>java/util/List.copyOf (2,550 samples, 1.24%)</title><rect x="159.2" y="243.0" width="14.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.2" y="254.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (2,550 samples, 1.24%)</title><rect x="159.2" y="227.0" width="14.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="162.2" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1,244 samples, 0.61%)</title><rect x="159.2" y="211.0" width="7.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="162.2" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,244 samples, 0.61%)</title><rect x="159.2" y="195.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.2" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,244 samples, 0.61%)</title><rect x="159.2" y="179.0" width="7.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="162.2" y="190.0"></text>
</g>
<g>
<title>java/util/List.of (1,306 samples, 0.64%)</title><rect x="166.4" y="211.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="169.4" y="222.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1,306 samples, 0.64%)</title><rect x="166.4" y="195.0" width="7.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="169.4" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2,154 samples, 1.05%)</title><rect x="173.9" y="243.0" width="12.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="176.9" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2,154 samples, 1.05%)</title><rect x="173.9" y="227.0" width="12.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="176.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (444 samples, 0.22%)</title><rect x="186.2" y="291.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="189.2" y="302.0"></text>
</g>
<g>
<title>java.util.TreeMap (444 samples, 0.22%)</title><rect x="186.2" y="275.0" width="2.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="189.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (725 samples, 0.35%)</title><rect x="188.8" y="355.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="191.8" y="366.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (201 samples, 0.10%)</title><rect x="188.8" y="339.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="191.8" y="350.0"></text>
</g>
<g>
<title>byte[] (201 samples, 0.10%)</title><rect x="188.8" y="323.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="191.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (524 samples, 0.26%)</title><rect x="190.0" y="339.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="193.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (524 samples, 0.26%)</title><rect x="190.0" y="323.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="193.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1806431167.invoke (524 samples, 0.26%)</title><rect x="190.0" y="307.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="193.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (524 samples, 0.26%)</title><rect x="190.0" y="291.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="193.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (223 samples, 0.11%)</title><rect x="190.0" y="275.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="193.0" y="286.0"></text>
</g>
<g>
<title>java.lang.String (223 samples, 0.11%)</title><rect x="190.0" y="259.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="193.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (301 samples, 0.15%)</title><rect x="191.2" y="275.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="194.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (301 samples, 0.15%)</title><rect x="191.2" y="259.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="194.2" y="270.0"></text>
</g>
<g>
<title>byte[] (301 samples, 0.15%)</title><rect x="191.2" y="243.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="194.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (603 samples, 0.29%)</title><rect x="193.0" y="355.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="196.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (603 samples, 0.29%)</title><rect x="193.0" y="339.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="196.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (603 samples, 0.29%)</title><rect x="193.0" y="323.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (603 samples, 0.29%)</title><rect x="193.0" y="307.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="196.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1806431167.invoke (603 samples, 0.29%)</title><rect x="193.0" y="291.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (603 samples, 0.29%)</title><rect x="193.0" y="275.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (193 samples, 0.09%)</title><rect x="193.0" y="259.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="196.0" y="270.0"></text>
</g>
<g>
<title>java.lang.String (193 samples, 0.09%)</title><rect x="193.0" y="243.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="196.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (410 samples, 0.20%)</title><rect x="194.1" y="259.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="197.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (410 samples, 0.20%)</title><rect x="194.1" y="243.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="197.1" y="254.0"></text>
</g>
<g>
<title>byte[] (410 samples, 0.20%)</title><rect x="194.1" y="227.0" width="2.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="197.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1,577 samples, 0.77%)</title><rect x="196.4" y="355.0" width="9.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="199.4" y="366.0"></text>
</g>
<g>
<title>java.util.ArrayList (484 samples, 0.24%)</title><rect x="196.4" y="339.0" width="2.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="199.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (408 samples, 0.20%)</title><rect x="199.2" y="339.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="202.2" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (408 samples, 0.20%)</title><rect x="199.2" y="323.0" width="2.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="202.2" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (685 samples, 0.33%)</title><rect x="201.6" y="339.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="204.6" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (685 samples, 0.33%)</title><rect x="201.6" y="323.0" width="3.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="204.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (779 samples, 0.38%)</title><rect x="205.5" y="403.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (779 samples, 0.38%)</title><rect x="205.5" y="387.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="208.5" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (779 samples, 0.38%)</title><rect x="205.5" y="371.0" width="4.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="208.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (743 samples, 0.36%)</title><rect x="210.0" y="435.0" width="4.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="213.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (320 samples, 0.16%)</title><rect x="214.5" y="435.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="217.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (3,628 samples, 1.77%)</title><rect x="216.3" y="435.0" width="20.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="219.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (275 samples, 0.13%)</title><rect x="216.3" y="419.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="219.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (275 samples, 0.13%)</title><rect x="216.3" y="403.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="219.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$376/1981716426.get$Lambda (127 samples, 0.06%)</title><rect x="216.3" y="387.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="219.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$376 (127 samples, 0.06%)</title><rect x="216.3" y="371.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="219.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$381/199945677.get$Lambda (148 samples, 0.07%)</title><rect x="217.0" y="387.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="220.0" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$381 (148 samples, 0.07%)</title><rect x="217.0" y="371.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="220.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (390 samples, 0.19%)</title><rect x="217.9" y="419.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="220.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (325 samples, 0.16%)</title><rect x="220.1" y="419.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="223.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (358 samples, 0.17%)</title><rect x="222.0" y="419.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="225.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1,014 samples, 0.49%)</title><rect x="224.1" y="419.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="227.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,014 samples, 0.49%)</title><rect x="224.1" y="403.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="227.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,014 samples, 0.49%)</title><rect x="224.1" y="387.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="227.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,014 samples, 0.49%)</title><rect x="224.1" y="371.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="227.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,014 samples, 0.49%)</title><rect x="224.1" y="355.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="227.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,014 samples, 0.49%)</title><rect x="224.1" y="339.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="227.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.run (1,014 samples, 0.49%)</title><rect x="224.1" y="323.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="227.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,014 samples, 0.49%)</title><rect x="224.1" y="307.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="227.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1,014 samples, 0.49%)</title><rect x="224.1" y="291.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="227.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (386 samples, 0.19%)</title><rect x="224.1" y="275.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="227.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (386 samples, 0.19%)</title><rect x="224.1" y="259.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$386/1151365282.get$Lambda (161 samples, 0.08%)</title><rect x="224.1" y="243.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="227.1" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$386 (161 samples, 0.08%)</title><rect x="224.1" y="227.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="227.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$394/574621129.get$Lambda (225 samples, 0.11%)</title><rect x="225.0" y="243.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="228.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$394 (225 samples, 0.11%)</title><rect x="225.0" y="227.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="228.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (316 samples, 0.15%)</title><rect x="226.3" y="275.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="229.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (312 samples, 0.15%)</title><rect x="228.1" y="275.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="231.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (312 samples, 0.15%)</title><rect x="228.1" y="259.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="231.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (108 samples, 0.05%)</title><rect x="228.1" y="243.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="231.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (204 samples, 0.10%)</title><rect x="228.7" y="243.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="231.7" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (204 samples, 0.10%)</title><rect x="228.7" y="227.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="231.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (959 samples, 0.47%)</title><rect x="229.9" y="419.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="232.9" y="430.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (208 samples, 0.10%)</title><rect x="229.9" y="403.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="232.9" y="414.0"></text>
</g>
<g>
<title>java.util.HashMap (446 samples, 0.22%)</title><rect x="231.1" y="403.0" width="2.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="234.1" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (305 samples, 0.15%)</title><rect x="233.6" y="403.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="236.6" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (305 samples, 0.15%)</title><rect x="233.6" y="387.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="236.6" y="398.0"></text>
</g>
<g>
<title>byte[] (305 samples, 0.15%)</title><rect x="233.6" y="371.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="236.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (307 samples, 0.15%)</title><rect x="235.4" y="419.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="238.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (307 samples, 0.15%)</title><rect x="235.4" y="403.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="238.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (308 samples, 0.15%)</title><rect x="237.2" y="547.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="240.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (308 samples, 0.15%)</title><rect x="237.2" y="531.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (308 samples, 0.15%)</title><rect x="237.2" y="515.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="240.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (547 samples, 0.27%)</title><rect x="238.9" y="579.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="241.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (547 samples, 0.27%)</title><rect x="238.9" y="563.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="241.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (288 samples, 0.14%)</title><rect x="238.9" y="547.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="241.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (259 samples, 0.13%)</title><rect x="240.6" y="547.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="243.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (259 samples, 0.13%)</title><rect x="240.6" y="531.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (259 samples, 0.13%)</title><rect x="240.6" y="515.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="243.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (19,946 samples, 9.71%)</title><rect x="242.1" y="579.0" width="114.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="245.1" y="590.0">jdk/internal/n..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (334 samples, 0.16%)</title><rect x="242.1" y="563.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="245.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (334 samples, 0.16%)</title><rect x="242.1" y="547.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="245.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$293/1705122973.get$Lambda (213 samples, 0.10%)</title><rect x="242.1" y="531.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="245.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$293 (213 samples, 0.10%)</title><rect x="242.1" y="515.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="245.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$350/1291528467.get$Lambda (121 samples, 0.06%)</title><rect x="243.3" y="531.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="246.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$350 (121 samples, 0.06%)</title><rect x="243.3" y="515.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="246.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (589 samples, 0.29%)</title><rect x="244.0" y="563.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="247.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (589 samples, 0.29%)</title><rect x="244.0" y="547.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="247.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$350/1291528467.apply (286 samples, 0.14%)</title><rect x="244.0" y="531.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="247.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (286 samples, 0.14%)</title><rect x="244.0" y="515.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="247.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (286 samples, 0.14%)</title><rect x="244.0" y="499.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="247.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (286 samples, 0.14%)</title><rect x="244.0" y="483.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="247.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (303 samples, 0.15%)</title><rect x="245.6" y="531.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="248.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (303 samples, 0.15%)</title><rect x="245.6" y="515.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="248.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (303 samples, 0.15%)</title><rect x="245.6" y="499.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="248.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (308 samples, 0.15%)</title><rect x="247.4" y="563.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="250.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (308 samples, 0.15%)</title><rect x="247.4" y="547.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="250.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (308 samples, 0.15%)</title><rect x="247.4" y="531.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="250.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (308 samples, 0.15%)</title><rect x="247.4" y="515.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="250.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (308 samples, 0.15%)</title><rect x="247.4" y="499.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="250.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (18,715 samples, 9.11%)</title><rect x="249.1" y="563.0" width="107.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="252.1" y="574.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (225 samples, 0.11%)</title><rect x="249.1" y="547.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="252.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (225 samples, 0.11%)</title><rect x="249.1" y="531.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="252.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$184/1238990080.get$Lambda (225 samples, 0.11%)</title><rect x="249.1" y="515.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$184 (225 samples, 0.11%)</title><rect x="249.1" y="499.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="252.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (17,345 samples, 8.45%)</title><rect x="250.4" y="547.0" width="99.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="253.4" y="558.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (17,345 samples, 8.45%)</title><rect x="250.4" y="531.0" width="99.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="253.4" y="542.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (17,061 samples, 8.31%)</title><rect x="250.4" y="515.0" width="98.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="253.4" y="526.0">java/util/co..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$184/1238990080.apply (17,061 samples, 8.31%)</title><rect x="250.4" y="499.0" width="98.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="253.4" y="510.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (17,061 samples, 8.31%)</title><rect x="250.4" y="483.0" width="98.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="253.4" y="494.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (17,061 samples, 8.31%)</title><rect x="250.4" y="467.0" width="98.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="253.4" y="478.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (125 samples, 0.06%)</title><rect x="250.4" y="451.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="253.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (125 samples, 0.06%)</title><rect x="250.4" y="435.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="253.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$290/1393051360.get$Lambda (125 samples, 0.06%)</title><rect x="250.4" y="419.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="253.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$290 (125 samples, 0.06%)</title><rect x="250.4" y="403.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="253.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (7,224 samples, 3.52%)</title><rect x="251.2" y="451.0" width="41.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="254.2" y="462.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (7,224 samples, 3.52%)</title><rect x="251.2" y="435.0" width="41.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="254.2" y="446.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (7,224 samples, 3.52%)</title><rect x="251.2" y="419.0" width="41.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="254.2" y="430.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$290/1393051360.apply (6,914 samples, 3.37%)</title><rect x="251.2" y="403.0" width="39.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="254.2" y="414.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (6,914 samples, 3.37%)</title><rect x="251.2" y="387.0" width="39.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="254.2" y="398.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (6,914 samples, 3.37%)</title><rect x="251.2" y="371.0" width="39.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="254.2" y="382.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (6,914 samples, 3.37%)</title><rect x="251.2" y="355.0" width="39.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="254.2" y="366.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (4,412 samples, 2.15%)</title><rect x="251.2" y="339.0" width="25.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="254.2" y="350.0">j..</text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (1,253 samples, 0.61%)</title><rect x="251.2" y="323.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="254.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (228 samples, 0.11%)</title><rect x="251.2" y="307.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="254.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (516 samples, 0.25%)</title><rect x="252.5" y="307.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="255.5" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (516 samples, 0.25%)</title><rect x="252.5" y="291.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="255.5" y="302.0"></text>
</g>
<g>
<title>byte[] (513 samples, 0.25%)</title><rect x="252.5" y="275.0" width="2.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="255.5" y="286.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (509 samples, 0.25%)</title><rect x="255.4" y="307.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="258.4" y="318.0"></text>
</g>
<g>
<title>byte[] (507 samples, 0.25%)</title><rect x="255.4" y="291.0" width="2.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="258.4" y="302.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (220 samples, 0.11%)</title><rect x="258.3" y="323.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="261.3" y="334.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (220 samples, 0.11%)</title><rect x="258.3" y="307.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="261.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (2,069 samples, 1.01%)</title><rect x="259.6" y="323.0" width="11.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="262.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (185 samples, 0.09%)</title><rect x="259.6" y="307.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="262.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (1,481 samples, 0.72%)</title><rect x="260.7" y="307.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="263.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (1,481 samples, 0.72%)</title><rect x="260.7" y="291.0" width="8.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="263.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/501107890.linkToTargetMethod (1,062 samples, 0.52%)</title><rect x="260.7" y="275.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="263.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,062 samples, 0.52%)</title><rect x="260.7" y="259.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="263.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/1267556427.get$Lambda (1,062 samples, 0.52%)</title><rect x="260.7" y="243.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="263.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$78 (1,062 samples, 0.52%)</title><rect x="260.7" y="227.0" width="6.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="263.7" y="238.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (419 samples, 0.20%)</title><rect x="266.8" y="275.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="269.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/1267556427.run (419 samples, 0.20%)</title><rect x="266.8" y="259.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="269.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (419 samples, 0.20%)</title><rect x="266.8" y="243.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="269.8" y="254.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (419 samples, 0.20%)</title><rect x="266.8" y="227.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="269.8" y="238.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (419 samples, 0.20%)</title><rect x="266.8" y="211.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="269.8" y="222.0"></text>
</g>
<g>
<title>java.lang.Integer (419 samples, 0.20%)</title><rect x="266.8" y="195.0" width="2.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="269.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (403 samples, 0.20%)</title><rect x="269.2" y="307.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="272.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (403 samples, 0.20%)</title><rect x="269.2" y="291.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="272.2" y="302.0"></text>
</g>
<g>
<title>int[] (403 samples, 0.20%)</title><rect x="269.2" y="275.0" width="2.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="272.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (870 samples, 0.42%)</title><rect x="271.5" y="323.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="274.5" y="334.0"></text>
</g>
<g>
<title>byte[] (416 samples, 0.20%)</title><rect x="271.5" y="307.0" width="2.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="274.5" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (454 samples, 0.22%)</title><rect x="273.9" y="307.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="276.9" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (454 samples, 0.22%)</title><rect x="273.9" y="291.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="276.9" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (454 samples, 0.22%)</title><rect x="273.9" y="275.0" width="2.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="276.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2,502 samples, 1.22%)</title><rect x="276.5" y="339.0" width="14.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.5" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (757 samples, 0.37%)</title><rect x="276.5" y="323.0" width="4.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="279.5" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (630 samples, 0.31%)</title><rect x="280.9" y="323.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="283.9" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (630 samples, 0.31%)</title><rect x="280.9" y="307.0" width="3.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="283.9" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,115 samples, 0.54%)</title><rect x="284.5" y="323.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="287.5" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,115 samples, 0.54%)</title><rect x="284.5" y="307.0" width="6.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="287.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (310 samples, 0.15%)</title><rect x="290.9" y="403.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="293.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (310 samples, 0.15%)</title><rect x="290.9" y="387.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="293.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (310 samples, 0.15%)</title><rect x="290.9" y="371.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="293.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (9,712 samples, 4.73%)</title><rect x="292.7" y="451.0" width="55.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="295.7" y="462.0">jdk/i..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (737 samples, 0.36%)</title><rect x="292.7" y="435.0" width="4.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="295.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (8,649 samples, 4.21%)</title><rect x="297.1" y="435.0" width="49.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="300.1" y="446.0">jdk/i..</text>
</g>
<g>
<title>java.lang.Object (130 samples, 0.06%)</title><rect x="297.1" y="419.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="300.1" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList (276 samples, 0.13%)</title><rect x="297.8" y="419.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="300.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (198 samples, 0.10%)</title><rect x="299.4" y="419.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="302.4" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (433 samples, 0.21%)</title><rect x="300.6" y="419.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="303.6" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (433 samples, 0.21%)</title><rect x="300.6" y="403.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="303.6" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (433 samples, 0.21%)</title><rect x="300.6" y="387.0" width="2.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="303.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (224 samples, 0.11%)</title><rect x="303.1" y="419.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="306.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (224 samples, 0.11%)</title><rect x="303.1" y="403.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="306.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (632 samples, 0.31%)</title><rect x="304.3" y="419.0" width="3.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="307.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (453 samples, 0.22%)</title><rect x="308.0" y="419.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="311.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (480 samples, 0.23%)</title><rect x="310.6" y="419.0" width="2.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="313.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (586 samples, 0.29%)</title><rect x="313.4" y="419.0" width="3.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="316.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (2,598 samples, 1.27%)</title><rect x="316.8" y="419.0" width="14.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="319.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (232 samples, 0.11%)</title><rect x="316.8" y="403.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="319.8" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (141 samples, 0.07%)</title><rect x="318.1" y="403.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="321.1" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (230 samples, 0.11%)</title><rect x="318.9" y="403.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="321.9" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (133 samples, 0.06%)</title><rect x="320.2" y="403.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="323.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (139 samples, 0.07%)</title><rect x="321.0" y="403.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="324.0" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (139 samples, 0.07%)</title><rect x="321.0" y="387.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="324.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.get$Lambda (139 samples, 0.07%)</title><rect x="321.0" y="371.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="324.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$284 (139 samples, 0.07%)</title><rect x="321.0" y="355.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="324.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (206 samples, 0.10%)</title><rect x="321.8" y="403.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="324.8" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (206 samples, 0.10%)</title><rect x="321.8" y="387.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="324.8" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (234 samples, 0.11%)</title><rect x="323.0" y="403.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="326.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (312 samples, 0.15%)</title><rect x="324.3" y="403.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="327.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (971 samples, 0.47%)</title><rect x="326.1" y="403.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (178 samples, 0.09%)</title><rect x="326.1" y="387.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="329.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (262 samples, 0.13%)</title><rect x="327.1" y="387.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="330.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (125 samples, 0.06%)</title><rect x="328.6" y="387.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="331.6" y="398.0"></text>
</g>
<g>
<title>java.lang.Object (125 samples, 0.06%)</title><rect x="328.6" y="371.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="331.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (406 samples, 0.20%)</title><rect x="329.4" y="387.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="332.4" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (132 samples, 0.06%)</title><rect x="329.4" y="371.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="332.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (118 samples, 0.06%)</title><rect x="330.1" y="371.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="333.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (156 samples, 0.08%)</title><rect x="330.8" y="371.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="333.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (1,642 samples, 0.80%)</title><rect x="331.7" y="419.0" width="9.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="334.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (126 samples, 0.06%)</title><rect x="331.7" y="403.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="334.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (129 samples, 0.06%)</title><rect x="332.4" y="403.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="335.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (158 samples, 0.08%)</title><rect x="333.2" y="403.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="336.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (206 samples, 0.10%)</title><rect x="334.1" y="403.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="337.1" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (206 samples, 0.10%)</title><rect x="334.1" y="387.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="337.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1,023 samples, 0.50%)</title><rect x="335.3" y="403.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="338.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (202 samples, 0.10%)</title><rect x="335.3" y="387.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="338.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (270 samples, 0.13%)</title><rect x="336.4" y="387.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="339.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (122 samples, 0.06%)</title><rect x="338.0" y="387.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="341.0" y="398.0"></text>
</g>
<g>
<title>java.lang.Object (122 samples, 0.06%)</title><rect x="338.0" y="371.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="341.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (429 samples, 0.21%)</title><rect x="338.7" y="387.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="341.7" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (123 samples, 0.06%)</title><rect x="338.7" y="371.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="341.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (163 samples, 0.08%)</title><rect x="339.4" y="371.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="342.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (143 samples, 0.07%)</title><rect x="340.3" y="371.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="343.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (199 samples, 0.10%)</title><rect x="341.1" y="419.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="344.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (198 samples, 0.10%)</title><rect x="341.1" y="403.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="344.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (198 samples, 0.10%)</title><rect x="341.1" y="387.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="344.1" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.get (198 samples, 0.10%)</title><rect x="341.1" y="371.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="344.1" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (198 samples, 0.10%)</title><rect x="341.1" y="355.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="344.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (198 samples, 0.10%)</title><rect x="341.1" y="339.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="344.1" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (198 samples, 0.10%)</title><rect x="341.1" y="323.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="344.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (786 samples, 0.38%)</title><rect x="342.3" y="419.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="345.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/501107890.linkToTargetMethod (229 samples, 0.11%)</title><rect x="342.3" y="403.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="345.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (229 samples, 0.11%)</title><rect x="342.3" y="387.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="345.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$194/211908476.get$Lambda (229 samples, 0.11%)</title><rect x="342.3" y="371.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="345.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$194 (229 samples, 0.11%)</title><rect x="342.3" y="355.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="345.3" y="366.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (557 samples, 0.27%)</title><rect x="343.6" y="403.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="346.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$194/211908476.run (557 samples, 0.27%)</title><rect x="343.6" y="387.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="346.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (557 samples, 0.27%)</title><rect x="343.6" y="371.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="346.6" y="382.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (127 samples, 0.06%)</title><rect x="343.6" y="355.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="346.6" y="366.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (430 samples, 0.21%)</title><rect x="344.3" y="355.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="347.3" y="366.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (226 samples, 0.11%)</title><rect x="344.3" y="339.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="347.3" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (204 samples, 0.10%)</title><rect x="345.6" y="339.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="348.6" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (204 samples, 0.10%)</title><rect x="345.6" y="323.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="348.6" y="334.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (204 samples, 0.10%)</title><rect x="345.6" y="307.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="348.6" y="318.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (204 samples, 0.10%)</title><rect x="345.6" y="291.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="348.6" y="302.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (204 samples, 0.10%)</title><rect x="345.6" y="275.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="348.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (291 samples, 0.14%)</title><rect x="346.8" y="435.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="349.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (291 samples, 0.14%)</title><rect x="346.8" y="419.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="349.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (284 samples, 0.14%)</title><rect x="348.5" y="515.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="351.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (284 samples, 0.14%)</title><rect x="348.5" y="499.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="351.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (284 samples, 0.14%)</title><rect x="348.5" y="483.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="351.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (281 samples, 0.14%)</title><rect x="350.1" y="547.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="353.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (281 samples, 0.14%)</title><rect x="350.1" y="531.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="353.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (281 samples, 0.14%)</title><rect x="350.1" y="515.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="353.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (281 samples, 0.14%)</title><rect x="350.1" y="499.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="353.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (281 samples, 0.14%)</title><rect x="350.1" y="483.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="353.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (864 samples, 0.42%)</title><rect x="351.7" y="547.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="354.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (583 samples, 0.28%)</title><rect x="351.7" y="531.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="354.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (583 samples, 0.28%)</title><rect x="351.7" y="515.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="354.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2128155258.linkToTargetMethod (583 samples, 0.28%)</title><rect x="351.7" y="499.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="354.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2090995829.invoke (583 samples, 0.28%)</title><rect x="351.7" y="483.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="354.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/892748663.invoke (583 samples, 0.28%)</title><rect x="351.7" y="467.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="354.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (583 samples, 0.28%)</title><rect x="351.7" y="451.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="354.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (220 samples, 0.11%)</title><rect x="351.7" y="435.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="354.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String (220 samples, 0.11%)</title><rect x="351.7" y="419.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="354.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (363 samples, 0.18%)</title><rect x="353.0" y="435.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="356.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (363 samples, 0.18%)</title><rect x="353.0" y="419.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="356.0" y="430.0"></text>
</g>
<g>
<title>byte[] (363 samples, 0.18%)</title><rect x="353.0" y="403.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="356.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (281 samples, 0.14%)</title><rect x="355.1" y="531.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="358.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (281 samples, 0.14%)</title><rect x="355.1" y="515.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="358.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (305 samples, 0.15%)</title><rect x="356.7" y="627.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="359.7" y="638.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (305 samples, 0.15%)</title><rect x="356.7" y="611.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="359.7" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (305 samples, 0.15%)</title><rect x="356.7" y="595.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="359.7" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (305 samples, 0.15%)</title><rect x="356.7" y="579.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="359.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (1,622 samples, 0.79%)</title><rect x="358.4" y="627.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="361.4" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (1,179 samples, 0.57%)</title><rect x="358.4" y="611.0" width="6.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="361.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (443 samples, 0.22%)</title><rect x="365.2" y="611.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="368.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (443 samples, 0.22%)</title><rect x="365.2" y="595.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="368.2" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.now (222 samples, 0.11%)</title><rect x="365.2" y="579.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="368.2" y="590.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (222 samples, 0.11%)</title><rect x="365.2" y="563.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="368.2" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (222 samples, 0.11%)</title><rect x="365.2" y="547.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="368.2" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.create (222 samples, 0.11%)</title><rect x="365.2" y="531.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.2" y="542.0"></text>
</g>
<g>
<title>java.time.Instant (222 samples, 0.11%)</title><rect x="365.2" y="515.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="368.2" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (221 samples, 0.11%)</title><rect x="366.5" y="579.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="369.5" y="590.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (221 samples, 0.11%)</title><rect x="366.5" y="563.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="369.5" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plus (221 samples, 0.11%)</title><rect x="366.5" y="547.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="369.5" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (221 samples, 0.11%)</title><rect x="366.5" y="531.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="369.5" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (221 samples, 0.11%)</title><rect x="366.5" y="515.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="369.5" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (221 samples, 0.11%)</title><rect x="366.5" y="499.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="369.5" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (221 samples, 0.11%)</title><rect x="366.5" y="483.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="369.5" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.create (221 samples, 0.11%)</title><rect x="366.5" y="467.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="369.5" y="478.0"></text>
</g>
<g>
<title>java.time.Instant (221 samples, 0.11%)</title><rect x="366.5" y="451.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="369.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$151/1373859138.apply (49 samples, 0.02%)</title><rect x="367.7" y="675.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="370.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (49 samples, 0.02%)</title><rect x="367.7" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="370.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$LocalServiceClient$$Lambda$663/638630665.get (28,979 samples, 14.11%)</title><rect x="368.1" y="707.0" width="166.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="371.1" y="718.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$LocalServiceClient.lambda$getAsync$0 (28,979 samples, 14.11%)</title><rect x="368.1" y="691.0" width="166.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="371.1" y="702.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.getEntityLocal (28,979 samples, 14.11%)</title><rect x="368.1" y="675.0" width="166.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="371.1" y="686.0">ru/mail/polis/service..</text>
</g>
<g>
<title>java/lang/Integer.valueOf (432 samples, 0.21%)</title><rect x="368.1" y="659.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="371.1" y="670.0"></text>
</g>
<g>
<title>java.lang.Integer (432 samples, 0.21%)</title><rect x="368.1" y="643.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="371.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/DAOImpl.getEntry (28,424 samples, 13.84%)</title><rect x="370.6" y="659.0" width="163.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="373.6" y="670.0">ru/mail/polis/dao/vad..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3,094 samples, 1.51%)</title><rect x="370.6" y="643.0" width="17.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="373.6" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,094 samples, 1.51%)</title><rect x="370.6" y="627.0" width="17.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="373.6" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (984 samples, 0.48%)</title><rect x="370.6" y="611.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="373.6" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (984 samples, 0.48%)</title><rect x="370.6" y="595.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="373.6" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (984 samples, 0.48%)</title><rect x="370.6" y="579.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="373.6" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (984 samples, 0.48%)</title><rect x="370.6" y="563.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="373.6" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (984 samples, 0.48%)</title><rect x="370.6" y="547.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="373.6" y="558.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$138/2022631555.compare (984 samples, 0.48%)</title><rect x="370.6" y="531.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="373.6" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (984 samples, 0.48%)</title><rect x="370.6" y="515.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="373.6" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$137/1326605944.compare (984 samples, 0.48%)</title><rect x="370.6" y="499.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="373.6" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$ea9a8b3a$1 (984 samples, 0.48%)</title><rect x="370.6" y="483.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="373.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/TableEntry$$Lambda$135/1670022197.apply (984 samples, 0.48%)</title><rect x="370.6" y="467.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="373.6" y="478.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (984 samples, 0.48%)</title><rect x="370.6" y="451.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="373.6" y="462.0"></text>
</g>
<g>
<title>java.lang.Long (984 samples, 0.48%)</title><rect x="370.6" y="435.0" width="5.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="373.6" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,110 samples, 1.03%)</title><rect x="376.2" y="611.0" width="12.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="379.2" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,110 samples, 1.03%)</title><rect x="376.2" y="595.0" width="12.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="379.2" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,110 samples, 1.03%)</title><rect x="376.2" y="579.0" width="12.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="379.2" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,110 samples, 1.03%)</title><rect x="376.2" y="563.0" width="12.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="379.2" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,110 samples, 1.03%)</title><rect x="376.2" y="547.0" width="12.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="379.2" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,110 samples, 1.03%)</title><rect x="376.2" y="531.0" width="12.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="379.2" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,863 samples, 0.91%)</title><rect x="376.2" y="515.0" width="10.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="379.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.next (1,863 samples, 0.91%)</title><rect x="376.2" y="499.0" width="10.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="379.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.next (1,863 samples, 0.91%)</title><rect x="376.2" y="483.0" width="10.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="379.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable.entryAt (1,863 samples, 0.91%)</title><rect x="376.2" y="467.0" width="10.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="379.2" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (796 samples, 0.39%)</title><rect x="376.2" y="451.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="379.2" y="462.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (796 samples, 0.39%)</title><rect x="376.2" y="435.0" width="4.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="379.2" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (832 samples, 0.41%)</title><rect x="380.8" y="451.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="383.8" y="462.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (832 samples, 0.41%)</title><rect x="380.8" y="435.0" width="4.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="383.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/TableEntry.from (235 samples, 0.11%)</title><rect x="385.6" y="451.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="388.6" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.vaddya.TableEntry (235 samples, 0.11%)</title><rect x="385.6" y="435.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="388.6" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$138/2022631555.compare (247 samples, 0.12%)</title><rect x="386.9" y="515.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="389.9" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (247 samples, 0.12%)</title><rect x="386.9" y="499.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="389.9" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$137/1326605944.compare (247 samples, 0.12%)</title><rect x="386.9" y="483.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="389.9" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$ea9a8b3a$1 (247 samples, 0.12%)</title><rect x="386.9" y="467.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="389.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/TableEntry$$Lambda$135/1670022197.apply (247 samples, 0.12%)</title><rect x="386.9" y="451.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="389.9" y="462.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (247 samples, 0.12%)</title><rect x="386.9" y="435.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="389.9" y="446.0"></text>
</g>
<g>
<title>java.lang.Long (247 samples, 0.12%)</title><rect x="386.9" y="419.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="389.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/DAOImpl.entryIterator (25,330 samples, 12.33%)</title><rect x="388.4" y="643.0" width="145.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="391.4" y="654.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/IteratorUtils.collapseIterators (4,481 samples, 2.18%)</title><rect x="388.4" y="627.0" width="25.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="391.4" y="638.0">r..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4,256 samples, 2.07%)</title><rect x="388.4" y="611.0" width="24.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="391.4" y="622.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4,243 samples, 2.07%)</title><rect x="388.5" y="595.0" width="24.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="391.5" y="606.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (273 samples, 0.13%)</title><rect x="388.6" y="579.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="391.6" y="590.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (273 samples, 0.13%)</title><rect x="388.6" y="563.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="391.6" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3,918 samples, 1.91%)</title><rect x="390.4" y="579.0" width="22.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="393.4" y="590.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3,918 samples, 1.91%)</title><rect x="390.4" y="563.0" width="22.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="393.4" y="574.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (156 samples, 0.08%)</title><rect x="390.4" y="547.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="393.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (156 samples, 0.08%)</title><rect x="390.4" y="531.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="393.4" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (156 samples, 0.08%)</title><rect x="390.4" y="515.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="393.4" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3,762 samples, 1.83%)</title><rect x="391.3" y="547.0" width="21.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="394.3" y="558.0">j..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3,762 samples, 1.83%)</title><rect x="391.3" y="531.0" width="21.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="394.3" y="542.0">j..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,762 samples, 1.83%)</title><rect x="391.3" y="515.0" width="21.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="394.3" y="526.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,762 samples, 1.83%)</title><rect x="391.3" y="499.0" width="21.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="394.3" y="510.0">c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3,037 samples, 1.48%)</title><rect x="391.3" y="483.0" width="17.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="394.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.next (3,037 samples, 1.48%)</title><rect x="391.3" y="467.0" width="17.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="394.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.next (3,037 samples, 1.48%)</title><rect x="391.3" y="451.0" width="17.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="394.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable.entryAt (3,037 samples, 1.48%)</title><rect x="391.3" y="435.0" width="17.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="394.3" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,385 samples, 0.67%)</title><rect x="391.3" y="419.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="394.3" y="430.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,385 samples, 0.67%)</title><rect x="391.3" y="403.0" width="7.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="394.3" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (1,314 samples, 0.64%)</title><rect x="399.2" y="419.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="402.2" y="430.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,314 samples, 0.64%)</title><rect x="399.2" y="403.0" width="7.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="402.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/TableEntry.from (338 samples, 0.16%)</title><rect x="406.8" y="419.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="409.8" y="430.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.vaddya.TableEntry (338 samples, 0.16%)</title><rect x="406.8" y="403.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="409.8" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$138/2022631555.compare (725 samples, 0.35%)</title><rect x="408.7" y="483.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="411.7" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (725 samples, 0.35%)</title><rect x="408.7" y="467.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="411.7" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$137/1326605944.compare (725 samples, 0.35%)</title><rect x="408.7" y="451.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="411.7" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$ea9a8b3a$1 (725 samples, 0.35%)</title><rect x="408.7" y="435.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="411.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/TableEntry$$Lambda$135/1670022197.apply (725 samples, 0.35%)</title><rect x="408.7" y="419.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="411.7" y="430.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (725 samples, 0.35%)</title><rect x="408.7" y="403.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.7" y="414.0"></text>
</g>
<g>
<title>java.lang.Long (725 samples, 0.35%)</title><rect x="408.7" y="387.0" width="4.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="411.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (225 samples, 0.11%)</title><rect x="412.9" y="611.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="415.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (212 samples, 0.10%)</title><rect x="413.0" y="595.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="416.0" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (212 samples, 0.10%)</title><rect x="413.0" y="579.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="416.0" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (84 samples, 0.04%)</title><rect x="413.0" y="563.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="416.0" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (84 samples, 0.04%)</title><rect x="413.0" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="416.0" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (84 samples, 0.04%)</title><rect x="413.0" y="531.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="416.0" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (84 samples, 0.04%)</title><rect x="413.0" y="515.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="416.0" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (84 samples, 0.04%)</title><rect x="413.0" y="499.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="416.0" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$138/2022631555.compare (84 samples, 0.04%)</title><rect x="413.0" y="483.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="416.0" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (84 samples, 0.04%)</title><rect x="413.0" y="467.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="416.0" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$137/1326605944.compare (84 samples, 0.04%)</title><rect x="413.0" y="451.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="416.0" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$ea9a8b3a$1 (84 samples, 0.04%)</title><rect x="413.0" y="435.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="416.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/TableEntry$$Lambda$135/1670022197.apply (84 samples, 0.04%)</title><rect x="413.0" y="419.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="416.0" y="430.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (84 samples, 0.04%)</title><rect x="413.0" y="403.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="416.0" y="414.0"></text>
</g>
<g>
<title>java.lang.Long (84 samples, 0.04%)</title><rect x="413.0" y="387.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="416.0" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (128 samples, 0.06%)</title><rect x="413.5" y="563.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="416.5" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (128 samples, 0.06%)</title><rect x="413.5" y="547.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="416.5" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (128 samples, 0.06%)</title><rect x="413.5" y="531.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="416.5" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (128 samples, 0.06%)</title><rect x="413.5" y="515.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="416.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (128 samples, 0.06%)</title><rect x="413.5" y="499.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="416.5" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (128 samples, 0.06%)</title><rect x="413.5" y="483.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="416.5" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (127 samples, 0.06%)</title><rect x="413.5" y="467.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="416.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.next (127 samples, 0.06%)</title><rect x="413.5" y="451.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="416.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.next (127 samples, 0.06%)</title><rect x="413.5" y="435.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="416.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable.entryAt (127 samples, 0.06%)</title><rect x="413.5" y="419.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="416.5" y="430.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (48 samples, 0.02%)</title><rect x="413.5" y="403.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="416.5" y="414.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (48 samples, 0.02%)</title><rect x="413.5" y="387.0" width="0.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="416.5" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (62 samples, 0.03%)</title><rect x="413.7" y="403.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="416.7" y="414.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (62 samples, 0.03%)</title><rect x="413.7" y="387.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="416.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/IteratorUtils.collectIterators (20,833 samples, 10.14%)</title><rect x="414.2" y="627.0" width="119.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="417.2" y="638.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/util/Collection.stream (66 samples, 0.03%)</title><rect x="414.3" y="611.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="417.3" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (20,293 samples, 9.88%)</title><rect x="414.8" y="611.0" width="116.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="417.8" y="622.0">java/util/stre..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (20,279 samples, 9.87%)</title><rect x="414.8" y="595.0" width="116.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="417.8" y="606.0">java/util/stre..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (20,279 samples, 9.87%)</title><rect x="414.8" y="579.0" width="116.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="417.8" y="590.0">java/util/stre..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (20,259 samples, 9.86%)</title><rect x="414.8" y="563.0" width="116.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="417.8" y="574.0">java/util/stre..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (20,245 samples, 9.86%)</title><rect x="414.8" y="547.0" width="116.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="417.8" y="558.0">java/util/stre..</text>
</g>
<g>
<title>java/util/HashMap$ValueSpliterator.forEachRemaining (20,234 samples, 9.85%)</title><rect x="414.8" y="531.0" width="116.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="417.8" y="542.0">java/util/Hash..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (20,234 samples, 9.85%)</title><rect x="414.8" y="515.0" width="116.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="417.8" y="526.0">java/util/stre..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (168 samples, 0.08%)</title><rect x="414.8" y="499.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$27/1043208434.accept (168 samples, 0.08%)</title><rect x="414.8" y="483.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="417.8" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (168 samples, 0.08%)</title><rect x="414.8" y="467.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="417.8" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (168 samples, 0.08%)</title><rect x="414.8" y="451.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="417.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (168 samples, 0.08%)</title><rect x="414.8" y="435.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="417.8" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (168 samples, 0.08%)</title><rect x="414.8" y="419.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="417.8" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (168 samples, 0.08%)</title><rect x="414.8" y="403.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="417.8" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (168 samples, 0.08%)</title><rect x="414.8" y="387.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="417.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/IteratorUtils$$Lambda$667/759855183.apply (20,066 samples, 9.77%)</title><rect x="415.7" y="499.0" width="115.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="418.7" y="510.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/IteratorUtils.lambda$collectIterators$0 (20,066 samples, 9.77%)</title><rect x="415.7" y="483.0" width="115.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="418.7" y="494.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable.iterator (20,066 samples, 9.77%)</title><rect x="415.7" y="467.0" width="115.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="418.7" y="478.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru.mail.polis.dao.vaddya.SSTable$1 (266 samples, 0.13%)</title><rect x="415.7" y="451.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="418.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable$1.&lt;init&gt; (19,800 samples, 9.64%)</title><rect x="417.3" y="451.0" width="113.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="420.3" y="462.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable.position (19,800 samples, 9.64%)</title><rect x="417.3" y="435.0" width="113.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="420.3" y="446.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/SSTable.keyAt (19,800 samples, 9.64%)</title><rect x="417.3" y="419.0" width="113.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="420.3" y="430.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (9,920 samples, 4.83%)</title><rect x="417.3" y="403.0" width="57.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="420.3" y="414.0">java/n..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (9,920 samples, 4.83%)</title><rect x="417.3" y="387.0" width="57.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="420.3" y="398.0">java.n..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (9,880 samples, 4.81%)</title><rect x="474.3" y="403.0" width="56.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.3" y="414.0">java/n..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (9,880 samples, 4.81%)</title><rect x="474.3" y="387.0" width="56.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="477.3" y="398.0">java.n..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (46 samples, 0.02%)</title><rect x="531.4" y="611.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="534.4" y="622.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (46 samples, 0.02%)</title><rect x="531.4" y="595.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="534.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/MemTablePool.iterator (394 samples, 0.19%)</title><rect x="531.6" y="611.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="534.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/IteratorUtils.collapseIterators (88 samples, 0.04%)</title><rect x="531.6" y="595.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="534.6" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (68 samples, 0.03%)</title><rect x="531.6" y="579.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="534.6" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (60 samples, 0.03%)</title><rect x="531.7" y="563.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="534.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/IteratorUtils.collectIterators (305 samples, 0.15%)</title><rect x="532.1" y="595.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="535.1" y="606.0"></text>
</g>
<g>
<title>java/util/Collection.stream (63 samples, 0.03%)</title><rect x="532.4" y="579.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="535.4" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (60 samples, 0.03%)</title><rect x="532.9" y="579.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="535.9" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (44 samples, 0.02%)</title><rect x="532.9" y="563.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="535.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (44 samples, 0.02%)</title><rect x="532.9" y="547.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="535.9" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (44 samples, 0.02%)</title><rect x="533.2" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="536.2" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (44 samples, 0.02%)</title><rect x="533.2" y="563.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="536.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/MemTable.iterator (74 samples, 0.04%)</title><rect x="533.5" y="579.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="536.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ByteBufferUtils.wrapString (45 samples, 0.02%)</title><rect x="533.9" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="536.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ByteBufferUtils.wrapString (45 samples, 0.02%)</title><rect x="533.9" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="536.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/Value.fromEntry (78 samples, 0.04%)</title><rect x="534.2" y="659.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ByteBufferUtils.unwrapBytes (46 samples, 0.02%)</title><rect x="534.2" y="643.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="537.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,502 samples, 0.73%)</title><rect x="534.6" y="723.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="537.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (1,480 samples, 0.72%)</title><rect x="534.6" y="707.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="537.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1,480 samples, 0.72%)</title><rect x="534.6" y="691.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="537.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1,480 samples, 0.72%)</title><rect x="534.6" y="675.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="537.6" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (1,480 samples, 0.72%)</title><rect x="534.6" y="659.0" width="8.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="537.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$498/375914915.run (6,222 samples, 3.03%)</title><rect x="543.2" y="723.0" width="35.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="546.2" y="734.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (6,222 samples, 3.03%)</title><rect x="543.2" y="707.0" width="35.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="546.2" y="718.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (6,222 samples, 3.03%)</title><rect x="543.2" y="691.0" width="35.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="546.2" y="702.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (6,222 samples, 3.03%)</title><rect x="543.2" y="675.0" width="35.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="546.2" y="686.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6,222 samples, 3.03%)</title><rect x="543.2" y="659.0" width="35.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="546.2" y="670.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6,222 samples, 3.03%)</title><rect x="543.2" y="643.0" width="35.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="546.2" y="654.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6,222 samples, 3.03%)</title><rect x="543.2" y="627.0" width="35.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="546.2" y="638.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6,222 samples, 3.03%)</title><rect x="543.2" y="611.0" width="35.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="546.2" y="622.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6,222 samples, 3.03%)</title><rect x="543.2" y="595.0" width="35.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="546.2" y="606.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6,222 samples, 3.03%)</title><rect x="543.2" y="579.0" width="35.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="546.2" y="590.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (6,222 samples, 3.03%)</title><rect x="543.2" y="563.0" width="35.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="546.2" y="574.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (5,746 samples, 2.80%)</title><rect x="543.2" y="547.0" width="33.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="546.2" y="558.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (668 samples, 0.33%)</title><rect x="543.2" y="531.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="546.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (668 samples, 0.33%)</title><rect x="543.2" y="515.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="546.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$499/1958732976.get$Lambda (518 samples, 0.25%)</title><rect x="543.2" y="499.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="546.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$499 (518 samples, 0.25%)</title><rect x="543.2" y="483.0" width="3.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="546.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$550/783484924.get$Lambda (150 samples, 0.07%)</title><rect x="546.2" y="499.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="549.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$550 (150 samples, 0.07%)</title><rect x="546.2" y="483.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="549.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (5,078 samples, 2.47%)</title><rect x="547.1" y="531.0" width="29.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="550.1" y="542.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (401 samples, 0.20%)</title><rect x="547.1" y="515.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="550.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4,677 samples, 2.28%)</title><rect x="549.4" y="515.0" width="26.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="552.4" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (4,677 samples, 2.28%)</title><rect x="549.4" y="499.0" width="26.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="552.4" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4,677 samples, 2.28%)</title><rect x="549.4" y="483.0" width="26.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.4" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,106 samples, 1.03%)</title><rect x="549.4" y="467.0" width="12.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="552.4" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (500 samples, 0.24%)</title><rect x="549.4" y="451.0" width="2.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="552.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$527/52661102.apply (990 samples, 0.48%)</title><rect x="552.3" y="451.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="555.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (990 samples, 0.48%)</title><rect x="552.3" y="435.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="555.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (990 samples, 0.48%)</title><rect x="552.3" y="419.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="555.3" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (217 samples, 0.11%)</title><rect x="552.3" y="403.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="555.3" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (217 samples, 0.11%)</title><rect x="552.3" y="387.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="555.3" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (217 samples, 0.11%)</title><rect x="552.3" y="371.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="555.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (773 samples, 0.38%)</title><rect x="553.5" y="403.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="556.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (155 samples, 0.08%)</title><rect x="553.5" y="387.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="556.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (155 samples, 0.08%)</title><rect x="553.5" y="371.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="556.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$553/1767458720.get$Lambda (155 samples, 0.08%)</title><rect x="553.5" y="355.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$553 (155 samples, 0.08%)</title><rect x="553.5" y="339.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="556.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (618 samples, 0.30%)</title><rect x="554.4" y="387.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="557.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (618 samples, 0.30%)</title><rect x="554.4" y="371.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="557.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (333 samples, 0.16%)</title><rect x="554.4" y="355.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="557.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (271 samples, 0.13%)</title><rect x="556.4" y="355.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="559.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (271 samples, 0.13%)</title><rect x="556.4" y="339.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="559.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (271 samples, 0.13%)</title><rect x="556.4" y="323.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="559.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$151/1373859138.apply (594 samples, 0.29%)</title><rect x="558.0" y="451.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="561.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (594 samples, 0.29%)</title><rect x="558.0" y="435.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="561.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (564 samples, 0.27%)</title><rect x="558.2" y="419.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="561.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (553 samples, 0.27%)</title><rect x="558.2" y="403.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="561.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (540 samples, 0.26%)</title><rect x="558.3" y="387.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (445 samples, 0.22%)</title><rect x="558.8" y="371.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="561.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$587/849392828.run (445 samples, 0.22%)</title><rect x="558.8" y="355.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="561.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (445 samples, 0.22%)</title><rect x="558.8" y="339.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="561.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (127 samples, 0.06%)</title><rect x="559.0" y="323.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="562.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (127 samples, 0.06%)</title><rect x="559.0" y="307.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="562.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (127 samples, 0.06%)</title><rect x="559.0" y="291.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="562.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (127 samples, 0.06%)</title><rect x="559.0" y="275.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="562.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (127 samples, 0.06%)</title><rect x="559.0" y="259.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (127 samples, 0.06%)</title><rect x="559.0" y="243.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="562.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.run (127 samples, 0.06%)</title><rect x="559.0" y="227.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (127 samples, 0.06%)</title><rect x="559.0" y="211.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="562.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (108 samples, 0.05%)</title><rect x="559.1" y="195.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (108 samples, 0.05%)</title><rect x="559.1" y="179.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="562.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (108 samples, 0.05%)</title><rect x="559.1" y="163.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (108 samples, 0.05%)</title><rect x="559.1" y="147.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (108 samples, 0.05%)</title><rect x="559.1" y="131.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (108 samples, 0.05%)</title><rect x="559.1" y="115.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="562.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$589/1973295159.run (73 samples, 0.04%)</title><rect x="559.2" y="99.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.2" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (73 samples, 0.04%)</title><rect x="559.2" y="83.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="562.2" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (73 samples, 0.04%)</title><rect x="559.2" y="67.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="562.2" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (49 samples, 0.02%)</title><rect x="559.3" y="51.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="562.3" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (46 samples, 0.02%)</title><rect x="559.3" y="35.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="562.3" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (239 samples, 0.12%)</title><rect x="559.7" y="323.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="562.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (239 samples, 0.12%)</title><rect x="559.7" y="307.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="562.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (238 samples, 0.12%)</title><rect x="559.7" y="291.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="562.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (238 samples, 0.12%)</title><rect x="559.7" y="275.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="562.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (238 samples, 0.12%)</title><rect x="559.7" y="259.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (236 samples, 0.11%)</title><rect x="559.7" y="243.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="562.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (236 samples, 0.11%)</title><rect x="559.7" y="227.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="562.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (236 samples, 0.11%)</title><rect x="559.7" y="211.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="562.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (226 samples, 0.11%)</title><rect x="559.8" y="195.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="562.8" y="206.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (226 samples, 0.11%)</title><rect x="559.8" y="179.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="562.8" y="190.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (226 samples, 0.11%)</title><rect x="559.8" y="163.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="562.8" y="174.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (226 samples, 0.11%)</title><rect x="559.8" y="147.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.8" y="158.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (226 samples, 0.11%)</title><rect x="559.8" y="131.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.8" y="142.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (226 samples, 0.11%)</title><rect x="559.8" y="115.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.8" y="126.0"></text>
</g>
<g>
<title>int[] (46 samples, 0.02%)</title><rect x="559.8" y="99.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="562.8" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (48 samples, 0.02%)</title><rect x="560.1" y="99.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="563.1" y="110.0"></text>
</g>
<g>
<title>long[] (69 samples, 0.03%)</title><rect x="560.4" y="99.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="563.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2,571 samples, 1.25%)</title><rect x="561.5" y="467.0" width="14.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,571 samples, 1.25%)</title><rect x="561.5" y="451.0" width="14.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$443/90862708.apply (2,566 samples, 1.25%)</title><rect x="561.5" y="435.0" width="14.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="564.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (2,566 samples, 1.25%)</title><rect x="561.5" y="419.0" width="14.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="564.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2,566 samples, 1.25%)</title><rect x="561.5" y="403.0" width="14.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="564.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$158/1087713702.apply (2,566 samples, 1.25%)</title><rect x="561.5" y="387.0" width="14.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="564.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (2,566 samples, 1.25%)</title><rect x="561.5" y="371.0" width="14.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (140 samples, 0.07%)</title><rect x="561.5" y="355.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="564.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (140 samples, 0.07%)</title><rect x="561.5" y="339.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="564.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$527/52661102.get$Lambda (140 samples, 0.07%)</title><rect x="561.5" y="323.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="564.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$527 (140 samples, 0.07%)</title><rect x="561.5" y="307.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="564.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (685 samples, 0.33%)</title><rect x="562.3" y="355.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="565.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (685 samples, 0.33%)</title><rect x="562.3" y="339.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="565.3" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (361 samples, 0.18%)</title><rect x="562.3" y="323.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="565.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (324 samples, 0.16%)</title><rect x="564.4" y="323.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (324 samples, 0.16%)</title><rect x="564.4" y="307.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="567.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (324 samples, 0.16%)</title><rect x="564.4" y="291.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="567.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (784 samples, 0.38%)</title><rect x="566.2" y="355.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="569.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (155 samples, 0.08%)</title><rect x="566.2" y="339.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="569.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (155 samples, 0.08%)</title><rect x="566.2" y="323.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="569.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$533/1265756444.get$Lambda (155 samples, 0.08%)</title><rect x="566.2" y="307.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="569.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$533 (155 samples, 0.08%)</title><rect x="566.2" y="291.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="569.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (629 samples, 0.31%)</title><rect x="567.1" y="339.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="570.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (629 samples, 0.31%)</title><rect x="567.1" y="323.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.1" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (346 samples, 0.17%)</title><rect x="567.1" y="307.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="570.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (283 samples, 0.14%)</title><rect x="569.1" y="307.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="572.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (283 samples, 0.14%)</title><rect x="569.1" y="291.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="572.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (283 samples, 0.14%)</title><rect x="569.1" y="275.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="572.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (957 samples, 0.47%)</title><rect x="570.7" y="355.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (541 samples, 0.26%)</title><rect x="570.7" y="339.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (259 samples, 0.13%)</title><rect x="570.7" y="323.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="573.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (282 samples, 0.14%)</title><rect x="572.2" y="323.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="575.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (282 samples, 0.14%)</title><rect x="572.2" y="307.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="575.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (282 samples, 0.14%)</title><rect x="572.2" y="291.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="575.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (416 samples, 0.20%)</title><rect x="573.8" y="339.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="576.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (211 samples, 0.10%)</title><rect x="573.8" y="323.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="576.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (205 samples, 0.10%)</title><rect x="575.0" y="323.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (205 samples, 0.10%)</title><rect x="575.0" y="307.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="578.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (205 samples, 0.10%)</title><rect x="575.0" y="291.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="578.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (205 samples, 0.10%)</title><rect x="575.0" y="275.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="578.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (205 samples, 0.10%)</title><rect x="575.0" y="259.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="578.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (205 samples, 0.10%)</title><rect x="575.0" y="243.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="578.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (476 samples, 0.23%)</title><rect x="576.2" y="547.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="579.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (476 samples, 0.23%)</title><rect x="576.2" y="531.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="579.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (476 samples, 0.23%)</title><rect x="576.2" y="515.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="579.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (476 samples, 0.23%)</title><rect x="576.2" y="499.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="579.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (476 samples, 0.23%)</title><rect x="576.2" y="483.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="579.2" y="494.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (474 samples, 0.23%)</title><rect x="576.3" y="467.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="579.3" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (206 samples, 0.10%)</title><rect x="576.3" y="451.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="579.3" y="462.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (206 samples, 0.10%)</title><rect x="576.3" y="435.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="579.3" y="446.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (268 samples, 0.13%)</title><rect x="577.4" y="451.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="580.4" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (268 samples, 0.13%)</title><rect x="577.4" y="435.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="580.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (42,818 samples, 20.85%)</title><rect x="579.0" y="723.0" width="246.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="582.0" y="734.0">jdk/internal/net/http/common/Sequ..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (42,818 samples, 20.85%)</title><rect x="579.0" y="707.0" width="246.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="582.0" y="718.0">jdk/internal/net/http/common/Sequ..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (35,731 samples, 17.40%)</title><rect x="579.0" y="691.0" width="205.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="582.0" y="702.0">jdk/internal/net/http/commo..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.run (35,731 samples, 17.40%)</title><rect x="579.0" y="675.0" width="205.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="582.0" y="686.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (35,731 samples, 17.40%)</title><rect x="579.0" y="659.0" width="205.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="582.0" y="670.0">jdk/internal/net/http/Http1..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (737 samples, 0.36%)</title><rect x="579.2" y="643.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="582.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (737 samples, 0.36%)</title><rect x="579.2" y="627.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="582.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (737 samples, 0.36%)</title><rect x="579.2" y="611.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="582.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (737 samples, 0.36%)</title><rect x="579.2" y="595.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="582.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1473981203.linkToTargetMethod (352 samples, 0.17%)</title><rect x="579.2" y="579.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="582.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2129442232.invoke (352 samples, 0.17%)</title><rect x="579.2" y="563.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="582.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (352 samples, 0.17%)</title><rect x="579.2" y="547.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="582.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (352 samples, 0.17%)</title><rect x="579.2" y="531.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="582.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (352 samples, 0.17%)</title><rect x="579.2" y="515.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="582.2" y="526.0"></text>
</g>
<g>
<title>byte[] (352 samples, 0.17%)</title><rect x="579.2" y="499.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="582.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (385 samples, 0.19%)</title><rect x="581.2" y="579.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="584.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (385 samples, 0.19%)</title><rect x="581.2" y="563.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="584.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (385 samples, 0.19%)</title><rect x="581.2" y="547.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="584.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$493/346832864.get$Lambda (385 samples, 0.19%)</title><rect x="581.2" y="531.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="584.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$493 (385 samples, 0.19%)</title><rect x="581.2" y="515.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="584.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (34,953 samples, 17.02%)</title><rect x="583.5" y="643.0" width="200.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="586.5" y="654.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (34,953 samples, 17.02%)</title><rect x="583.5" y="627.0" width="200.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="586.5" y="638.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (34,953 samples, 17.02%)</title><rect x="583.5" y="611.0" width="200.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="586.5" y="622.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (34,953 samples, 17.02%)</title><rect x="583.5" y="595.0" width="200.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="586.5" y="606.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (13,740 samples, 6.69%)</title><rect x="583.5" y="579.0" width="78.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="586.5" y="590.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13,740 samples, 6.69%)</title><rect x="583.5" y="563.0" width="78.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="586.5" y="574.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (13,740 samples, 6.69%)</title><rect x="583.5" y="547.0" width="78.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="586.5" y="558.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (13,740 samples, 6.69%)</title><rect x="583.5" y="531.0" width="78.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.5" y="542.0">java/util..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13,740 samples, 6.69%)</title><rect x="583.5" y="515.0" width="78.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="586.5" y="526.0">jdk/inter..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (13,740 samples, 6.69%)</title><rect x="583.5" y="499.0" width="78.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="586.5" y="510.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (13,740 samples, 6.69%)</title><rect x="583.5" y="483.0" width="78.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.5" y="494.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (13,359 samples, 6.50%)</title><rect x="583.5" y="467.0" width="76.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="586.5" y="478.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13,359 samples, 6.50%)</title><rect x="583.5" y="451.0" width="76.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="586.5" y="462.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (13,089 samples, 6.37%)</title><rect x="583.5" y="435.0" width="75.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="586.5" y="446.0">java/uti..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (253 samples, 0.12%)</title><rect x="583.5" y="419.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="586.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$533/1265756444.apply (252 samples, 0.12%)</title><rect x="584.9" y="419.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="587.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (252 samples, 0.12%)</title><rect x="584.9" y="403.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="587.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (252 samples, 0.12%)</title><rect x="584.9" y="387.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="587.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (252 samples, 0.12%)</title><rect x="584.9" y="371.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="587.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (252 samples, 0.12%)</title><rect x="584.9" y="355.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="587.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$151/1373859138.apply (12,020 samples, 5.85%)</title><rect x="586.4" y="419.0" width="69.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="589.4" y="430.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (12,020 samples, 5.85%)</title><rect x="586.4" y="403.0" width="69.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="589.4" y="414.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (185 samples, 0.09%)</title><rect x="586.4" y="387.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="589.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (185 samples, 0.09%)</title><rect x="586.4" y="371.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="589.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$607/831886457.get$Lambda (185 samples, 0.09%)</title><rect x="586.4" y="355.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="589.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$607 (185 samples, 0.09%)</title><rect x="586.4" y="339.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="589.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (619 samples, 0.30%)</title><rect x="587.4" y="387.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="590.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (619 samples, 0.30%)</title><rect x="587.4" y="371.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="590.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (339 samples, 0.17%)</title><rect x="587.4" y="355.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="590.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (280 samples, 0.14%)</title><rect x="589.4" y="355.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="592.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (280 samples, 0.14%)</title><rect x="589.4" y="339.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (280 samples, 0.14%)</title><rect x="589.4" y="323.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="592.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (11,216 samples, 5.46%)</title><rect x="591.0" y="387.0" width="64.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.0" y="398.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (134 samples, 0.07%)</title><rect x="591.0" y="371.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="594.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (134 samples, 0.07%)</title><rect x="591.0" y="355.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="594.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$605/871672554.get$Lambda (134 samples, 0.07%)</title><rect x="591.0" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="594.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$605 (134 samples, 0.07%)</title><rect x="591.0" y="323.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="594.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (605 samples, 0.29%)</title><rect x="591.7" y="371.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (605 samples, 0.29%)</title><rect x="591.7" y="355.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="594.7" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (358 samples, 0.17%)</title><rect x="591.7" y="339.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="594.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (247 samples, 0.12%)</title><rect x="593.8" y="339.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="596.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (247 samples, 0.12%)</title><rect x="593.8" y="323.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="596.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (247 samples, 0.12%)</title><rect x="593.8" y="307.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="596.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (10,477 samples, 5.10%)</title><rect x="595.2" y="371.0" width="60.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="598.2" y="382.0">jdk/in..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$664/523215452.apply (747 samples, 0.36%)</title><rect x="595.2" y="355.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.2" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (747 samples, 0.36%)</title><rect x="595.2" y="339.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="598.2" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (747 samples, 0.36%)</title><rect x="595.2" y="323.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="598.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (265 samples, 0.13%)</title><rect x="595.2" y="307.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="598.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (482 samples, 0.23%)</title><rect x="596.7" y="307.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.7" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (223 samples, 0.11%)</title><rect x="596.7" y="291.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="599.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (259 samples, 0.13%)</title><rect x="598.0" y="291.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="601.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (9,730 samples, 4.74%)</title><rect x="599.5" y="355.0" width="55.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="602.5" y="366.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (259 samples, 0.13%)</title><rect x="599.5" y="339.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="602.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (259 samples, 0.13%)</title><rect x="599.5" y="323.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="602.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$601/301086023.get$Lambda (125 samples, 0.06%)</title><rect x="599.5" y="307.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="602.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$601 (125 samples, 0.06%)</title><rect x="599.5" y="291.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="602.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$603/1621229556.get$Lambda (134 samples, 0.07%)</title><rect x="600.2" y="307.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$603 (134 samples, 0.07%)</title><rect x="600.2" y="291.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="603.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/538554855.linkToTargetMethod (368 samples, 0.18%)</title><rect x="601.0" y="339.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="604.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/643338743.invokeStatic (368 samples, 0.18%)</title><rect x="601.0" y="323.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="604.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$587/849392828.get$Lambda (368 samples, 0.18%)</title><rect x="601.0" y="307.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="604.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$587 (368 samples, 0.18%)</title><rect x="601.0" y="291.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="604.0" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (1,903 samples, 0.93%)</title><rect x="603.1" y="339.0" width="10.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="606.1" y="350.0"></text>
</g>
<g>
<title>java/util/Collection.stream (748 samples, 0.36%)</title><rect x="603.1" y="323.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="606.1" y="334.0"></text>
</g>
<g>
<title>java/util/List.spliterator (313 samples, 0.15%)</title><rect x="603.1" y="307.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="606.1" y="318.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (313 samples, 0.15%)</title><rect x="603.1" y="291.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="606.1" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (435 samples, 0.21%)</title><rect x="604.9" y="307.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="607.9" y="318.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (422 samples, 0.21%)</title><rect x="604.9" y="291.0" width="2.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="607.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (607 samples, 0.30%)</title><rect x="607.4" y="323.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (607 samples, 0.30%)</title><rect x="607.4" y="307.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="610.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (607 samples, 0.30%)</title><rect x="607.4" y="291.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="610.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (192 samples, 0.09%)</title><rect x="607.4" y="275.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="610.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (192 samples, 0.09%)</title><rect x="607.4" y="259.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="610.4" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (192 samples, 0.09%)</title><rect x="607.4" y="243.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="610.4" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (192 samples, 0.09%)</title><rect x="607.4" y="227.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="610.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$584/343512251.get (221 samples, 0.11%)</title><rect x="608.5" y="275.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="611.5" y="286.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (221 samples, 0.11%)</title><rect x="608.5" y="259.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="611.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (194 samples, 0.09%)</title><rect x="609.8" y="275.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (194 samples, 0.09%)</title><rect x="609.8" y="259.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="612.8" y="270.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (194 samples, 0.09%)</title><rect x="609.8" y="243.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="612.8" y="254.0"></text>
</g>
<g>
<title>java.util.OptionalLong (194 samples, 0.09%)</title><rect x="609.8" y="227.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="612.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (548 samples, 0.27%)</title><rect x="610.9" y="323.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="613.9" y="334.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (544 samples, 0.26%)</title><rect x="610.9" y="307.0" width="3.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="613.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,267 samples, 0.62%)</title><rect x="614.0" y="339.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="617.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (630 samples, 0.31%)</title><rect x="614.0" y="323.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="617.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (338 samples, 0.16%)</title><rect x="614.0" y="307.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="617.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (292 samples, 0.14%)</title><rect x="616.0" y="307.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="619.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (292 samples, 0.14%)</title><rect x="616.0" y="291.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (292 samples, 0.14%)</title><rect x="616.0" y="275.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="619.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (637 samples, 0.31%)</title><rect x="617.7" y="323.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="620.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (637 samples, 0.31%)</title><rect x="617.7" y="307.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="620.7" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (328 samples, 0.16%)</title><rect x="617.7" y="291.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="620.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (309 samples, 0.15%)</title><rect x="619.6" y="291.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="622.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (309 samples, 0.15%)</title><rect x="619.6" y="275.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="622.6" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (309 samples, 0.15%)</title><rect x="619.6" y="259.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="622.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (170 samples, 0.08%)</title><rect x="621.3" y="339.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="624.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (254 samples, 0.12%)</title><rect x="622.3" y="339.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="625.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (283 samples, 0.14%)</title><rect x="623.8" y="339.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="626.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (160 samples, 0.08%)</title><rect x="625.4" y="339.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.4" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (160 samples, 0.08%)</title><rect x="625.4" y="323.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="628.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5,066 samples, 2.47%)</title><rect x="626.3" y="339.0" width="29.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="629.3" y="350.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$587/849392828.run (5,066 samples, 2.47%)</title><rect x="626.3" y="323.0" width="29.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="629.3" y="334.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (5,066 samples, 2.47%)</title><rect x="626.3" y="307.0" width="29.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="629.3" y="318.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (652 samples, 0.32%)</title><rect x="626.3" y="291.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="629.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (652 samples, 0.32%)</title><rect x="626.3" y="275.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="629.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$589/1973295159.get$Lambda (168 samples, 0.08%)</title><rect x="626.3" y="259.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="629.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$589 (168 samples, 0.08%)</title><rect x="626.3" y="243.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="629.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$592/820455260.get$Lambda (212 samples, 0.10%)</title><rect x="627.3" y="259.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="630.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$592 (212 samples, 0.10%)</title><rect x="627.3" y="243.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="630.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$597/999361704.get$Lambda (272 samples, 0.13%)</title><rect x="628.5" y="259.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="631.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$597 (272 samples, 0.13%)</title><rect x="628.5" y="243.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="631.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (637 samples, 0.31%)</title><rect x="630.1" y="291.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="633.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (637 samples, 0.31%)</title><rect x="630.1" y="275.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="633.1" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (361 samples, 0.18%)</title><rect x="630.1" y="259.0" width="2.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="633.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (276 samples, 0.13%)</title><rect x="632.1" y="259.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (276 samples, 0.13%)</title><rect x="632.1" y="243.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="635.1" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (276 samples, 0.13%)</title><rect x="632.1" y="227.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="635.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (334 samples, 0.16%)</title><rect x="633.7" y="291.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="636.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (294 samples, 0.14%)</title><rect x="635.6" y="291.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="638.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (294 samples, 0.14%)</title><rect x="635.6" y="275.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="638.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (875 samples, 0.43%)</title><rect x="637.3" y="291.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (875 samples, 0.43%)</title><rect x="637.3" y="275.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="640.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (216 samples, 0.11%)</title><rect x="637.3" y="259.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="640.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (216 samples, 0.11%)</title><rect x="637.3" y="243.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="640.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$599/2146609873.get$Lambda (216 samples, 0.11%)</title><rect x="637.3" y="227.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="640.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$599 (216 samples, 0.11%)</title><rect x="637.3" y="211.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="640.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (654 samples, 0.32%)</title><rect x="638.6" y="259.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="641.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (654 samples, 0.32%)</title><rect x="638.6" y="243.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="641.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (654 samples, 0.32%)</title><rect x="638.6" y="227.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="641.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (367 samples, 0.18%)</title><rect x="638.6" y="211.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="641.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (287 samples, 0.14%)</title><rect x="640.7" y="211.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="643.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (287 samples, 0.14%)</title><rect x="640.7" y="195.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.7" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (287 samples, 0.14%)</title><rect x="640.7" y="179.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="643.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (786 samples, 0.38%)</title><rect x="642.4" y="291.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="645.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (786 samples, 0.38%)</title><rect x="642.4" y="275.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="645.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/282265585.invoke (786 samples, 0.38%)</title><rect x="642.4" y="259.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="645.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (786 samples, 0.38%)</title><rect x="642.4" y="243.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="645.4" y="254.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (201 samples, 0.10%)</title><rect x="642.4" y="227.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.4" y="238.0"></text>
</g>
<g>
<title>java.lang.String (201 samples, 0.10%)</title><rect x="642.4" y="211.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="645.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (585 samples, 0.28%)</title><rect x="643.5" y="227.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (585 samples, 0.28%)</title><rect x="643.5" y="211.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="646.5" y="222.0"></text>
</g>
<g>
<title>byte[] (578 samples, 0.28%)</title><rect x="643.5" y="195.0" width="3.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="646.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1,488 samples, 0.72%)</title><rect x="646.9" y="291.0" width="8.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="649.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (492 samples, 0.24%)</title><rect x="646.9" y="275.0" width="2.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="649.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (995 samples, 0.48%)</title><rect x="649.7" y="275.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="652.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (995 samples, 0.48%)</title><rect x="649.7" y="259.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="652.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/282265585.invoke (995 samples, 0.48%)</title><rect x="649.7" y="243.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="652.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (995 samples, 0.48%)</title><rect x="649.7" y="227.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="652.7" y="238.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (214 samples, 0.10%)</title><rect x="649.7" y="211.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="652.7" y="222.0"></text>
</g>
<g>
<title>java.lang.String (214 samples, 0.10%)</title><rect x="649.7" y="195.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="652.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (781 samples, 0.38%)</title><rect x="650.9" y="211.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="653.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (781 samples, 0.38%)</title><rect x="650.9" y="195.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="653.9" y="206.0"></text>
</g>
<g>
<title>byte[] (737 samples, 0.36%)</title><rect x="650.9" y="179.0" width="4.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="653.9" y="190.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.02%)</title><rect x="655.2" y="179.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="658.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$446/989563096.apply (564 samples, 0.27%)</title><rect x="655.4" y="419.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="658.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (564 samples, 0.27%)</title><rect x="655.4" y="403.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (311 samples, 0.15%)</title><rect x="655.4" y="387.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="658.4" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (311 samples, 0.15%)</title><rect x="655.4" y="371.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="658.4" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (311 samples, 0.15%)</title><rect x="655.4" y="355.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="658.4" y="366.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (311 samples, 0.15%)</title><rect x="655.4" y="339.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="658.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (252 samples, 0.12%)</title><rect x="657.2" y="387.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="660.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (252 samples, 0.12%)</title><rect x="657.2" y="371.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="660.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (270 samples, 0.13%)</title><rect x="658.7" y="435.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (270 samples, 0.13%)</title><rect x="658.7" y="419.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$449/843290145.apply (270 samples, 0.13%)</title><rect x="658.7" y="403.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="661.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (270 samples, 0.13%)</title><rect x="658.7" y="387.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="661.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (270 samples, 0.13%)</title><rect x="658.7" y="371.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="661.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (270 samples, 0.13%)</title><rect x="658.7" y="355.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="661.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$553/1767458720.apply (381 samples, 0.19%)</title><rect x="660.2" y="467.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="663.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (381 samples, 0.19%)</title><rect x="660.2" y="451.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="663.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (381 samples, 0.19%)</title><rect x="660.2" y="435.0" width="2.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="663.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (21,213 samples, 10.33%)</title><rect x="662.4" y="579.0" width="121.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="665.4" y="590.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (2,228 samples, 1.08%)</title><rect x="662.4" y="563.0" width="12.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="665.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2,228 samples, 1.08%)</title><rect x="662.4" y="547.0" width="12.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="665.4" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2,228 samples, 1.08%)</title><rect x="662.4" y="531.0" width="12.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="665.4" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2,228 samples, 1.08%)</title><rect x="662.4" y="515.0" width="12.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="665.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,228 samples, 1.08%)</title><rect x="662.4" y="499.0" width="12.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="665.4" y="510.0"></text>
</g>
<g>
<title>byte[] (2,177 samples, 1.06%)</title><rect x="662.4" y="483.0" width="12.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="665.4" y="494.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.02%)</title><rect x="674.9" y="483.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="677.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (1,275 samples, 0.62%)</title><rect x="675.2" y="563.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="678.2" y="574.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (212 samples, 0.10%)</title><rect x="675.2" y="547.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="678.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (211 samples, 0.10%)</title><rect x="676.4" y="547.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (211 samples, 0.10%)</title><rect x="676.4" y="531.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="679.4" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (211 samples, 0.10%)</title><rect x="676.4" y="515.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="679.4" y="526.0"></text>
</g>
<g>
<title>byte[] (211 samples, 0.10%)</title><rect x="676.4" y="499.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="679.4" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (285 samples, 0.14%)</title><rect x="677.6" y="547.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="680.6" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (285 samples, 0.14%)</title><rect x="677.6" y="531.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="680.6" y="542.0"></text>
</g>
<g>
<title>byte[] (285 samples, 0.14%)</title><rect x="677.6" y="515.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="680.6" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (567 samples, 0.28%)</title><rect x="679.3" y="547.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="682.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (567 samples, 0.28%)</title><rect x="679.3" y="531.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="682.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String (287 samples, 0.14%)</title><rect x="679.3" y="515.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="682.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (280 samples, 0.14%)</title><rect x="680.9" y="515.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="683.9" y="526.0"></text>
</g>
<g>
<title>byte[] (280 samples, 0.14%)</title><rect x="680.9" y="499.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="683.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (4,835 samples, 2.35%)</title><rect x="682.5" y="563.0" width="27.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="685.5" y="574.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (4,835 samples, 2.35%)</title><rect x="682.5" y="547.0" width="27.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.5" y="558.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (4,835 samples, 2.35%)</title><rect x="682.5" y="531.0" width="27.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.5" y="542.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (142 samples, 0.07%)</title><rect x="682.5" y="515.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="685.5" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (202 samples, 0.10%)</title><rect x="683.3" y="515.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="686.3" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (438 samples, 0.21%)</title><rect x="684.5" y="515.0" width="2.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="687.5" y="526.0"></text>
</g>
<g>
<title>java.util.TreeSet (139 samples, 0.07%)</title><rect x="687.0" y="515.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="690.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (285 samples, 0.14%)</title><rect x="687.8" y="515.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (285 samples, 0.14%)</title><rect x="687.8" y="499.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="690.8" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.get$Lambda (285 samples, 0.14%)</title><rect x="687.8" y="483.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="690.8" y="494.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$139 (285 samples, 0.14%)</title><rect x="687.8" y="467.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="690.8" y="478.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (309 samples, 0.15%)</title><rect x="689.5" y="515.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="692.5" y="526.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (309 samples, 0.15%)</title><rect x="689.5" y="499.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="692.5" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (2,895 samples, 1.41%)</title><rect x="691.2" y="515.0" width="16.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="694.2" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.accept (2,895 samples, 1.41%)</title><rect x="691.2" y="499.0" width="16.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="694.2" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2,895 samples, 1.41%)</title><rect x="691.2" y="483.0" width="16.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="694.2" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (481 samples, 0.23%)</title><rect x="691.2" y="467.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="694.2" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.accept (481 samples, 0.23%)</title><rect x="691.2" y="451.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="694.2" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (481 samples, 0.23%)</title><rect x="691.2" y="435.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="694.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (481 samples, 0.23%)</title><rect x="691.2" y="419.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="694.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (481 samples, 0.23%)</title><rect x="691.2" y="403.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="694.2" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (481 samples, 0.23%)</title><rect x="691.2" y="387.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="694.2" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (481 samples, 0.23%)</title><rect x="691.2" y="371.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="694.2" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (481 samples, 0.23%)</title><rect x="691.2" y="355.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="694.2" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (472 samples, 0.23%)</title><rect x="691.2" y="339.0" width="2.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="694.2" y="350.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,331 samples, 0.65%)</title><rect x="694.0" y="467.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="697.0" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,331 samples, 0.65%)</title><rect x="694.0" y="451.0" width="7.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.0" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (659 samples, 0.32%)</title><rect x="694.0" y="435.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="697.0" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (659 samples, 0.32%)</title><rect x="694.0" y="419.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="697.0" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (659 samples, 0.32%)</title><rect x="694.0" y="403.0" width="3.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="697.0" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (672 samples, 0.33%)</title><rect x="697.8" y="435.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="700.8" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (672 samples, 0.33%)</title><rect x="697.8" y="419.0" width="3.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="700.8" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,083 samples, 0.53%)</title><rect x="701.6" y="467.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="704.6" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,083 samples, 0.53%)</title><rect x="701.6" y="451.0" width="6.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="704.6" y="462.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (425 samples, 0.21%)</title><rect x="707.9" y="515.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="710.9" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (425 samples, 0.21%)</title><rect x="707.9" y="499.0" width="2.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="710.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (12,875 samples, 6.27%)</title><rect x="710.3" y="563.0" width="74.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="713.3" y="574.0">jdk/inte..</text>
</g>
<g>
<title>java.lang.StringBuilder (637 samples, 0.31%)</title><rect x="710.3" y="547.0" width="3.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="713.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (867 samples, 0.42%)</title><rect x="714.0" y="547.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="717.0" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (867 samples, 0.42%)</title><rect x="714.0" y="531.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.0" y="542.0"></text>
</g>
<g>
<title>byte[] (867 samples, 0.42%)</title><rect x="714.0" y="515.0" width="4.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="717.0" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,827 samples, 0.89%)</title><rect x="718.9" y="547.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="721.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,827 samples, 0.89%)</title><rect x="718.9" y="531.0" width="10.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="721.9" y="542.0"></text>
</g>
<g>
<title>java.lang.String (612 samples, 0.30%)</title><rect x="718.9" y="515.0" width="3.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="721.9" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,215 samples, 0.59%)</title><rect x="722.5" y="515.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="725.5" y="526.0"></text>
</g>
<g>
<title>byte[] (1,209 samples, 0.59%)</title><rect x="722.5" y="499.0" width="6.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="725.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (9,544 samples, 4.65%)</title><rect x="729.4" y="547.0" width="54.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="732.4" y="558.0">jdk/i..</text>
</g>
<g>
<title>java/lang/String.substring (3,006 samples, 1.46%)</title><rect x="729.4" y="531.0" width="17.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="732.4" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,006 samples, 1.46%)</title><rect x="729.4" y="515.0" width="17.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="732.4" y="526.0"></text>
</g>
<g>
<title>java.lang.String (1,312 samples, 0.64%)</title><rect x="729.4" y="499.0" width="7.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="732.4" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,694 samples, 0.82%)</title><rect x="737.0" y="499.0" width="9.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="740.0" y="510.0"></text>
</g>
<g>
<title>byte[] (1,694 samples, 0.82%)</title><rect x="737.0" y="483.0" width="9.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="740.0" y="494.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1,448 samples, 0.71%)</title><rect x="746.7" y="531.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="749.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1,448 samples, 0.71%)</title><rect x="746.7" y="515.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="749.7" y="526.0"></text>
</g>
<g>
<title>byte[] (814 samples, 0.40%)</title><rect x="746.7" y="499.0" width="4.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="749.7" y="510.0"></text>
</g>
<g>
<title>java.lang.String (634 samples, 0.31%)</title><rect x="751.4" y="499.0" width="3.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="754.4" y="510.0"></text>
</g>
<g>
<title>java/lang/String.trim (1,394 samples, 0.68%)</title><rect x="755.0" y="531.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="758.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1,394 samples, 0.68%)</title><rect x="755.0" y="515.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="758.0" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,394 samples, 0.68%)</title><rect x="755.0" y="499.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="758.0" y="510.0"></text>
</g>
<g>
<title>java.lang.String (614 samples, 0.30%)</title><rect x="755.0" y="483.0" width="3.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="758.0" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (780 samples, 0.38%)</title><rect x="758.6" y="483.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="761.6" y="494.0"></text>
</g>
<g>
<title>byte[] (780 samples, 0.38%)</title><rect x="758.6" y="467.0" width="4.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="761.6" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,501 samples, 0.73%)</title><rect x="763.0" y="531.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="766.0" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,501 samples, 0.73%)</title><rect x="763.0" y="515.0" width="8.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,501 samples, 0.73%)</title><rect x="763.0" y="499.0" width="8.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="766.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,501 samples, 0.73%)</title><rect x="763.0" y="483.0" width="8.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="766.0" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,501 samples, 0.73%)</title><rect x="763.0" y="467.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="766.0" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,494 samples, 0.73%)</title><rect x="763.0" y="451.0" width="8.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="766.0" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2,195 samples, 1.07%)</title><rect x="771.7" y="531.0" width="12.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="774.7" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (875 samples, 0.43%)</title><rect x="771.7" y="515.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="774.7" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (875 samples, 0.43%)</title><rect x="771.7" y="499.0" width="5.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="774.7" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (673 samples, 0.33%)</title><rect x="776.7" y="515.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="779.7" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (645 samples, 0.31%)</title><rect x="776.7" y="499.0" width="3.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="779.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$577/496477348.apply (647 samples, 0.32%)</title><rect x="780.6" y="515.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="783.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (647 samples, 0.32%)</title><rect x="780.6" y="499.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="783.6" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (647 samples, 0.32%)</title><rect x="780.6" y="483.0" width="3.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="783.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (7,087 samples, 3.45%)</title><rect x="784.3" y="691.0" width="40.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="787.3" y="702.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7,087 samples, 3.45%)</title><rect x="784.3" y="675.0" width="40.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="787.3" y="686.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (7,087 samples, 3.45%)</title><rect x="784.3" y="659.0" width="40.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="787.3" y="670.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.run (7,087 samples, 3.45%)</title><rect x="784.3" y="643.0" width="40.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="787.3" y="654.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (7,087 samples, 3.45%)</title><rect x="784.3" y="627.0" width="40.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="787.3" y="638.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (977 samples, 0.48%)</title><rect x="784.3" y="611.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="787.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (375 samples, 0.18%)</title><rect x="784.3" y="595.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="787.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (375 samples, 0.18%)</title><rect x="784.3" y="579.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="787.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$386/1151365282.get$Lambda (142 samples, 0.07%)</title><rect x="784.3" y="563.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="787.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$386 (142 samples, 0.07%)</title><rect x="784.3" y="547.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="787.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$394/574621129.get$Lambda (233 samples, 0.11%)</title><rect x="785.1" y="563.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="788.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$394 (233 samples, 0.11%)</title><rect x="785.1" y="547.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="788.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (255 samples, 0.12%)</title><rect x="786.4" y="595.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="789.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (347 samples, 0.17%)</title><rect x="787.9" y="595.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="790.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (347 samples, 0.17%)</title><rect x="787.9" y="579.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="790.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (141 samples, 0.07%)</title><rect x="787.9" y="563.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="790.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (206 samples, 0.10%)</title><rect x="788.7" y="563.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="791.7" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (206 samples, 0.10%)</title><rect x="788.7" y="547.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="791.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (6,030 samples, 2.94%)</title><rect x="789.9" y="611.0" width="34.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="792.9" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (6,030 samples, 2.94%)</title><rect x="789.9" y="595.0" width="34.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="792.9" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (6,030 samples, 2.94%)</title><rect x="789.9" y="579.0" width="34.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.9" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (6,030 samples, 2.94%)</title><rect x="789.9" y="563.0" width="34.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="792.9" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (6,030 samples, 2.94%)</title><rect x="789.9" y="547.0" width="34.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="792.9" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (6,030 samples, 2.94%)</title><rect x="789.9" y="531.0" width="34.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="792.9" y="542.0">jd..</text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (437 samples, 0.21%)</title><rect x="789.9" y="515.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="792.9" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (437 samples, 0.21%)</title><rect x="789.9" y="499.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="792.9" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (437 samples, 0.21%)</title><rect x="789.9" y="483.0" width="2.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="792.9" y="494.0"></text>
</g>
<g>
<title>java/util/List.of (199 samples, 0.10%)</title><rect x="792.4" y="515.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.4" y="526.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (199 samples, 0.10%)</title><rect x="792.4" y="499.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="795.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$589/1973295159.run (3,948 samples, 1.92%)</title><rect x="793.6" y="515.0" width="22.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="796.6" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (3,948 samples, 1.92%)</title><rect x="793.6" y="499.0" width="22.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="796.6" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (3,948 samples, 1.92%)</title><rect x="793.6" y="483.0" width="22.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="796.6" y="494.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1,131 samples, 0.55%)</title><rect x="793.6" y="467.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="796.6" y="478.0"></text>
</g>
<g>
<title>java/util/Collection.stream (762 samples, 0.37%)</title><rect x="793.6" y="451.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="796.6" y="462.0"></text>
</g>
<g>
<title>java/util/List.spliterator (259 samples, 0.13%)</title><rect x="793.6" y="435.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="796.6" y="446.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (259 samples, 0.13%)</title><rect x="793.6" y="419.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="796.6" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (503 samples, 0.24%)</title><rect x="795.0" y="435.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="798.0" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (503 samples, 0.24%)</title><rect x="795.0" y="419.0" width="2.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="798.0" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (369 samples, 0.18%)</title><rect x="797.9" y="451.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="800.9" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (369 samples, 0.18%)</title><rect x="797.9" y="435.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="800.9" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (369 samples, 0.18%)</title><rect x="797.9" y="419.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="800.9" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$67/2082781203.get (249 samples, 0.12%)</title><rect x="797.9" y="403.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="800.9" y="414.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (249 samples, 0.12%)</title><rect x="797.9" y="387.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="800.9" y="398.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (120 samples, 0.06%)</title><rect x="799.4" y="403.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="802.4" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (120 samples, 0.06%)</title><rect x="799.4" y="387.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="802.4" y="398.0"></text>
</g>
<g>
<title>java/util/Optional.of (120 samples, 0.06%)</title><rect x="799.4" y="371.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="802.4" y="382.0"></text>
</g>
<g>
<title>java.util.Optional (120 samples, 0.06%)</title><rect x="799.4" y="355.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="802.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2,817 samples, 1.37%)</title><rect x="800.1" y="467.0" width="16.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="803.1" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.now (218 samples, 0.11%)</title><rect x="800.1" y="451.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="803.1" y="462.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (218 samples, 0.11%)</title><rect x="800.1" y="435.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="803.1" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (218 samples, 0.11%)</title><rect x="800.1" y="419.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="803.1" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.create (218 samples, 0.11%)</title><rect x="800.1" y="403.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="803.1" y="414.0"></text>
</g>
<g>
<title>java.time.Instant (218 samples, 0.11%)</title><rect x="800.1" y="387.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="803.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2,599 samples, 1.27%)</title><rect x="801.3" y="451.0" width="14.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="804.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1,128 samples, 0.55%)</title><rect x="801.3" y="435.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="804.3" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (197 samples, 0.10%)</title><rect x="801.3" y="419.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="804.3" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (197 samples, 0.10%)</title><rect x="801.3" y="403.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="804.3" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.plus (197 samples, 0.10%)</title><rect x="801.3" y="387.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="804.3" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (197 samples, 0.10%)</title><rect x="801.3" y="371.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="804.3" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.create (197 samples, 0.10%)</title><rect x="801.3" y="355.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="804.3" y="366.0"></text>
</g>
<g>
<title>java.time.Instant (197 samples, 0.10%)</title><rect x="801.3" y="339.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="804.3" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (231 samples, 0.11%)</title><rect x="802.4" y="419.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="805.4" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (231 samples, 0.11%)</title><rect x="802.4" y="403.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="805.4" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.plus (231 samples, 0.11%)</title><rect x="802.4" y="387.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="805.4" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (231 samples, 0.11%)</title><rect x="802.4" y="371.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="805.4" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.create (231 samples, 0.11%)</title><rect x="802.4" y="355.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="805.4" y="366.0"></text>
</g>
<g>
<title>java.time.Instant (231 samples, 0.11%)</title><rect x="802.4" y="339.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="805.4" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (275 samples, 0.13%)</title><rect x="803.8" y="419.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="806.8" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (275 samples, 0.13%)</title><rect x="803.8" y="403.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="806.8" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (275 samples, 0.13%)</title><rect x="803.8" y="387.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="806.8" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (197 samples, 0.10%)</title><rect x="805.4" y="419.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="808.4" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (197 samples, 0.10%)</title><rect x="805.4" y="403.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="808.4" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (197 samples, 0.10%)</title><rect x="805.4" y="387.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="808.4" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (226 samples, 0.11%)</title><rect x="806.5" y="419.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="809.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (585 samples, 0.28%)</title><rect x="807.8" y="435.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="810.8" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.get (205 samples, 0.10%)</title><rect x="807.8" y="419.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="810.8" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (205 samples, 0.10%)</title><rect x="807.8" y="403.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="810.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (205 samples, 0.10%)</title><rect x="807.8" y="387.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="810.8" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (205 samples, 0.10%)</title><rect x="807.8" y="371.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="810.8" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (177 samples, 0.09%)</title><rect x="809.0" y="419.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="812.0" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (177 samples, 0.09%)</title><rect x="809.0" y="403.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="812.0" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (177 samples, 0.09%)</title><rect x="809.0" y="387.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="812.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (203 samples, 0.10%)</title><rect x="810.0" y="419.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="813.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (203 samples, 0.10%)</title><rect x="810.0" y="403.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="813.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (886 samples, 0.43%)</title><rect x="811.1" y="435.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="814.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (204 samples, 0.10%)</title><rect x="811.1" y="419.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="814.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (682 samples, 0.33%)</title><rect x="812.3" y="419.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="815.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (228 samples, 0.11%)</title><rect x="812.3" y="403.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="815.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (228 samples, 0.11%)</title><rect x="812.3" y="387.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="815.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (228 samples, 0.11%)</title><rect x="812.3" y="371.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="815.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (228 samples, 0.11%)</title><rect x="812.3" y="355.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="815.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (454 samples, 0.22%)</title><rect x="813.6" y="403.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="816.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (454 samples, 0.22%)</title><rect x="813.6" y="387.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="816.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (329 samples, 0.16%)</title><rect x="813.6" y="371.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="816.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (125 samples, 0.06%)</title><rect x="815.5" y="371.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="818.5" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (125 samples, 0.06%)</title><rect x="815.5" y="355.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="818.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (735 samples, 0.36%)</title><rect x="816.2" y="515.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="819.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (735 samples, 0.36%)</title><rect x="816.2" y="499.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (735 samples, 0.36%)</title><rect x="816.2" y="483.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="819.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (525 samples, 0.26%)</title><rect x="816.2" y="467.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="819.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (525 samples, 0.26%)</title><rect x="816.2" y="451.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="819.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (525 samples, 0.26%)</title><rect x="816.2" y="435.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="819.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (525 samples, 0.26%)</title><rect x="816.2" y="419.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="819.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$601/301086023.accept (525 samples, 0.26%)</title><rect x="816.2" y="403.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="819.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (525 samples, 0.26%)</title><rect x="816.2" y="387.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="819.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (525 samples, 0.26%)</title><rect x="816.2" y="371.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="819.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (525 samples, 0.26%)</title><rect x="816.2" y="355.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="819.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (525 samples, 0.26%)</title><rect x="816.2" y="339.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$607/831886457.apply (525 samples, 0.26%)</title><rect x="816.2" y="323.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (525 samples, 0.26%)</title><rect x="816.2" y="307.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="819.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (510 samples, 0.25%)</title><rect x="816.2" y="291.0" width="3.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="819.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (210 samples, 0.10%)</title><rect x="819.3" y="467.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="822.3" y="478.0"></text>
</g>
<g>
<title>byte[] (210 samples, 0.10%)</title><rect x="819.3" y="451.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="822.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (711 samples, 0.35%)</title><rect x="820.5" y="515.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="823.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (711 samples, 0.35%)</title><rect x="820.5" y="499.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="823.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (711 samples, 0.35%)</title><rect x="820.5" y="483.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="823.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (711 samples, 0.35%)</title><rect x="820.5" y="467.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="823.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (711 samples, 0.35%)</title><rect x="820.5" y="451.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.5" y="462.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (197 samples, 0.10%)</title><rect x="820.5" y="435.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="823.5" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (197 samples, 0.10%)</title><rect x="820.5" y="419.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="823.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (514 samples, 0.25%)</title><rect x="821.6" y="435.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="824.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (514 samples, 0.25%)</title><rect x="821.6" y="419.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="824.6" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (513 samples, 0.25%)</title><rect x="821.6" y="403.0" width="2.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="824.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (80 samples, 0.04%)</title><rect x="824.5" y="611.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="827.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (80 samples, 0.04%)</title><rect x="824.5" y="595.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="827.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (80 samples, 0.04%)</title><rect x="824.5" y="579.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="827.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (80 samples, 0.04%)</title><rect x="824.5" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="827.5" y="574.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (148 samples, 0.07%)</title><rect x="825.0" y="723.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="828.0" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (148 samples, 0.07%)</title><rect x="825.0" y="707.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="828.0" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$649/1665945264.run (148 samples, 0.07%)</title><rect x="825.0" y="691.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="828.0" y="702.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (148 samples, 0.07%)</title><rect x="825.0" y="675.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="828.0" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (148 samples, 0.07%)</title><rect x="825.0" y="659.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.0" y="670.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (148 samples, 0.07%)</title><rect x="825.0" y="643.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="828.0" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (118 samples, 0.06%)</title><rect x="825.2" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="828.2" y="638.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (60 samples, 0.03%)</title><rect x="825.2" y="611.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="828.2" y="622.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (60 samples, 0.03%)</title><rect x="825.2" y="595.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.2" y="606.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (60 samples, 0.03%)</title><rect x="825.2" y="579.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="828.2" y="590.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (60 samples, 0.03%)</title><rect x="825.2" y="563.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="828.2" y="574.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getResultStream (60 samples, 0.03%)</title><rect x="825.2" y="547.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="828.2" y="558.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getOutputStream (60 samples, 0.03%)</title><rect x="825.2" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="828.2" y="542.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionOutputStream.&lt;init&gt; (60 samples, 0.03%)</title><rect x="825.2" y="515.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="828.2" y="526.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (60 samples, 0.03%)</title><rect x="825.2" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="828.2" y="510.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalOutputStream.&lt;init&gt; (60 samples, 0.03%)</title><rect x="825.2" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="828.2" y="494.0"></text>
</g>
<g>
<title>java/io/ObjectOutputStream.&lt;init&gt; (60 samples, 0.03%)</title><rect x="825.2" y="467.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="828.2" y="478.0"></text>
</g>
<g>
<title>sun/rmi/transport/StreamRemoteCall.getInputStream (58 samples, 0.03%)</title><rect x="825.5" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="828.5" y="622.0"></text>
</g>
<g>
<title>sun/rmi/transport/ConnectionInputStream.&lt;init&gt; (58 samples, 0.03%)</title><rect x="825.5" y="595.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.5" y="606.0"></text>
</g>
<g>
<title>sun/rmi/server/MarshalInputStream.&lt;init&gt; (58 samples, 0.03%)</title><rect x="825.5" y="579.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="828.5" y="590.0"></text>
</g>
<g>
<title>java/io/ObjectInputStream.&lt;init&gt; (58 samples, 0.03%)</title><rect x="825.5" y="563.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (27,609 samples, 13.44%)</title><rect x="825.9" y="771.0" width="158.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="828.9" y="782.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (27,609 samples, 13.44%)</title><rect x="825.9" y="755.0" width="158.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="828.9" y="766.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (27,607 samples, 13.44%)</title><rect x="825.9" y="739.0" width="158.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="828.9" y="750.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (27,606 samples, 13.44%)</title><rect x="825.9" y="723.0" width="158.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="828.9" y="734.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (27,606 samples, 13.44%)</title><rect x="825.9" y="707.0" width="158.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.9" y="718.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (27,606 samples, 13.44%)</title><rect x="825.9" y="691.0" width="158.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="828.9" y="702.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (27,606 samples, 13.44%)</title><rect x="825.9" y="675.0" width="158.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="828.9" y="686.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (27,606 samples, 13.44%)</title><rect x="825.9" y="659.0" width="158.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="828.9" y="670.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (27,606 samples, 13.44%)</title><rect x="825.9" y="643.0" width="158.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="828.9" y="654.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (13,932 samples, 6.78%)</title><rect x="825.9" y="627.0" width="80.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="828.9" y="638.0">java/util..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpServiceClient$$Lambda$668/1298391770.apply (13,932 samples, 6.78%)</title><rect x="825.9" y="611.0" width="80.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="828.9" y="622.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpServiceClient.toValue (13,932 samples, 6.78%)</title><rect x="825.9" y="595.0" width="80.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="828.9" y="606.0">ru/mail/p..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (11,891 samples, 5.79%)</title><rect x="825.9" y="579.0" width="68.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="828.9" y="590.0">java/ne..</text>
</g>
<g>
<title>java/util/Collection.stream (4,721 samples, 2.30%)</title><rect x="825.9" y="563.0" width="27.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="828.9" y="574.0">j..</text>
</g>
<g>
<title>java/util/List.spliterator (1,901 samples, 0.93%)</title><rect x="825.9" y="547.0" width="10.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="828.9" y="558.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1,901 samples, 0.93%)</title><rect x="825.9" y="531.0" width="10.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="828.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2,820 samples, 1.37%)</title><rect x="836.8" y="547.0" width="16.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.8" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2,797 samples, 1.36%)</title><rect x="836.8" y="531.0" width="16.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="839.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (4,641 samples, 2.26%)</title><rect x="853.0" y="563.0" width="26.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.0" y="574.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4,641 samples, 2.26%)</title><rect x="853.0" y="547.0" width="26.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="856.0" y="558.0">j..</text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4,641 samples, 2.26%)</title><rect x="853.0" y="531.0" width="26.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="856.0" y="542.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2,814 samples, 1.37%)</title><rect x="853.0" y="515.0" width="16.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="856.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1,978 samples, 0.96%)</title><rect x="853.0" y="499.0" width="11.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="856.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1,978 samples, 0.96%)</title><rect x="853.0" y="483.0" width="11.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="856.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1,978 samples, 0.96%)</title><rect x="853.0" y="467.0" width="11.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="856.0" y="478.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (1,978 samples, 0.96%)</title><rect x="853.0" y="451.0" width="11.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="856.0" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (1,978 samples, 0.96%)</title><rect x="853.0" y="435.0" width="11.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="856.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$578/936377716.applyAsLong (1,085 samples, 0.53%)</title><rect x="853.0" y="419.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="856.0" y="430.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1,085 samples, 0.53%)</title><rect x="853.0" y="403.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="856.0" y="414.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1,085 samples, 0.53%)</title><rect x="853.0" y="387.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="856.0" y="398.0"></text>
</g>
<g>
<title>java.lang.Long (1,085 samples, 0.53%)</title><rect x="853.0" y="371.0" width="6.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="856.0" y="382.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.accept (893 samples, 0.43%)</title><rect x="859.2" y="419.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="862.2" y="430.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (893 samples, 0.43%)</title><rect x="859.2" y="403.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="862.2" y="414.0"></text>
</g>
<g>
<title>java.lang.Long (893 samples, 0.43%)</title><rect x="859.2" y="387.0" width="5.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="862.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (836 samples, 0.41%)</title><rect x="864.4" y="499.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="867.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (836 samples, 0.41%)</title><rect x="864.4" y="483.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="867.4" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (836 samples, 0.41%)</title><rect x="864.4" y="467.0" width="4.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="867.4" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$584/343512251.get (998 samples, 0.49%)</title><rect x="869.2" y="515.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="872.2" y="526.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (998 samples, 0.49%)</title><rect x="869.2" y="499.0" width="5.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="872.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (829 samples, 0.40%)</title><rect x="874.9" y="515.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="877.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (829 samples, 0.40%)</title><rect x="874.9" y="499.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="877.9" y="510.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (829 samples, 0.40%)</title><rect x="874.9" y="483.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="877.9" y="494.0"></text>
</g>
<g>
<title>java.util.OptionalLong (829 samples, 0.40%)</title><rect x="874.9" y="467.0" width="4.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="877.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (2,529 samples, 1.23%)</title><rect x="879.7" y="563.0" width="14.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="882.7" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (2,335 samples, 1.14%)</title><rect x="879.7" y="547.0" width="13.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="882.7" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (194 samples, 0.09%)</title><rect x="893.1" y="547.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="896.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/Value.present (2,041 samples, 0.99%)</title><rect x="894.2" y="579.0" width="11.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="897.2" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.vaddya.Value (1,277 samples, 0.62%)</title><rect x="894.2" y="563.0" width="7.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="897.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/Value.&lt;init&gt; (764 samples, 0.37%)</title><rect x="901.5" y="563.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="904.5" y="574.0"></text>
</g>
<g>
<title>byte[] (764 samples, 0.37%)</title><rect x="901.5" y="547.0" width="4.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="904.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (13,674 samples, 6.66%)</title><rect x="905.9" y="627.0" width="78.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="908.9" y="638.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (13,674 samples, 6.66%)</title><rect x="905.9" y="611.0" width="78.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="908.9" y="622.0">java/util..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils$$Lambda$170/1308121008.accept (13,674 samples, 6.66%)</title><rect x="905.9" y="595.0" width="78.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="908.9" y="606.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils.lambda$firstN$0 (13,674 samples, 6.66%)</title><rect x="905.9" y="579.0" width="78.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="908.9" y="590.0">ru/mail/p..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (13,673 samples, 6.66%)</title><rect x="905.9" y="563.0" width="78.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="908.9" y="574.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13,673 samples, 6.66%)</title><rect x="905.9" y="547.0" width="78.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="908.9" y="558.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (2,932 samples, 1.43%)</title><rect x="905.9" y="531.0" width="16.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$673/392655303.accept (2,932 samples, 1.43%)</title><rect x="905.9" y="515.0" width="16.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="908.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ServiceSession.send (2,932 samples, 1.43%)</title><rect x="905.9" y="499.0" width="16.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="908.9" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,932 samples, 1.43%)</title><rect x="905.9" y="483.0" width="16.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="908.9" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,932 samples, 1.43%)</title><rect x="905.9" y="467.0" width="16.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="908.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2,253 samples, 1.10%)</title><rect x="905.9" y="451.0" width="13.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="908.9" y="462.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2,253 samples, 1.10%)</title><rect x="905.9" y="435.0" width="13.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.9" y="446.0"></text>
</g>
<g>
<title>byte[] (1,360 samples, 0.66%)</title><rect x="905.9" y="419.0" width="7.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="908.9" y="430.0"></text>
</g>
<g>
<title>byte[] (893 samples, 0.43%)</title><rect x="913.7" y="419.0" width="5.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="916.7" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (679 samples, 0.33%)</title><rect x="918.9" y="451.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="921.9" y="462.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (679 samples, 0.33%)</title><rect x="918.9" y="435.0" width="3.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="921.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (10,741 samples, 5.23%)</title><rect x="922.8" y="531.0" width="61.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="925.8" y="542.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (10,741 samples, 5.23%)</title><rect x="922.8" y="515.0" width="61.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="925.8" y="526.0">java/u..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$671/445154046.apply (10,741 samples, 5.23%)</title><rect x="922.8" y="499.0" width="61.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="925.8" y="510.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.lambda$scheduleGetEntity$4 (10,741 samples, 5.23%)</title><rect x="922.8" y="483.0" width="61.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="925.8" y="494.0">ru/mai..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (259 samples, 0.13%)</title><rect x="922.8" y="467.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="925.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (259 samples, 0.13%)</title><rect x="922.8" y="451.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="925.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$677/492662541.get$Lambda (259 samples, 0.13%)</title><rect x="922.8" y="435.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="925.8" y="446.0"></text>
</g>
<g>
<title>ru.mail.polis.service.vaddya.HttpService$$Lambda$677 (259 samples, 0.13%)</title><rect x="922.8" y="419.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="925.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.handleResponses (10,482 samples, 5.10%)</title><rect x="924.3" y="467.0" width="60.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="927.3" y="478.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$677/492662541.apply (10,482 samples, 5.10%)</title><rect x="924.3" y="451.0" width="60.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="927.3" y="462.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.lambda$scheduleGetEntity$3 (10,482 samples, 5.10%)</title><rect x="924.3" y="435.0" width="60.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="927.3" y="446.0">ru/mai..</text>
</g>
<g>
<title>java/lang/Integer.valueOf (328 samples, 0.16%)</title><rect x="924.3" y="419.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="927.3" y="430.0"></text>
</g>
<g>
<title>java.lang.Integer (328 samples, 0.16%)</title><rect x="924.3" y="403.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="927.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ResponseUtils.valueToResponse (4,192 samples, 2.04%)</title><rect x="926.1" y="419.0" width="24.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="929.1" y="430.0">r..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1473981203.linkToTargetMethod (1,448 samples, 0.71%)</title><rect x="926.1" y="403.0" width="8.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="929.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/802095122.invoke (1,448 samples, 0.71%)</title><rect x="926.1" y="387.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="929.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,448 samples, 0.71%)</title><rect x="926.1" y="371.0" width="8.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="929.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (436 samples, 0.21%)</title><rect x="926.1" y="355.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="929.1" y="366.0"></text>
</g>
<g>
<title>java.lang.String (436 samples, 0.21%)</title><rect x="926.1" y="339.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="929.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,012 samples, 0.49%)</title><rect x="928.6" y="355.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="931.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,012 samples, 0.49%)</title><rect x="928.6" y="339.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="931.6" y="350.0"></text>
</g>
<g>
<title>byte[] (1,000 samples, 0.49%)</title><rect x="928.6" y="323.0" width="5.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="931.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (2,269 samples, 1.10%)</title><rect x="934.5" y="403.0" width="13.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="937.5" y="414.0"></text>
</g>
<g>
<title>one.nio.http.Response (405 samples, 0.20%)</title><rect x="934.5" y="387.0" width="2.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="937.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,864 samples, 0.91%)</title><rect x="936.8" y="387.0" width="10.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="939.8" y="398.0"></text>
</g>
<g>
<title>byte[] (716 samples, 0.35%)</title><rect x="936.8" y="371.0" width="4.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="939.8" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (611 samples, 0.30%)</title><rect x="940.9" y="371.0" width="3.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="943.9" y="382.0"></text>
</g>
<g>
<title>java.lang.String (537 samples, 0.26%)</title><rect x="944.4" y="371.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="947.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/Value.data (475 samples, 0.23%)</title><rect x="947.5" y="403.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="950.5" y="414.0"></text>
</g>
<g>
<title>byte[] (475 samples, 0.23%)</title><rect x="947.5" y="387.0" width="2.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="950.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/Value.merge (5,962 samples, 2.90%)</title><rect x="950.2" y="419.0" width="34.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="953.2" y="430.0">ru..</text>
</g>
<g>
<title>java/util/Collection.stream (1,604 samples, 0.78%)</title><rect x="950.2" y="403.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="953.2" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (598 samples, 0.29%)</title><rect x="950.2" y="387.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.2" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (598 samples, 0.29%)</title><rect x="950.2" y="371.0" width="3.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="953.2" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1,006 samples, 0.49%)</title><rect x="953.7" y="387.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="956.7" y="398.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (998 samples, 0.49%)</title><rect x="953.7" y="371.0" width="5.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="956.7" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.comparing (338 samples, 0.16%)</title><rect x="959.4" y="403.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="962.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (338 samples, 0.16%)</title><rect x="959.4" y="387.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="962.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (338 samples, 0.16%)</title><rect x="959.4" y="371.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="962.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$134/462652533.get$Lambda (338 samples, 0.16%)</title><rect x="959.4" y="355.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="962.4" y="366.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$134 (338 samples, 0.16%)</title><rect x="959.4" y="339.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="962.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1,211 samples, 0.59%)</title><rect x="961.4" y="403.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="964.4" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (1,116 samples, 0.54%)</title><rect x="961.4" y="387.0" width="6.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="964.4" y="398.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (95 samples, 0.05%)</title><rect x="967.8" y="387.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="970.8" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (2,809 samples, 1.37%)</title><rect x="968.3" y="403.0" width="16.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="971.3" y="414.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.maxBy (263 samples, 0.13%)</title><rect x="968.3" y="387.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="971.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (263 samples, 0.13%)</title><rect x="968.3" y="371.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="971.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (263 samples, 0.13%)</title><rect x="968.3" y="355.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="971.3" y="366.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$683/344786003.get$Lambda (263 samples, 0.13%)</title><rect x="968.3" y="339.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="971.3" y="350.0"></text>
</g>
<g>
<title>java.util.function.BinaryOperator$$Lambda$683 (263 samples, 0.13%)</title><rect x="968.3" y="323.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="971.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (2,546 samples, 1.24%)</title><rect x="969.9" y="387.0" width="14.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="972.9" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2,107 samples, 1.03%)</title><rect x="969.9" y="371.0" width="12.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="972.9" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (2,107 samples, 1.03%)</title><rect x="969.9" y="355.0" width="12.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="972.9" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1,312 samples, 0.64%)</title><rect x="969.9" y="339.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="972.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (934 samples, 0.45%)</title><rect x="969.9" y="323.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="972.9" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (934 samples, 0.45%)</title><rect x="969.9" y="307.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="972.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (934 samples, 0.45%)</title><rect x="969.9" y="291.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="972.9" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (934 samples, 0.45%)</title><rect x="969.9" y="275.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="972.9" y="286.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$683/344786003.apply (934 samples, 0.45%)</title><rect x="969.9" y="259.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="972.9" y="270.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (934 samples, 0.45%)</title><rect x="969.9" y="243.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="972.9" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$134/462652533.compare (934 samples, 0.45%)</title><rect x="969.9" y="227.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="972.9" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (934 samples, 0.45%)</title><rect x="969.9" y="211.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="972.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/Value$$Lambda$682/1368363014.apply (934 samples, 0.45%)</title><rect x="969.9" y="195.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="972.9" y="206.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (934 samples, 0.45%)</title><rect x="969.9" y="179.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="972.9" y="190.0"></text>
</g>
<g>
<title>java.lang.Long (934 samples, 0.45%)</title><rect x="969.9" y="163.0" width="5.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="972.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (378 samples, 0.18%)</title><rect x="975.2" y="323.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="978.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (378 samples, 0.18%)</title><rect x="975.2" y="307.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="978.2" y="318.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (378 samples, 0.18%)</title><rect x="975.2" y="291.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="978.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (524 samples, 0.26%)</title><rect x="977.4" y="339.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="980.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (524 samples, 0.26%)</title><rect x="977.4" y="323.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="980.4" y="334.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2ReducingSink (524 samples, 0.26%)</title><rect x="977.4" y="307.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="980.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (271 samples, 0.13%)</title><rect x="980.4" y="339.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="983.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (271 samples, 0.13%)</title><rect x="980.4" y="323.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="983.4" y="334.0"></text>
</g>
<g>
<title>java/util/Optional.of (271 samples, 0.13%)</title><rect x="980.4" y="307.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="983.4" y="318.0"></text>
</g>
<g>
<title>java.util.Optional (271 samples, 0.13%)</title><rect x="980.4" y="291.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="983.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (439 samples, 0.21%)</title><rect x="982.0" y="371.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="985.0" y="382.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2 (439 samples, 0.21%)</title><rect x="982.0" y="355.0" width="2.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="985.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (7,236 samples, 3.52%)</title><rect x="984.5" y="771.0" width="41.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="987.5" y="782.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (195 samples, 0.09%)</title><rect x="984.5" y="755.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="987.5" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (195 samples, 0.09%)</title><rect x="984.5" y="739.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="987.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$464/438529285.get$Lambda (89 samples, 0.04%)</title><rect x="984.5" y="723.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="987.5" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$464 (89 samples, 0.04%)</title><rect x="984.5" y="707.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="987.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$486/539832601.get$Lambda (73 samples, 0.04%)</title><rect x="985.2" y="723.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="988.2" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$486 (73 samples, 0.04%)</title><rect x="985.2" y="707.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="988.2" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/501107890.linkToTargetMethod (131 samples, 0.06%)</title><rect x="985.6" y="755.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="988.6" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (131 samples, 0.06%)</title><rect x="985.6" y="739.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="988.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$465/316465657.get$Lambda (131 samples, 0.06%)</title><rect x="985.6" y="723.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="988.6" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$465 (131 samples, 0.06%)</title><rect x="985.6" y="707.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="988.6" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,618 samples, 0.79%)</title><rect x="986.4" y="755.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="989.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$466/42157458.accept (1,390 samples, 0.68%)</title><rect x="986.4" y="739.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="989.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (1,390 samples, 0.68%)</title><rect x="986.4" y="723.0" width="8.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="989.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (1,390 samples, 0.68%)</title><rect x="986.4" y="707.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="989.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (1,390 samples, 0.68%)</title><rect x="986.4" y="691.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="989.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (1,390 samples, 0.68%)</title><rect x="986.4" y="675.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="989.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (1,390 samples, 0.68%)</title><rect x="986.4" y="659.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="989.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,390 samples, 0.68%)</title><rect x="986.4" y="643.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="989.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,390 samples, 0.68%)</title><rect x="986.4" y="627.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="989.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,390 samples, 0.68%)</title><rect x="986.4" y="611.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="989.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,390 samples, 0.68%)</title><rect x="986.4" y="595.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="989.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$240/1948350730.run (1,390 samples, 0.68%)</title><rect x="986.4" y="579.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="989.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,390 samples, 0.68%)</title><rect x="986.4" y="563.0" width="8.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="989.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (306 samples, 0.15%)</title><rect x="986.4" y="547.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="989.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (306 samples, 0.15%)</title><rect x="986.4" y="531.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="989.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (306 samples, 0.15%)</title><rect x="986.4" y="515.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="989.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (153 samples, 0.07%)</title><rect x="986.4" y="499.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="989.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (153 samples, 0.07%)</title><rect x="986.4" y="483.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="989.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (153 samples, 0.07%)</title><rect x="986.4" y="467.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="989.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (153 samples, 0.07%)</title><rect x="986.4" y="451.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="989.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (153 samples, 0.07%)</title><rect x="986.4" y="435.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="989.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (153 samples, 0.07%)</title><rect x="987.2" y="499.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="990.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (153 samples, 0.07%)</title><rect x="987.2" y="483.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="990.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (153 samples, 0.07%)</title><rect x="987.2" y="467.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="990.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (153 samples, 0.07%)</title><rect x="987.2" y="451.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="990.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (153 samples, 0.07%)</title><rect x="987.2" y="435.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="990.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (153 samples, 0.07%)</title><rect x="987.2" y="419.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="990.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (153 samples, 0.07%)</title><rect x="987.2" y="403.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="990.2" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (153 samples, 0.07%)</title><rect x="987.2" y="387.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="990.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (104 samples, 0.05%)</title><rect x="988.2" y="547.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="991.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (104 samples, 0.05%)</title><rect x="988.2" y="531.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="991.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (104 samples, 0.05%)</title><rect x="988.2" y="515.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="991.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$493/346832864.get$Lambda (104 samples, 0.05%)</title><rect x="988.2" y="499.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="991.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$493 (104 samples, 0.05%)</title><rect x="988.2" y="483.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="991.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (965 samples, 0.47%)</title><rect x="988.8" y="547.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="991.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (401 samples, 0.20%)</title><rect x="988.8" y="531.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="991.8" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (270 samples, 0.13%)</title><rect x="988.8" y="515.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="991.8" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (270 samples, 0.13%)</title><rect x="988.8" y="499.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="991.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (131 samples, 0.06%)</title><rect x="990.4" y="515.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="993.4" y="526.0"></text>
</g>
<g>
<title>java/util/List.of (131 samples, 0.06%)</title><rect x="990.4" y="499.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="993.4" y="510.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (131 samples, 0.06%)</title><rect x="990.4" y="483.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="993.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (564 samples, 0.27%)</title><rect x="991.1" y="531.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="994.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$231/121351836.get (564 samples, 0.27%)</title><rect x="991.1" y="515.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="994.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (564 samples, 0.27%)</title><rect x="991.1" y="499.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="994.1" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (564 samples, 0.27%)</title><rect x="991.1" y="483.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="994.1" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (561 samples, 0.27%)</title><rect x="991.1" y="467.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="994.1" y="478.0"></text>
</g>
<g>
<title>byte[] (542 samples, 0.26%)</title><rect x="991.2" y="451.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="994.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$487/568802140.accept (228 samples, 0.11%)</title><rect x="994.4" y="739.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="997.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (228 samples, 0.11%)</title><rect x="994.4" y="723.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="997.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$465/316465657.run (228 samples, 0.11%)</title><rect x="994.4" y="707.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="997.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (228 samples, 0.11%)</title><rect x="994.4" y="691.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="997.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (228 samples, 0.11%)</title><rect x="994.4" y="675.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="997.4" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (227 samples, 0.11%)</title><rect x="994.4" y="659.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="997.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (227 samples, 0.11%)</title><rect x="994.4" y="643.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="997.4" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (227 samples, 0.11%)</title><rect x="994.4" y="627.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="997.4" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (479 samples, 0.23%)</title><rect x="995.7" y="755.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="998.7" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (479 samples, 0.23%)</title><rect x="995.7" y="739.0" width="2.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="998.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (270 samples, 0.13%)</title><rect x="998.4" y="755.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1001.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (137 samples, 0.07%)</title><rect x="998.4" y="739.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1001.4" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (137 samples, 0.07%)</title><rect x="998.4" y="723.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1001.4" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (137 samples, 0.07%)</title><rect x="998.4" y="707.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1001.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (137 samples, 0.07%)</title><rect x="998.4" y="691.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1001.4" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (137 samples, 0.07%)</title><rect x="998.4" y="675.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1001.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (137 samples, 0.07%)</title><rect x="998.4" y="659.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1001.4" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (137 samples, 0.07%)</title><rect x="998.4" y="643.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1001.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (133 samples, 0.06%)</title><rect x="999.2" y="739.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1002.2" y="750.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (133 samples, 0.06%)</title><rect x="999.2" y="723.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1002.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (1,033 samples, 0.50%)</title><rect x="1000.0" y="755.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1003.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$247/53036235.run (537 samples, 0.26%)</title><rect x="1000.0" y="739.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1003.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (537 samples, 0.26%)</title><rect x="1000.0" y="723.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1003.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (537 samples, 0.26%)</title><rect x="1000.0" y="707.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1003.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (537 samples, 0.26%)</title><rect x="1000.0" y="691.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1003.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (537 samples, 0.26%)</title><rect x="1000.0" y="675.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1003.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (537 samples, 0.26%)</title><rect x="1000.0" y="659.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1003.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$240/1948350730.run (537 samples, 0.26%)</title><rect x="1000.0" y="643.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1003.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (537 samples, 0.26%)</title><rect x="1000.0" y="627.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1003.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (532 samples, 0.26%)</title><rect x="1000.0" y="611.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1003.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (532 samples, 0.26%)</title><rect x="1000.0" y="595.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1003.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (333 samples, 0.16%)</title><rect x="1000.0" y="579.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1003.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (333 samples, 0.16%)</title><rect x="1000.0" y="563.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1003.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (333 samples, 0.16%)</title><rect x="1000.0" y="547.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1003.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1473981203.linkToTargetMethod (245 samples, 0.12%)</title><rect x="1000.0" y="531.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1003.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2129442232.invoke (245 samples, 0.12%)</title><rect x="1000.0" y="515.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1003.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (245 samples, 0.12%)</title><rect x="1000.0" y="499.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1003.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (245 samples, 0.12%)</title><rect x="1000.0" y="483.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1003.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (245 samples, 0.12%)</title><rect x="1000.0" y="467.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1003.0" y="478.0"></text>
</g>
<g>
<title>byte[] (245 samples, 0.12%)</title><rect x="1000.0" y="451.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1003.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (88 samples, 0.04%)</title><rect x="1001.4" y="531.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1004.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (88 samples, 0.04%)</title><rect x="1001.4" y="515.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1004.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (88 samples, 0.04%)</title><rect x="1001.4" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1004.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$493/346832864.get$Lambda (88 samples, 0.04%)</title><rect x="1001.4" y="483.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1004.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$493 (88 samples, 0.04%)</title><rect x="1001.4" y="467.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1004.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (199 samples, 0.10%)</title><rect x="1001.9" y="579.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1004.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (199 samples, 0.10%)</title><rect x="1001.9" y="563.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1004.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (199 samples, 0.10%)</title><rect x="1001.9" y="547.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1004.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (199 samples, 0.10%)</title><rect x="1001.9" y="531.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1004.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (199 samples, 0.10%)</title><rect x="1001.9" y="515.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1004.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (199 samples, 0.10%)</title><rect x="1001.9" y="499.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1004.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (199 samples, 0.10%)</title><rect x="1001.9" y="483.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1004.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (199 samples, 0.10%)</title><rect x="1001.9" y="467.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1004.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (199 samples, 0.10%)</title><rect x="1001.9" y="451.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1004.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$265/945591197.run (496 samples, 0.24%)</title><rect x="1003.0" y="739.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1006.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (496 samples, 0.24%)</title><rect x="1003.0" y="723.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1006.0" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (181 samples, 0.09%)</title><rect x="1003.0" y="707.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1006.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (181 samples, 0.09%)</title><rect x="1003.0" y="691.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1006.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$498/375914915.get$Lambda (181 samples, 0.09%)</title><rect x="1003.0" y="675.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1006.0" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$498 (181 samples, 0.09%)</title><rect x="1003.0" y="659.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1006.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (315 samples, 0.15%)</title><rect x="1004.1" y="707.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1007.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (315 samples, 0.15%)</title><rect x="1004.1" y="691.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1007.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (314 samples, 0.15%)</title><rect x="1004.1" y="675.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1007.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (314 samples, 0.15%)</title><rect x="1004.1" y="659.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1007.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (314 samples, 0.15%)</title><rect x="1004.1" y="643.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1007.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (314 samples, 0.15%)</title><rect x="1004.1" y="627.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1007.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1,922 samples, 0.94%)</title><rect x="1005.9" y="755.0" width="11.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1008.9" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.now (378 samples, 0.18%)</title><rect x="1005.9" y="739.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1008.9" y="750.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (378 samples, 0.18%)</title><rect x="1005.9" y="723.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1008.9" y="734.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (378 samples, 0.18%)</title><rect x="1005.9" y="707.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1008.9" y="718.0"></text>
</g>
<g>
<title>java/time/Instant.create (378 samples, 0.18%)</title><rect x="1005.9" y="691.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1008.9" y="702.0"></text>
</g>
<g>
<title>java.time.Instant (378 samples, 0.18%)</title><rect x="1005.9" y="675.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1008.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1,544 samples, 0.75%)</title><rect x="1008.1" y="739.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1011.1" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (456 samples, 0.22%)</title><rect x="1008.1" y="723.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1011.1" y="734.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (456 samples, 0.22%)</title><rect x="1008.1" y="707.0" width="2.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1011.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (234 samples, 0.11%)</title><rect x="1010.7" y="723.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1013.7" y="734.0"></text>
</g>
<g>
<title>java/util/Optional.of (234 samples, 0.11%)</title><rect x="1010.7" y="707.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1013.7" y="718.0"></text>
</g>
<g>
<title>java.util.Optional (234 samples, 0.11%)</title><rect x="1010.7" y="691.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1013.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (854 samples, 0.42%)</title><rect x="1012.0" y="723.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1015.0" y="734.0"></text>
</g>
<g>
<title>java.util.ArrayList (374 samples, 0.18%)</title><rect x="1012.0" y="707.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1015.0" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (480 samples, 0.23%)</title><rect x="1014.2" y="707.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1017.2" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (480 samples, 0.23%)</title><rect x="1014.2" y="691.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1017.2" y="702.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (480 samples, 0.23%)</title><rect x="1014.2" y="675.0" width="2.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1017.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (1,034 samples, 0.50%)</title><rect x="1016.9" y="755.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1019.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (95 samples, 0.05%)</title><rect x="1016.9" y="739.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1019.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (95 samples, 0.05%)</title><rect x="1016.9" y="723.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1019.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$463/582870490.get$Lambda (95 samples, 0.05%)</title><rect x="1016.9" y="707.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1019.9" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$463 (95 samples, 0.05%)</title><rect x="1016.9" y="691.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1019.9" y="702.0"></text>
</g>
<g>
<title>java/util/Collection.stream (559 samples, 0.27%)</title><rect x="1017.5" y="739.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1020.5" y="750.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (258 samples, 0.13%)</title><rect x="1017.5" y="723.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1020.5" y="734.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (258 samples, 0.13%)</title><rect x="1017.5" y="707.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1020.5" y="718.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (301 samples, 0.15%)</title><rect x="1019.0" y="723.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1022.0" y="734.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (301 samples, 0.15%)</title><rect x="1019.0" y="707.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1022.0" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (380 samples, 0.19%)</title><rect x="1020.7" y="739.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1023.7" y="750.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (380 samples, 0.19%)</title><rect x="1020.7" y="723.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1023.7" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (289 samples, 0.14%)</title><rect x="1022.9" y="755.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1025.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (289 samples, 0.14%)</title><rect x="1022.9" y="739.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1025.9" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (289 samples, 0.14%)</title><rect x="1022.9" y="723.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1025.9" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (284 samples, 0.14%)</title><rect x="1022.9" y="707.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1025.9" y="718.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (85 samples, 0.04%)</title><rect x="1022.9" y="691.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1025.9" y="702.0"></text>
</g>
<g>
<title>java.lang.Integer (85 samples, 0.04%)</title><rect x="1022.9" y="675.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1025.9" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (199 samples, 0.10%)</title><rect x="1023.4" y="691.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1026.4" y="702.0"></text>
</g>
<g>
<title>java/util/HashSet.add (199 samples, 0.10%)</title><rect x="1023.4" y="675.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1026.4" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.put (199 samples, 0.10%)</title><rect x="1023.4" y="659.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1026.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (199 samples, 0.10%)</title><rect x="1023.4" y="643.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1026.4" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (199 samples, 0.10%)</title><rect x="1023.4" y="627.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1026.4" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (199 samples, 0.10%)</title><rect x="1023.4" y="611.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1026.4" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (88 samples, 0.04%)</title><rect x="1024.5" y="755.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1027.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (88 samples, 0.04%)</title><rect x="1024.5" y="739.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1027.5" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (88 samples, 0.04%)</title><rect x="1024.5" y="723.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1027.5" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (88 samples, 0.04%)</title><rect x="1024.5" y="707.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1027.5" y="718.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (81 samples, 0.04%)</title><rect x="1024.5" y="691.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1027.5" y="702.0"></text>
</g>
<g>
<title>java.lang.Integer (81 samples, 0.04%)</title><rect x="1024.5" y="675.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1027.5" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (177 samples, 0.09%)</title><rect x="1025.1" y="755.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1028.1" y="766.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (177 samples, 0.09%)</title><rect x="1025.1" y="739.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1028.1" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (177 samples, 0.09%)</title><rect x="1025.1" y="723.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1028.1" y="734.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (177 samples, 0.09%)</title><rect x="1025.1" y="707.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1028.1" y="718.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (132 samples, 0.06%)</title><rect x="1026.1" y="771.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1029.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.createSession (132 samples, 0.06%)</title><rect x="1026.1" y="755.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1029.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.createSession (132 samples, 0.06%)</title><rect x="1026.1" y="739.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1029.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ServiceSession.&lt;init&gt; (129 samples, 0.06%)</title><rect x="1026.1" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1029.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (129 samples, 0.06%)</title><rect x="1026.1" y="707.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1029.1" y="718.0"></text>
</g>
<g>
<title>byte[] (121 samples, 0.06%)</title><rect x="1026.1" y="691.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1029.1" y="702.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (28,399 samples, 13.83%)</title><rect x="1026.8" y="771.0" width="163.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1029.8" y="782.0">one/nio/server/Select..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (249 samples, 0.12%)</title><rect x="1026.8" y="755.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1029.8" y="766.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (249 samples, 0.12%)</title><rect x="1026.8" y="739.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1029.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (28,148 samples, 13.71%)</title><rect x="1028.3" y="755.0" width="161.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1031.3" y="766.0">one/nio/net/Session.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (28,148 samples, 13.71%)</title><rect x="1028.3" y="739.0" width="161.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1031.3" y="750.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (28,148 samples, 13.71%)</title><rect x="1028.3" y="723.0" width="161.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1031.3" y="734.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (26,454 samples, 12.88%)</title><rect x="1028.3" y="707.0" width="152.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1031.3" y="718.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (26,454 samples, 12.88%)</title><rect x="1028.3" y="691.0" width="152.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1031.3" y="702.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (26,261 samples, 12.79%)</title><rect x="1028.3" y="675.0" width="150.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1031.3" y="686.0">RequestHandler1_ent..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (149 samples, 0.07%)</title><rect x="1028.3" y="659.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1031.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (149 samples, 0.07%)</title><rect x="1028.3" y="643.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1031.3" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (149 samples, 0.07%)</title><rect x="1028.3" y="627.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1031.3" y="638.0"></text>
</g>
<g>
<title>java.lang.String (80 samples, 0.04%)</title><rect x="1028.3" y="611.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1031.3" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (69 samples, 0.03%)</title><rect x="1028.7" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1031.7" y="622.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.03%)</title><rect x="1028.7" y="595.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1031.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.entity (26,112 samples, 12.71%)</title><rect x="1029.1" y="659.0" width="150.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1032.1" y="670.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.scheduleGetEntity (26,112 samples, 12.71%)</title><rect x="1029.1" y="643.0" width="150.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1032.1" y="654.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (207 samples, 0.10%)</title><rect x="1029.1" y="627.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1032.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (207 samples, 0.10%)</title><rect x="1029.1" y="611.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1032.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$661/216336529.get$Lambda (47 samples, 0.02%)</title><rect x="1029.1" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1032.1" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.vaddya.HttpService$$Lambda$661 (47 samples, 0.02%)</title><rect x="1029.1" y="579.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1032.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$662/554399477.get$Lambda (58 samples, 0.03%)</title><rect x="1029.4" y="595.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1032.4" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.vaddya.HttpService$$Lambda$662 (58 samples, 0.03%)</title><rect x="1029.4" y="579.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1032.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$671/445154046.get$Lambda (49 samples, 0.02%)</title><rect x="1029.7" y="595.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1032.7" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.vaddya.HttpService$$Lambda$671 (49 samples, 0.02%)</title><rect x="1029.7" y="579.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1032.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$673/392655303.get$Lambda (53 samples, 0.03%)</title><rect x="1030.0" y="595.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1033.0" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.vaddya.HttpService$$Lambda$673 (53 samples, 0.03%)</title><rect x="1030.0" y="579.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1033.0" y="590.0"></text>
</g>
<g>
<title>java/util/Collection.stream (385 samples, 0.19%)</title><rect x="1030.3" y="627.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1033.3" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (162 samples, 0.08%)</title><rect x="1030.3" y="611.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1033.3" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (162 samples, 0.08%)</title><rect x="1030.3" y="595.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1033.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (223 samples, 0.11%)</title><rect x="1031.2" y="611.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1034.2" y="622.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (223 samples, 0.11%)</title><rect x="1031.2" y="595.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1034.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (216 samples, 0.11%)</title><rect x="1032.5" y="627.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1035.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (216 samples, 0.11%)</title><rect x="1032.5" y="611.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1035.5" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (131 samples, 0.06%)</title><rect x="1032.5" y="595.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1035.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (85 samples, 0.04%)</title><rect x="1033.3" y="595.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1036.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (85 samples, 0.04%)</title><rect x="1033.3" y="579.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1036.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (202 samples, 0.10%)</title><rect x="1033.8" y="627.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1036.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (202 samples, 0.10%)</title><rect x="1033.8" y="611.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1036.8" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (110 samples, 0.05%)</title><rect x="1033.8" y="595.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1036.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (92 samples, 0.04%)</title><rect x="1034.4" y="595.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1037.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (92 samples, 0.04%)</title><rect x="1034.4" y="579.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1037.4" y="590.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (108 samples, 0.05%)</title><rect x="1034.9" y="627.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1037.9" y="638.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (108 samples, 0.05%)</title><rect x="1034.9" y="611.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1037.9" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (21,018 samples, 10.23%)</title><rect x="1035.5" y="627.0" width="120.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1038.5" y="638.0">java/util/strea..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (20,892 samples, 10.17%)</title><rect x="1035.5" y="611.0" width="120.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1038.5" y="622.0">java/util/strea..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (20,892 samples, 10.17%)</title><rect x="1035.5" y="595.0" width="120.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1038.5" y="606.0">java/util/strea..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (20,798 samples, 10.13%)</title><rect x="1035.5" y="579.0" width="119.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1038.5" y="590.0">java/util/strea..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (20,642 samples, 10.05%)</title><rect x="1035.5" y="563.0" width="118.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1038.5" y="574.0">java/util/stre..</text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (20,560 samples, 10.01%)</title><rect x="1035.5" y="547.0" width="118.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1038.5" y="558.0">java/util/Hash..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (20,560 samples, 10.01%)</title><rect x="1035.5" y="531.0" width="118.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1038.5" y="542.0">java/util/stre..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (20,560 samples, 10.01%)</title><rect x="1035.5" y="515.0" width="118.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1038.5" y="526.0">java/util/stre..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (172 samples, 0.08%)</title><rect x="1035.5" y="499.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1038.5" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$27/1043208434.accept (172 samples, 0.08%)</title><rect x="1035.5" y="483.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1038.5" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (172 samples, 0.08%)</title><rect x="1035.5" y="467.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1038.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (172 samples, 0.08%)</title><rect x="1035.5" y="451.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1038.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (172 samples, 0.08%)</title><rect x="1035.5" y="435.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1038.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (172 samples, 0.08%)</title><rect x="1035.5" y="419.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1038.5" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (172 samples, 0.08%)</title><rect x="1035.5" y="403.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1038.5" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (172 samples, 0.08%)</title><rect x="1035.5" y="387.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1038.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$662/554399477.apply (20,388 samples, 9.93%)</title><rect x="1036.5" y="499.0" width="117.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1039.5" y="510.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.lambda$scheduleGetEntity$2 (20,388 samples, 9.93%)</title><rect x="1036.5" y="483.0" width="117.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1039.5" y="494.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$LocalServiceClient.getAsync (338 samples, 0.16%)</title><rect x="1036.5" y="467.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1039.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (82 samples, 0.04%)</title><rect x="1036.5" y="451.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1039.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (82 samples, 0.04%)</title><rect x="1036.5" y="435.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1039.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$LocalServiceClient$$Lambda$663/638630665.get$Lambda (82 samples, 0.04%)</title><rect x="1036.5" y="419.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1039.5" y="430.0"></text>
</g>
<g>
<title>ru.mail.polis.service.vaddya.HttpService$LocalServiceClient$$Lambda$663 (82 samples, 0.04%)</title><rect x="1036.5" y="403.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1039.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (256 samples, 0.12%)</title><rect x="1037.0" y="451.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1040.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (256 samples, 0.12%)</title><rect x="1037.0" y="435.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1040.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (78 samples, 0.04%)</title><rect x="1037.0" y="419.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1040.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (69 samples, 0.03%)</title><rect x="1037.5" y="419.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1040.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (109 samples, 0.05%)</title><rect x="1037.9" y="419.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1040.9" y="430.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (96 samples, 0.05%)</title><rect x="1037.9" y="403.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1040.9" y="414.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (96 samples, 0.05%)</title><rect x="1037.9" y="387.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1040.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (96 samples, 0.05%)</title><rect x="1037.9" y="371.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1040.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (96 samples, 0.05%)</title><rect x="1037.9" y="355.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1040.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (96 samples, 0.05%)</title><rect x="1037.9" y="339.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1040.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (96 samples, 0.05%)</title><rect x="1037.9" y="323.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1040.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpServiceClient.getAsync (20,050 samples, 9.76%)</title><rect x="1038.5" y="467.0" width="115.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1041.5" y="478.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/lang/Integer.valueOf (92 samples, 0.04%)</title><rect x="1038.5" y="451.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1041.5" y="462.0"></text>
</g>
<g>
<title>java.lang.Integer (92 samples, 0.04%)</title><rect x="1038.5" y="435.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1041.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (427 samples, 0.21%)</title><rect x="1039.0" y="451.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1042.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (427 samples, 0.21%)</title><rect x="1039.0" y="435.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1042.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (220 samples, 0.11%)</title><rect x="1039.0" y="419.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1042.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (207 samples, 0.10%)</title><rect x="1040.3" y="419.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1043.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (207 samples, 0.10%)</title><rect x="1040.3" y="403.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1043.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (207 samples, 0.10%)</title><rect x="1040.3" y="387.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1043.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (12,539 samples, 6.11%)</title><rect x="1041.5" y="451.0" width="72.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1044.5" y="462.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (12,539 samples, 6.11%)</title><rect x="1041.5" y="435.0" width="72.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1044.5" y="446.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (12,539 samples, 6.11%)</title><rect x="1041.5" y="419.0" width="72.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1044.5" y="430.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (12,539 samples, 6.11%)</title><rect x="1041.5" y="403.0" width="72.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1044.5" y="414.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (96 samples, 0.05%)</title><rect x="1041.5" y="387.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1044.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (96 samples, 0.05%)</title><rect x="1041.5" y="371.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1044.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$154/180352869.get$Lambda (96 samples, 0.05%)</title><rect x="1041.5" y="355.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1044.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$154 (96 samples, 0.05%)</title><rect x="1041.5" y="339.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1044.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (416 samples, 0.20%)</title><rect x="1042.0" y="387.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1045.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (416 samples, 0.20%)</title><rect x="1042.0" y="371.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1045.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (228 samples, 0.11%)</title><rect x="1042.0" y="355.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1045.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (188 samples, 0.09%)</title><rect x="1043.3" y="355.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1046.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (188 samples, 0.09%)</title><rect x="1043.3" y="339.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1046.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (188 samples, 0.09%)</title><rect x="1043.3" y="323.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1046.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (469 samples, 0.23%)</title><rect x="1044.4" y="387.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1047.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (469 samples, 0.23%)</title><rect x="1044.4" y="371.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1047.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (260 samples, 0.13%)</title><rect x="1044.4" y="355.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1047.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (209 samples, 0.10%)</title><rect x="1045.9" y="355.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1048.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (209 samples, 0.10%)</title><rect x="1045.9" y="339.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1048.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (209 samples, 0.10%)</title><rect x="1045.9" y="323.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1048.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (372 samples, 0.18%)</title><rect x="1047.1" y="387.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1050.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (576 samples, 0.28%)</title><rect x="1049.2" y="387.0" width="3.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1052.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (5,876 samples, 2.86%)</title><rect x="1052.5" y="387.0" width="33.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1055.5" y="398.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (701 samples, 0.34%)</title><rect x="1052.5" y="371.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1055.5" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (558 samples, 0.27%)</title><rect x="1052.5" y="355.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1055.5" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (219 samples, 0.11%)</title><rect x="1052.5" y="339.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1055.5" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (219 samples, 0.11%)</title><rect x="1052.5" y="323.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1055.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (339 samples, 0.17%)</title><rect x="1053.8" y="339.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1056.8" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (339 samples, 0.17%)</title><rect x="1053.8" y="323.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1056.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (143 samples, 0.07%)</title><rect x="1055.7" y="355.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1058.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (143 samples, 0.07%)</title><rect x="1055.7" y="339.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1058.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (143 samples, 0.07%)</title><rect x="1055.7" y="323.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1058.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$67/2082781203.get (143 samples, 0.07%)</title><rect x="1055.7" y="307.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1058.7" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (143 samples, 0.07%)</title><rect x="1055.7" y="291.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1058.7" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,432 samples, 1.18%)</title><rect x="1056.6" y="371.0" width="13.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1059.6" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,432 samples, 1.18%)</title><rect x="1056.6" y="355.0" width="13.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1059.6" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (104 samples, 0.05%)</title><rect x="1056.6" y="339.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1059.6" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (173 samples, 0.08%)</title><rect x="1057.2" y="339.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1060.2" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap (307 samples, 0.15%)</title><rect x="1058.2" y="339.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1061.2" y="350.0"></text>
</g>
<g>
<title>java.util.TreeSet (67 samples, 0.03%)</title><rect x="1059.9" y="339.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1062.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (193 samples, 0.09%)</title><rect x="1060.3" y="339.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1063.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (193 samples, 0.09%)</title><rect x="1060.3" y="323.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1063.3" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.get$Lambda (193 samples, 0.09%)</title><rect x="1060.3" y="307.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1063.3" y="318.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$139 (193 samples, 0.09%)</title><rect x="1060.3" y="291.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1063.3" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (1,110 samples, 0.54%)</title><rect x="1061.4" y="339.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1064.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,110 samples, 0.54%)</title><rect x="1061.4" y="323.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1064.4" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.accept (1,110 samples, 0.54%)</title><rect x="1061.4" y="307.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1064.4" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,110 samples, 0.54%)</title><rect x="1061.4" y="291.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1064.4" y="302.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (578 samples, 0.28%)</title><rect x="1061.4" y="275.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.4" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.accept (342 samples, 0.17%)</title><rect x="1061.4" y="259.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1064.4" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (342 samples, 0.17%)</title><rect x="1061.4" y="243.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1064.4" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (342 samples, 0.17%)</title><rect x="1061.4" y="227.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1064.4" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (342 samples, 0.17%)</title><rect x="1061.4" y="211.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1064.4" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (342 samples, 0.17%)</title><rect x="1061.4" y="195.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.4" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (342 samples, 0.17%)</title><rect x="1061.4" y="179.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.4" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (342 samples, 0.17%)</title><rect x="1061.4" y="163.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.4" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (342 samples, 0.17%)</title><rect x="1061.4" y="147.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1064.4" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (236 samples, 0.11%)</title><rect x="1063.4" y="259.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1066.4" y="270.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (236 samples, 0.11%)</title><rect x="1063.4" y="243.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1066.4" y="254.0"></text>
</g>
<g>
<title>java/util/List.copyOf (314 samples, 0.15%)</title><rect x="1064.7" y="275.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1067.7" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (314 samples, 0.15%)</title><rect x="1064.7" y="259.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1067.7" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (153 samples, 0.07%)</title><rect x="1064.7" y="243.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1067.7" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (153 samples, 0.07%)</title><rect x="1064.7" y="227.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1067.7" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (153 samples, 0.07%)</title><rect x="1064.7" y="211.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1067.7" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (161 samples, 0.08%)</title><rect x="1065.6" y="243.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1068.6" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (161 samples, 0.08%)</title><rect x="1065.6" y="227.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1068.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (218 samples, 0.11%)</title><rect x="1066.5" y="275.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1069.5" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (218 samples, 0.11%)</title><rect x="1066.5" y="259.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1069.5" y="270.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (184 samples, 0.09%)</title><rect x="1067.8" y="339.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1070.8" y="350.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (184 samples, 0.09%)</title><rect x="1067.8" y="323.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1070.8" y="334.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (294 samples, 0.14%)</title><rect x="1068.9" y="339.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1071.9" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap (294 samples, 0.14%)</title><rect x="1068.9" y="323.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1071.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (113 samples, 0.06%)</title><rect x="1070.5" y="371.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1073.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (1,807 samples, 0.88%)</title><rect x="1071.2" y="371.0" width="10.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1074.2" y="382.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (1,807 samples, 0.88%)</title><rect x="1071.2" y="355.0" width="10.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1074.2" y="366.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,619 samples, 0.79%)</title><rect x="1071.2" y="339.0" width="9.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1074.2" y="350.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,619 samples, 0.79%)</title><rect x="1071.2" y="323.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1074.2" y="334.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,619 samples, 0.79%)</title><rect x="1071.2" y="307.0" width="9.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1074.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (598 samples, 0.29%)</title><rect x="1071.2" y="291.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1074.2" y="302.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (598 samples, 0.29%)</title><rect x="1071.2" y="275.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1074.2" y="286.0"></text>
</g>
<g>
<title>byte[] (598 samples, 0.29%)</title><rect x="1071.2" y="259.0" width="3.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1074.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,021 samples, 0.50%)</title><rect x="1074.6" y="291.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1077.6" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,021 samples, 0.50%)</title><rect x="1074.6" y="275.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1077.6" y="286.0"></text>
</g>
<g>
<title>java.lang.String (461 samples, 0.22%)</title><rect x="1074.6" y="259.0" width="2.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1077.6" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (560 samples, 0.27%)</title><rect x="1077.3" y="259.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1080.3" y="270.0"></text>
</g>
<g>
<title>byte[] (560 samples, 0.27%)</title><rect x="1077.3" y="243.0" width="3.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1080.3" y="254.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (188 samples, 0.09%)</title><rect x="1080.5" y="339.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1083.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (296 samples, 0.14%)</title><rect x="1081.6" y="371.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1084.6" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap (296 samples, 0.14%)</title><rect x="1081.6" y="355.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1084.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (527 samples, 0.26%)</title><rect x="1083.3" y="371.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1086.3" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (148 samples, 0.07%)</title><rect x="1083.3" y="355.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1086.3" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (149 samples, 0.07%)</title><rect x="1084.1" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1087.1" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (149 samples, 0.07%)</title><rect x="1084.1" y="339.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1087.1" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (230 samples, 0.11%)</title><rect x="1085.0" y="355.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1088.0" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (230 samples, 0.11%)</title><rect x="1085.0" y="339.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1088.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (3,066 samples, 1.49%)</title><rect x="1086.3" y="387.0" width="17.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1089.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (89 samples, 0.04%)</title><rect x="1086.3" y="371.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1089.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (493 samples, 0.24%)</title><rect x="1086.8" y="371.0" width="2.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1089.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (103 samples, 0.05%)</title><rect x="1089.6" y="371.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1092.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (103 samples, 0.05%)</title><rect x="1089.6" y="355.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1092.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (2,381 samples, 1.16%)</title><rect x="1090.2" y="371.0" width="13.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1093.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (2,381 samples, 1.16%)</title><rect x="1090.2" y="355.0" width="13.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1093.2" y="366.0"></text>
</g>
<g>
<title>java.lang.Class[] (240 samples, 0.12%)</title><rect x="1090.2" y="339.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1093.2" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (191 samples, 0.09%)</title><rect x="1091.6" y="339.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1094.6" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList (216 samples, 0.11%)</title><rect x="1092.7" y="339.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1095.7" y="350.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (1,054 samples, 0.51%)</title><rect x="1094.0" y="339.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (1,054 samples, 0.51%)</title><rect x="1094.0" y="323.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1097.0" y="334.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (1,054 samples, 0.51%)</title><rect x="1094.0" y="307.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1097.0" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (1,054 samples, 0.51%)</title><rect x="1094.0" y="291.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1097.0" y="302.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (1,054 samples, 0.51%)</title><rect x="1094.0" y="275.0" width="6.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1097.0" y="286.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (382 samples, 0.19%)</title><rect x="1100.0" y="339.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1103.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (382 samples, 0.19%)</title><rect x="1100.0" y="323.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1103.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (123 samples, 0.06%)</title><rect x="1100.0" y="307.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1103.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (123 samples, 0.06%)</title><rect x="1100.0" y="291.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1103.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (259 samples, 0.13%)</title><rect x="1100.7" y="307.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1103.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (259 samples, 0.13%)</title><rect x="1100.7" y="291.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1103.7" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (298 samples, 0.15%)</title><rect x="1102.2" y="339.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1105.2" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (298 samples, 0.15%)</title><rect x="1102.2" y="323.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1105.2" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (298 samples, 0.15%)</title><rect x="1102.2" y="307.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1105.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (1,668 samples, 0.81%)</title><rect x="1103.9" y="387.0" width="9.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1106.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (359 samples, 0.17%)</title><rect x="1103.9" y="371.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1106.9" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (158 samples, 0.08%)</title><rect x="1103.9" y="355.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1106.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (201 samples, 0.10%)</title><rect x="1104.8" y="355.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1107.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (201 samples, 0.10%)</title><rect x="1104.8" y="339.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1107.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (201 samples, 0.10%)</title><rect x="1104.8" y="323.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1107.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (201 samples, 0.10%)</title><rect x="1104.8" y="307.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1107.8" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (201 samples, 0.10%)</title><rect x="1104.8" y="291.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1107.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (198 samples, 0.10%)</title><rect x="1106.0" y="371.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1109.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (1,111 samples, 0.54%)</title><rect x="1107.1" y="371.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1110.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (166 samples, 0.08%)</title><rect x="1107.1" y="355.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1110.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (166 samples, 0.08%)</title><rect x="1107.1" y="339.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1110.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$150/1603050069.get$Lambda (79 samples, 0.04%)</title><rect x="1107.1" y="323.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1110.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$150 (79 samples, 0.04%)</title><rect x="1107.1" y="307.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1110.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$151/1373859138.get$Lambda (87 samples, 0.04%)</title><rect x="1107.6" y="323.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1110.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$151 (87 samples, 0.04%)</title><rect x="1107.6" y="307.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1110.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (945 samples, 0.46%)</title><rect x="1108.1" y="355.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1111.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (945 samples, 0.46%)</title><rect x="1108.1" y="339.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1111.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (512 samples, 0.25%)</title><rect x="1108.1" y="323.0" width="2.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1111.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (433 samples, 0.21%)</title><rect x="1111.0" y="323.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1114.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (433 samples, 0.21%)</title><rect x="1111.0" y="307.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1114.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (433 samples, 0.21%)</title><rect x="1111.0" y="291.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1114.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (2,642 samples, 1.29%)</title><rect x="1113.5" y="451.0" width="15.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1116.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (258 samples, 0.13%)</title><rect x="1113.5" y="435.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1116.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (2,384 samples, 1.16%)</title><rect x="1115.0" y="435.0" width="13.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1118.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,282 samples, 1.11%)</title><rect x="1115.0" y="419.0" width="13.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1118.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,282 samples, 1.11%)</title><rect x="1115.0" y="403.0" width="13.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1118.0" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (106 samples, 0.05%)</title><rect x="1115.0" y="387.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1118.0" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (147 samples, 0.07%)</title><rect x="1115.6" y="387.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1118.6" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap (277 samples, 0.13%)</title><rect x="1116.4" y="387.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1119.4" y="398.0"></text>
</g>
<g>
<title>java.util.TreeSet (113 samples, 0.06%)</title><rect x="1118.0" y="387.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1121.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (225 samples, 0.11%)</title><rect x="1118.7" y="387.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1121.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (225 samples, 0.11%)</title><rect x="1118.7" y="371.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1121.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.get$Lambda (225 samples, 0.11%)</title><rect x="1118.7" y="355.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1121.7" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$139 (225 samples, 0.11%)</title><rect x="1118.7" y="339.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1121.7" y="350.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (194 samples, 0.09%)</title><rect x="1120.0" y="387.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1123.0" y="398.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (194 samples, 0.09%)</title><rect x="1120.0" y="371.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1123.0" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (946 samples, 0.46%)</title><rect x="1121.1" y="387.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1124.1" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.accept (946 samples, 0.46%)</title><rect x="1121.1" y="371.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1124.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (946 samples, 0.46%)</title><rect x="1121.1" y="355.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1124.1" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (394 samples, 0.19%)</title><rect x="1121.1" y="339.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1124.1" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.accept (394 samples, 0.19%)</title><rect x="1121.1" y="323.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1124.1" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (394 samples, 0.19%)</title><rect x="1121.1" y="307.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1124.1" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (394 samples, 0.19%)</title><rect x="1121.1" y="291.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1124.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (394 samples, 0.19%)</title><rect x="1121.1" y="275.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1124.1" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (394 samples, 0.19%)</title><rect x="1121.1" y="259.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1124.1" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (394 samples, 0.19%)</title><rect x="1121.1" y="243.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1124.1" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (394 samples, 0.19%)</title><rect x="1121.1" y="227.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1124.1" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (394 samples, 0.19%)</title><rect x="1121.1" y="211.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1124.1" y="222.0"></text>
</g>
<g>
<title>java/util/List.copyOf (279 samples, 0.14%)</title><rect x="1123.4" y="339.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1126.4" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (279 samples, 0.14%)</title><rect x="1123.4" y="323.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1126.4" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (146 samples, 0.07%)</title><rect x="1123.4" y="307.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1126.4" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (146 samples, 0.07%)</title><rect x="1123.4" y="291.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1126.4" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (146 samples, 0.07%)</title><rect x="1123.4" y="275.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1126.4" y="286.0"></text>
</g>
<g>
<title>java/util/List.of (133 samples, 0.06%)</title><rect x="1124.2" y="307.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1127.2" y="318.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (133 samples, 0.06%)</title><rect x="1124.2" y="291.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1127.2" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (273 samples, 0.13%)</title><rect x="1125.0" y="339.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1128.0" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (273 samples, 0.13%)</title><rect x="1125.0" y="323.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1128.0" y="334.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (274 samples, 0.13%)</title><rect x="1126.5" y="387.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1129.5" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap (274 samples, 0.13%)</title><rect x="1126.5" y="371.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1129.5" y="382.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (102 samples, 0.05%)</title><rect x="1128.1" y="419.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1131.1" y="430.0"></text>
</g>
<g>
<title>java/util/Optional.of (102 samples, 0.05%)</title><rect x="1128.1" y="403.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1131.1" y="414.0"></text>
</g>
<g>
<title>java.util.Optional (102 samples, 0.05%)</title><rect x="1128.1" y="387.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1131.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpServiceClient.request (4,350 samples, 2.12%)</title><rect x="1128.7" y="451.0" width="25.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1131.7" y="462.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (558 samples, 0.27%)</title><rect x="1128.7" y="435.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1131.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (558 samples, 0.27%)</title><rect x="1128.7" y="419.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1131.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1806431167.invoke (558 samples, 0.27%)</title><rect x="1128.7" y="403.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1131.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (558 samples, 0.27%)</title><rect x="1128.7" y="387.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1131.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (162 samples, 0.08%)</title><rect x="1128.7" y="371.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1131.7" y="382.0"></text>
</g>
<g>
<title>java.lang.String (162 samples, 0.08%)</title><rect x="1128.7" y="355.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1131.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (396 samples, 0.19%)</title><rect x="1129.6" y="371.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1132.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (396 samples, 0.19%)</title><rect x="1129.6" y="355.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1132.6" y="366.0"></text>
</g>
<g>
<title>byte[] (396 samples, 0.19%)</title><rect x="1129.6" y="339.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1132.6" y="350.0"></text>
</g>
<g>
<title>java/net/URI.create (2,410 samples, 1.17%)</title><rect x="1131.9" y="435.0" width="13.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1134.9" y="446.0"></text>
</g>
<g>
<title>java.net.URI (512 samples, 0.25%)</title><rect x="1131.9" y="419.0" width="2.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1134.9" y="430.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1,898 samples, 0.92%)</title><rect x="1134.8" y="419.0" width="10.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1137.8" y="430.0"></text>
</g>
<g>
<title>java.net.URI$Parser (176 samples, 0.09%)</title><rect x="1134.8" y="403.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1137.8" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1,722 samples, 0.84%)</title><rect x="1135.8" y="403.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1138.8" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (298 samples, 0.15%)</title><rect x="1135.8" y="387.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1138.8" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (298 samples, 0.15%)</title><rect x="1135.8" y="371.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1138.8" y="382.0"></text>
</g>
<g>
<title>java.lang.String (146 samples, 0.07%)</title><rect x="1135.8" y="355.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1138.8" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (152 samples, 0.07%)</title><rect x="1136.7" y="355.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1139.7" y="366.0"></text>
</g>
<g>
<title>byte[] (152 samples, 0.07%)</title><rect x="1136.7" y="339.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1139.7" y="350.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1,424 samples, 0.69%)</title><rect x="1137.6" y="387.0" width="8.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1140.6" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (704 samples, 0.34%)</title><rect x="1137.6" y="371.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1140.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (704 samples, 0.34%)</title><rect x="1137.6" y="355.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1140.6" y="366.0"></text>
</g>
<g>
<title>java.lang.String (327 samples, 0.16%)</title><rect x="1137.6" y="339.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1140.6" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (377 samples, 0.18%)</title><rect x="1139.4" y="339.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1142.4" y="350.0"></text>
</g>
<g>
<title>byte[] (377 samples, 0.18%)</title><rect x="1139.4" y="323.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1142.4" y="334.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (720 samples, 0.35%)</title><rect x="1141.6" y="371.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1144.6" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (372 samples, 0.18%)</title><rect x="1141.6" y="355.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1144.6" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (372 samples, 0.18%)</title><rect x="1141.6" y="339.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1144.6" y="350.0"></text>
</g>
<g>
<title>java.lang.String (167 samples, 0.08%)</title><rect x="1141.6" y="323.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1144.6" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (205 samples, 0.10%)</title><rect x="1142.6" y="323.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1145.6" y="334.0"></text>
</g>
<g>
<title>byte[] (205 samples, 0.10%)</title><rect x="1142.6" y="307.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1145.6" y="318.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (348 samples, 0.17%)</title><rect x="1143.7" y="355.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1146.7" y="366.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (348 samples, 0.17%)</title><rect x="1143.7" y="339.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1146.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (348 samples, 0.17%)</title><rect x="1143.7" y="323.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1146.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (348 samples, 0.17%)</title><rect x="1143.7" y="307.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1146.7" y="318.0"></text>
</g>
<g>
<title>java.lang.String (150 samples, 0.07%)</title><rect x="1143.7" y="291.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1146.7" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (198 samples, 0.10%)</title><rect x="1144.6" y="291.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1147.6" y="302.0"></text>
</g>
<g>
<title>byte[] (198 samples, 0.10%)</title><rect x="1144.6" y="275.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1147.6" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (658 samples, 0.32%)</title><rect x="1145.7" y="435.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1148.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (244 samples, 0.12%)</title><rect x="1145.7" y="419.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1148.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (414 samples, 0.20%)</title><rect x="1147.1" y="419.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1150.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (108 samples, 0.05%)</title><rect x="1147.1" y="403.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1150.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (306 samples, 0.15%)</title><rect x="1147.8" y="403.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1150.8" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap (306 samples, 0.15%)</title><rect x="1147.8" y="387.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1150.8" y="398.0"></text>
</g>
<g>
<title>java/time/Duration.ofMillis (166 samples, 0.08%)</title><rect x="1149.5" y="435.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1152.5" y="446.0"></text>
</g>
<g>
<title>java/time/Duration.create (166 samples, 0.08%)</title><rect x="1149.5" y="419.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1152.5" y="430.0"></text>
</g>
<g>
<title>java.time.Duration (166 samples, 0.08%)</title><rect x="1149.5" y="403.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1152.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (558 samples, 0.27%)</title><rect x="1150.5" y="435.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1153.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (558 samples, 0.27%)</title><rect x="1150.5" y="419.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1153.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (558 samples, 0.27%)</title><rect x="1150.5" y="403.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1153.5" y="414.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (558 samples, 0.27%)</title><rect x="1150.5" y="387.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1153.5" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (249 samples, 0.12%)</title><rect x="1150.5" y="371.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1153.5" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (249 samples, 0.12%)</title><rect x="1150.5" y="355.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1153.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$136/728132573.apply (309 samples, 0.15%)</title><rect x="1151.9" y="371.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1154.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (309 samples, 0.15%)</title><rect x="1151.9" y="355.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1154.9" y="366.0"></text>
</g>
<g>
<title>java.util.ArrayList (168 samples, 0.08%)</title><rect x="1151.9" y="339.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1154.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (141 samples, 0.07%)</title><rect x="1152.9" y="339.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1155.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (141 samples, 0.07%)</title><rect x="1152.9" y="323.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1155.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (82 samples, 0.04%)</title><rect x="1153.7" y="547.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1156.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (82 samples, 0.04%)</title><rect x="1153.7" y="531.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1156.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (82 samples, 0.04%)</title><rect x="1153.7" y="515.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1156.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$26/1629687658.get (82 samples, 0.04%)</title><rect x="1153.7" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1156.7" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (82 samples, 0.04%)</title><rect x="1153.7" y="483.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1156.7" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (156 samples, 0.08%)</title><rect x="1154.2" y="563.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1157.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (156 samples, 0.08%)</title><rect x="1154.2" y="547.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1157.2" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (156 samples, 0.08%)</title><rect x="1154.2" y="531.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1157.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (94 samples, 0.05%)</title><rect x="1155.0" y="579.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1158.0" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (94 samples, 0.05%)</title><rect x="1155.0" y="563.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1158.0" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (94 samples, 0.05%)</title><rect x="1155.0" y="547.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1158.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (126 samples, 0.06%)</title><rect x="1155.6" y="611.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1158.6" y="622.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (126 samples, 0.06%)</title><rect x="1155.6" y="595.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1158.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (450 samples, 0.22%)</title><rect x="1156.3" y="627.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1159.3" y="638.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (450 samples, 0.22%)</title><rect x="1156.3" y="611.0" width="2.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1159.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils.firstN (1,230 samples, 0.60%)</title><rect x="1158.9" y="627.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1161.9" y="638.0"></text>
</g>
<g>
<title>java.util.ArrayList (96 samples, 0.05%)</title><rect x="1158.9" y="611.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1161.9" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (60 samples, 0.03%)</title><rect x="1159.4" y="611.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1162.4" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (55 samples, 0.03%)</title><rect x="1159.8" y="611.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1162.8" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock (49 samples, 0.02%)</title><rect x="1160.1" y="611.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1163.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1182594129.linkToTargetMethod (119 samples, 0.06%)</title><rect x="1160.4" y="611.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1163.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1191051212.invokeStatic (119 samples, 0.06%)</title><rect x="1160.4" y="595.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1163.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils$$Lambda$170/1308121008.get$Lambda (119 samples, 0.06%)</title><rect x="1160.4" y="579.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1163.4" y="590.0"></text>
</g>
<g>
<title>ru.mail.polis.service.vaddya.CompletableFutureUtils$$Lambda$170 (119 samples, 0.06%)</title><rect x="1160.4" y="563.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1163.4" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (64 samples, 0.03%)</title><rect x="1161.1" y="611.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1164.1" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (64 samples, 0.03%)</title><rect x="1161.1" y="595.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1164.1" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (692 samples, 0.34%)</title><rect x="1161.4" y="611.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1164.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils$$Lambda$175/1236692729.accept (692 samples, 0.34%)</title><rect x="1161.4" y="595.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1164.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils.lambda$firstN$1 (692 samples, 0.34%)</title><rect x="1161.4" y="579.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1164.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (692 samples, 0.34%)</title><rect x="1161.4" y="563.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1164.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (692 samples, 0.34%)</title><rect x="1161.4" y="547.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1164.4" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (414 samples, 0.20%)</title><rect x="1161.4" y="531.0" width="2.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1164.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (80 samples, 0.04%)</title><rect x="1163.8" y="531.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1166.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (80 samples, 0.04%)</title><rect x="1163.8" y="515.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1166.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (198 samples, 0.10%)</title><rect x="1164.3" y="531.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1167.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (198 samples, 0.10%)</title><rect x="1164.3" y="515.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1167.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (198 samples, 0.10%)</title><rect x="1164.3" y="499.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1167.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.&lt;init&gt; (95 samples, 0.05%)</title><rect x="1165.4" y="611.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1168.4" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (95 samples, 0.05%)</title><rect x="1165.4" y="595.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1168.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/topology/ConsistentHashingTopology.primaryFor (2,296 samples, 1.12%)</title><rect x="1166.0" y="627.0" width="13.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1169.0" y="638.0"></text>
</g>
<g>
<title>java.util.HashSet (47 samples, 0.02%)</title><rect x="1166.0" y="611.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1169.0" y="622.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (75 samples, 0.04%)</title><rect x="1166.2" y="611.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1169.2" y="622.0"></text>
</g>
<g>
<title>java.lang.Long (75 samples, 0.04%)</title><rect x="1166.2" y="595.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1169.2" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (301 samples, 0.15%)</title><rect x="1166.7" y="611.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1169.7" y="622.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (85 samples, 0.04%)</title><rect x="1166.7" y="595.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1169.7" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (216 samples, 0.11%)</title><rect x="1167.2" y="595.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1170.2" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (117 samples, 0.06%)</title><rect x="1167.2" y="579.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1170.2" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (117 samples, 0.06%)</title><rect x="1167.2" y="563.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1170.2" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (99 samples, 0.05%)</title><rect x="1167.8" y="579.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1170.8" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (99 samples, 0.05%)</title><rect x="1167.8" y="563.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1170.8" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (45 samples, 0.02%)</title><rect x="1168.4" y="611.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1171.4" y="622.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (45 samples, 0.02%)</title><rect x="1168.4" y="595.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1171.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (170 samples, 0.08%)</title><rect x="1168.7" y="611.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1171.7" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap (170 samples, 0.08%)</title><rect x="1168.7" y="595.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1171.7" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.add (562 samples, 0.27%)</title><rect x="1169.6" y="611.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1172.6" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.put (562 samples, 0.27%)</title><rect x="1169.6" y="595.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1172.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (562 samples, 0.27%)</title><rect x="1169.6" y="579.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1172.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (292 samples, 0.14%)</title><rect x="1169.6" y="563.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1172.6" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (292 samples, 0.14%)</title><rect x="1169.6" y="547.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1172.6" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (270 samples, 0.13%)</title><rect x="1171.3" y="563.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1174.3" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (270 samples, 0.13%)</title><rect x="1171.3" y="547.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1174.3" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (148 samples, 0.07%)</title><rect x="1172.9" y="611.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1175.9" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (148 samples, 0.07%)</title><rect x="1172.9" y="595.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1175.9" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (148 samples, 0.07%)</title><rect x="1172.9" y="579.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1175.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/topology/ConsistentHashingTopology.hash (942 samples, 0.46%)</title><rect x="1173.7" y="611.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1176.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashString (942 samples, 0.46%)</title><rect x="1173.7" y="595.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1176.7" y="606.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHasher.putString (258 samples, 0.13%)</title><rect x="1173.7" y="579.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1176.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHasher.putBytes (173 samples, 0.08%)</title><rect x="1173.7" y="563.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1176.7" y="574.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytes (173 samples, 0.08%)</title><rect x="1173.7" y="547.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1176.7" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (173 samples, 0.08%)</title><rect x="1173.7" y="531.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1176.7" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (173 samples, 0.08%)</title><rect x="1173.7" y="515.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1176.7" y="526.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (85 samples, 0.04%)</title><rect x="1174.7" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1177.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (85 samples, 0.04%)</title><rect x="1174.7" y="547.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1177.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (85 samples, 0.04%)</title><rect x="1174.7" y="531.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1177.7" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (85 samples, 0.04%)</title><rect x="1174.7" y="515.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1177.7" y="526.0"></text>
</g>
<g>
<title>byte[] (85 samples, 0.04%)</title><rect x="1174.7" y="499.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1177.7" y="510.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (273 samples, 0.13%)</title><rect x="1175.2" y="579.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1178.2" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (273 samples, 0.13%)</title><rect x="1175.2" y="563.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1178.2" y="574.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.05%)</title><rect x="1175.2" y="547.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1178.2" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (161 samples, 0.08%)</title><rect x="1175.9" y="547.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1178.9" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (161 samples, 0.08%)</title><rect x="1175.9" y="531.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1178.9" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (161 samples, 0.08%)</title><rect x="1175.9" y="515.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1178.9" y="526.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (411 samples, 0.20%)</title><rect x="1176.8" y="579.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1179.8" y="590.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (165 samples, 0.08%)</title><rect x="1176.8" y="563.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1179.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (246 samples, 0.12%)</title><rect x="1177.7" y="563.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1180.7" y="574.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (246 samples, 0.12%)</title><rect x="1177.7" y="547.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1180.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (246 samples, 0.12%)</title><rect x="1177.7" y="531.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1180.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (246 samples, 0.12%)</title><rect x="1177.7" y="515.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1180.7" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (136 samples, 0.07%)</title><rect x="1177.7" y="499.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1180.7" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (110 samples, 0.05%)</title><rect x="1178.5" y="499.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1181.5" y="510.0"></text>
</g>
<g>
<title>byte[] (110 samples, 0.05%)</title><rect x="1178.5" y="483.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1181.5" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (193 samples, 0.09%)</title><rect x="1179.2" y="675.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1182.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (193 samples, 0.09%)</title><rect x="1179.2" y="659.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1182.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (193 samples, 0.09%)</title><rect x="1179.2" y="643.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1182.2" y="654.0"></text>
</g>
<g>
<title>java.lang.String (83 samples, 0.04%)</title><rect x="1179.2" y="627.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1182.2" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (110 samples, 0.05%)</title><rect x="1179.6" y="627.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1182.6" y="638.0"></text>
</g>
<g>
<title>byte[] (110 samples, 0.05%)</title><rect x="1179.6" y="611.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1182.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,316 samples, 0.64%)</title><rect x="1180.3" y="707.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1183.3" y="718.0"></text>
</g>
<g>
<title>one.nio.http.Request (131 samples, 0.06%)</title><rect x="1180.3" y="691.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1183.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (289 samples, 0.14%)</title><rect x="1181.0" y="691.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1184.0" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (289 samples, 0.14%)</title><rect x="1181.0" y="675.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1184.0" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (896 samples, 0.44%)</title><rect x="1182.7" y="691.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1185.7" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (896 samples, 0.44%)</title><rect x="1182.7" y="675.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1185.7" y="686.0"></text>
</g>
<g>
<title>char[] (724 samples, 0.35%)</title><rect x="1182.7" y="659.0" width="4.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1185.7" y="670.0"></text>
</g>
<g>
<title>java.lang.String (64 samples, 0.03%)</title><rect x="1186.8" y="659.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1189.8" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (108 samples, 0.05%)</title><rect x="1187.2" y="659.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1190.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (108 samples, 0.05%)</title><rect x="1187.2" y="643.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1190.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (108 samples, 0.05%)</title><rect x="1187.2" y="627.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1190.2" y="638.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.05%)</title><rect x="1187.2" y="611.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1190.2" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (378 samples, 0.18%)</title><rect x="1187.8" y="707.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1190.8" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (378 samples, 0.18%)</title><rect x="1187.8" y="691.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1190.8" y="702.0"></text>
</g>
<g>
<title>char[] (178 samples, 0.09%)</title><rect x="1187.8" y="675.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1190.8" y="686.0"></text>
</g>
<g>
<title>java.lang.String (73 samples, 0.04%)</title><rect x="1188.9" y="675.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1191.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (127 samples, 0.06%)</title><rect x="1189.3" y="675.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1192.3" y="686.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (127 samples, 0.06%)</title><rect x="1189.3" y="659.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1192.3" y="670.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (127 samples, 0.06%)</title><rect x="1189.3" y="643.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1192.3" y="654.0"></text>
</g>
<g>
<title>byte[] (127 samples, 0.06%)</title><rect x="1189.3" y="627.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1192.3" y="638.0"></text>
</g>
</g>
</svg>
