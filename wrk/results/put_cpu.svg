<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1798" onload="init(evt)" viewBox="0 0 1200 1798" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1781"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1781"> </text>
<g id="frames">
<g>
<title>all (4,312 samples, 100.00%)</title><rect x="10.0" y="1747.0" width="1180.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="1758.0">all</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.30.so (1 samples, 0.02%)</title><rect x="10.0" y="1731.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="1742.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="10.3" y="1731.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.3" y="1742.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.02%)</title><rect x="10.5" y="1731.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.5" y="1742.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.12%)</title><rect x="10.8" y="1731.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.8" y="1742.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.09%)</title><rect x="11.1" y="1715.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="14.1" y="1726.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.09%)</title><rect x="11.1" y="1699.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="14.1" y="1710.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="11.1" y="1683.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="14.1" y="1694.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="11.4" y="1683.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="14.4" y="1694.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="11.4" y="1667.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.4" y="1678.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.02%)</title><rect x="11.6" y="1667.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.6" y="1678.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="11.9" y="1683.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="14.9" y="1694.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.09%)</title><rect x="12.2" y="1731.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="15.2" y="1742.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.07%)</title><rect x="12.5" y="1715.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="15.5" y="1726.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.07%)</title><rect x="12.5" y="1699.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="15.5" y="1710.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.07%)</title><rect x="12.5" y="1683.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="15.5" y="1694.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.07%)</title><rect x="12.5" y="1667.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="15.5" y="1678.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.02%)</title><rect x="12.7" y="1651.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="15.7" y="1662.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="13.0" y="1651.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="16.0" y="1662.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (21 samples, 0.49%)</title><rect x="13.3" y="1731.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="16.3" y="1742.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="13.8" y="1715.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="16.8" y="1726.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (17 samples, 0.39%)</title><rect x="14.1" y="1715.0" width="4.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="17.1" y="1726.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (17 samples, 0.39%)</title><rect x="14.1" y="1699.0" width="4.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="17.1" y="1710.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (14 samples, 0.32%)</title><rect x="14.1" y="1683.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="17.1" y="1694.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (1 samples, 0.02%)</title><rect x="14.4" y="1667.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="17.4" y="1678.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="14.7" y="1667.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="17.7" y="1678.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.02%)</title><rect x="14.7" y="1651.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="17.7" y="1662.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="14.9" y="1667.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="17.9" y="1678.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="15.2" y="1667.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="18.2" y="1678.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (6 samples, 0.14%)</title><rect x="15.5" y="1667.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="18.5" y="1678.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (2 samples, 0.05%)</title><rect x="15.5" y="1651.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="18.5" y="1662.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.02%)</title><rect x="16.0" y="1651.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="19.0" y="1662.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="16.3" y="1651.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="19.3" y="1662.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.02%)</title><rect x="16.6" y="1651.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="19.6" y="1662.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.02%)</title><rect x="16.6" y="1635.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="19.6" y="1646.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="16.6" y="1619.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="19.6" y="1630.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.02%)</title><rect x="16.8" y="1651.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="19.8" y="1662.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (2 samples, 0.05%)</title><rect x="17.1" y="1667.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="20.1" y="1678.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.02%)</title><rect x="17.7" y="1667.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="20.7" y="1678.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (2 samples, 0.05%)</title><rect x="17.9" y="1683.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="20.9" y="1694.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="18.5" y="1683.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="21.5" y="1694.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.02%)</title><rect x="18.8" y="1715.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="21.8" y="1726.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (133 samples, 3.08%)</title><rect x="19.0" y="1731.0" width="36.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="22.0" y="1742.0">Sha..</text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="19.0" y="1715.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="22.0" y="1726.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (132 samples, 3.06%)</title><rect x="19.3" y="1715.0" width="36.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="22.3" y="1726.0">Obj..</text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.02%)</title><rect x="19.3" y="1699.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="22.3" y="1710.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (87 samples, 2.02%)</title><rect x="19.6" y="1699.0" width="23.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="22.6" y="1710.0">O..</text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (76 samples, 1.76%)</title><rect x="19.6" y="1683.0" width="20.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="22.6" y="1694.0"></text>
</g>
<g>
<title>SpinPause (11 samples, 0.26%)</title><rect x="40.4" y="1683.0" width="3.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="43.4" y="1694.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (43 samples, 1.00%)</title><rect x="43.4" y="1699.0" width="11.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="46.4" y="1710.0"></text>
</g>
<g>
<title>JavaThreadBlockedOnMonitorEnterState::JavaThreadBlockedOnMonitorEnterState(JavaThread*, ObjectMonitor*) (1 samples, 0.02%)</title><rect x="43.7" y="1683.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="46.7" y="1694.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (39 samples, 0.90%)</title><rect x="43.9" y="1683.0" width="10.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="46.9" y="1694.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (23 samples, 0.53%)</title><rect x="44.5" y="1667.0" width="6.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="47.5" y="1678.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.14%)</title><rect x="50.8" y="1667.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="53.8" y="1678.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (7 samples, 0.16%)</title><rect x="52.4" y="1667.0" width="1.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="55.4" y="1678.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.09%)</title><rect x="53.2" y="1651.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="56.2" y="1662.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.09%)</title><rect x="53.2" y="1635.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="56.2" y="1646.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="53.8" y="1619.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="56.8" y="1630.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="53.8" y="1603.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="56.8" y="1614.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="53.8" y="1587.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="56.8" y="1598.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="54.1" y="1587.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="57.1" y="1598.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.02%)</title><rect x="54.3" y="1667.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="57.3" y="1678.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="54.3" y="1651.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="57.3" y="1662.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="54.6" y="1683.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="57.6" y="1694.0"></text>
</g>
<g>
<title>ObjectSynchronizer::omAlloc(Thread*) (1 samples, 0.02%)</title><rect x="55.2" y="1699.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="58.2" y="1710.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="55.4" y="1731.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="58.4" y="1742.0"></text>
</g>
<g>
<title>[not_walkable] (36 samples, 0.83%)</title><rect x="55.7" y="1731.0" width="9.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="58.7" y="1742.0"></text>
</g>
<g>
<title>[not_walkable_Java] (60 samples, 1.39%)</title><rect x="65.6" y="1731.0" width="16.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="68.6" y="1742.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.02%)</title><rect x="65.6" y="1715.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="68.6" y="1726.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (8 samples, 0.19%)</title><rect x="65.8" y="1715.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="68.8" y="1726.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (8 samples, 0.19%)</title><rect x="65.8" y="1699.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="68.8" y="1710.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.05%)</title><rect x="65.8" y="1683.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="68.8" y="1694.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.02%)</title><rect x="65.8" y="1667.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="68.8" y="1678.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="66.1" y="1667.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="69.1" y="1678.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (6 samples, 0.14%)</title><rect x="66.4" y="1683.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="69.4" y="1694.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (2 samples, 0.05%)</title><rect x="67.2" y="1667.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="70.2" y="1678.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.02%)</title><rect x="67.7" y="1667.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="70.7" y="1678.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="67.7" y="1651.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="70.7" y="1662.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="67.7" y="1635.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="70.7" y="1646.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.07%)</title><rect x="68.0" y="1715.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="71.0" y="1726.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (2 samples, 0.05%)</title><rect x="68.3" y="1699.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="71.3" y="1710.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.05%)</title><rect x="68.8" y="1715.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="71.8" y="1726.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.02%)</title><rect x="69.4" y="1715.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="72.4" y="1726.0"></text>
</g>
<g>
<title>clock_gettime (45 samples, 1.04%)</title><rect x="69.7" y="1715.0" width="12.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="72.7" y="1726.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="69.7" y="1699.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="72.7" y="1710.0"></text>
</g>
<g>
<title>clock_gettime (43 samples, 1.00%)</title><rect x="70.2" y="1699.0" width="11.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="73.2" y="1710.0"></text>
</g>
<g>
<title>[vdso] (38 samples, 0.88%)</title><rect x="71.6" y="1683.0" width="10.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="74.6" y="1694.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.28%)</title><rect x="82.0" y="1731.0" width="3.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="85.0" y="1742.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.30.so (1 samples, 0.02%)</title><rect x="82.0" y="1715.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="85.0" y="1726.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.07%)</title><rect x="82.2" y="1715.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="85.2" y="1726.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="82.8" y="1699.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="85.8" y="1710.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="82.8" y="1683.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="85.8" y="1694.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="82.8" y="1667.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="85.8" y="1678.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="82.8" y="1651.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="85.8" y="1662.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="82.8" y="1635.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="85.8" y="1646.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="82.8" y="1619.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="85.8" y="1630.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="83.1" y="1715.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="86.1" y="1726.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (1 samples, 0.02%)</title><rect x="83.3" y="1715.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="86.3" y="1726.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="83.3" y="1699.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="86.3" y="1710.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="83.3" y="1683.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="86.3" y="1694.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="83.3" y="1667.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="86.3" y="1678.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="83.3" y="1651.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="86.3" y="1662.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="83.3" y="1635.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="86.3" y="1646.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="83.3" y="1619.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="86.3" y="1630.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="83.3" y="1603.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="86.3" y="1614.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="83.3" y="1587.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="86.3" y="1598.0"></text>
</g>
<g>
<title>open (1 samples, 0.02%)</title><rect x="83.6" y="1715.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="86.6" y="1726.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="83.6" y="1699.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="86.6" y="1710.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="83.6" y="1683.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="86.6" y="1694.0"></text>
</g>
<g>
<title>__x64_sys_openat (1 samples, 0.02%)</title><rect x="83.6" y="1667.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="86.6" y="1678.0"></text>
</g>
<g>
<title>do_sys_open (1 samples, 0.02%)</title><rect x="83.6" y="1651.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="86.6" y="1662.0"></text>
</g>
<g>
<title>do_filp_open (1 samples, 0.02%)</title><rect x="83.6" y="1635.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="86.6" y="1646.0"></text>
</g>
<g>
<title>path_openat (1 samples, 0.02%)</title><rect x="83.6" y="1619.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="86.6" y="1630.0"></text>
</g>
<g>
<title>alloc_empty_file (1 samples, 0.02%)</title><rect x="83.6" y="1603.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="86.6" y="1614.0"></text>
</g>
<g>
<title>__alloc_file (1 samples, 0.02%)</title><rect x="83.6" y="1587.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="86.6" y="1598.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="83.6" y="1571.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="86.6" y="1582.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="83.6" y="1555.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="86.6" y="1566.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.12%)</title><rect x="83.9" y="1715.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="86.9" y="1726.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="84.7" y="1699.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="87.7" y="1710.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="84.7" y="1683.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="87.7" y="1694.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="84.7" y="1667.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="87.7" y="1678.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="84.7" y="1651.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="87.7" y="1662.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="84.7" y="1635.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="87.7" y="1646.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="84.7" y="1619.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="87.7" y="1630.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.02%)</title><rect x="85.0" y="1667.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="88.0" y="1678.0"></text>
</g>
<g>
<title>[unknown_Java] (63 samples, 1.46%)</title><rect x="85.3" y="1731.0" width="17.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="88.3" y="1742.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="95.7" y="1715.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="98.7" y="1726.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="95.7" y="1699.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="98.7" y="1710.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="95.9" y="1699.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="98.9" y="1710.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.21%)</title><rect x="96.2" y="1715.0" width="2.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="99.2" y="1726.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.21%)</title><rect x="96.2" y="1699.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="99.2" y="1710.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.21%)</title><rect x="96.2" y="1683.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="99.2" y="1694.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.21%)</title><rect x="96.2" y="1667.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="99.2" y="1678.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.21%)</title><rect x="96.2" y="1651.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="99.2" y="1662.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.21%)</title><rect x="96.2" y="1635.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="99.2" y="1646.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="96.2" y="1619.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="99.2" y="1630.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.19%)</title><rect x="96.5" y="1619.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="99.5" y="1630.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="96.5" y="1603.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="99.5" y="1614.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.16%)</title><rect x="96.7" y="1603.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="99.7" y="1614.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.16%)</title><rect x="96.7" y="1587.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="99.7" y="1598.0"></text>
</g>
<g>
<title>clock_gettime (12 samples, 0.28%)</title><rect x="98.7" y="1715.0" width="3.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="101.7" y="1726.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="101.9" y="1715.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="104.9" y="1726.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="102.2" y="1715.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="105.2" y="1726.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="102.2" y="1699.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="105.2" y="1710.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="102.2" y="1683.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="105.2" y="1694.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="102.2" y="1667.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="105.2" y="1678.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="102.2" y="1651.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="105.2" y="1662.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="102.2" y="1635.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="105.2" y="1646.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="102.5" y="1731.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="105.5" y="1742.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="102.8" y="1715.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="105.8" y="1726.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="102.8" y="1699.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="105.8" y="1710.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,402 samples, 55.71%)</title><rect x="103.0" y="1731.0" width="657.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="106.0" y="1742.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,402 samples, 55.71%)</title><rect x="103.0" y="1715.0" width="657.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="106.0" y="1726.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,402 samples, 55.71%)</title><rect x="103.0" y="1699.0" width="657.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="106.0" y="1710.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>itable stub (3 samples, 0.07%)</title><rect x="103.9" y="1683.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="106.9" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (546 samples, 12.66%)</title><rect x="104.7" y="1683.0" width="149.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="107.7" y="1694.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (4 samples, 0.09%)</title><rect x="105.5" y="1667.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.5" y="1678.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.09%)</title><rect x="105.5" y="1651.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="108.5" y="1662.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (502 samples, 11.64%)</title><rect x="106.6" y="1667.0" width="137.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.6" y="1678.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (499 samples, 11.57%)</title><rect x="106.9" y="1651.0" width="136.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="109.9" y="1662.0">java/util/concurr..</text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="107.7" y="1635.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="110.7" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="108.0" y="1635.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="111.0" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.02%)</title><rect x="108.0" y="1619.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="111.0" y="1630.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.02%)</title><rect x="108.0" y="1603.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="111.0" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.02%)</title><rect x="108.0" y="1587.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.0" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.localInit (1 samples, 0.02%)</title><rect x="108.0" y="1571.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="111.0" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.mix64 (1 samples, 0.02%)</title><rect x="108.0" y="1555.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="111.0" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (1 samples, 0.02%)</title><rect x="108.2" y="1635.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="111.2" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (1 samples, 0.02%)</title><rect x="108.2" y="1619.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="111.2" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$150/1603050069.apply (493 samples, 11.43%)</title><rect x="108.5" y="1635.0" width="134.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="111.5" y="1646.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (491 samples, 11.39%)</title><rect x="109.1" y="1619.0" width="134.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.1" y="1630.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (491 samples, 11.39%)</title><rect x="109.1" y="1603.0" width="134.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="112.1" y="1614.0">jdk/internal/net/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="109.1" y="1587.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="112.1" y="1598.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="109.1" y="1571.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="112.1" y="1582.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.83] (1 samples, 0.02%)</title><rect x="109.1" y="1555.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="112.1" y="1566.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="109.1" y="1539.0" width="0.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="112.1" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.02%)</title><rect x="109.3" y="1587.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.3" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.02%)</title><rect x="109.3" y="1571.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.3" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="109.3" y="1555.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.3" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="109.3" y="1539.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="112.3" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.02%)</title><rect x="109.6" y="1587.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.6" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="109.6" y="1571.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="112.6" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (431 samples, 10.00%)</title><rect x="109.9" y="1587.0" width="117.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="112.9" y="1598.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (431 samples, 10.00%)</title><rect x="109.9" y="1571.0" width="117.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="112.9" y="1582.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (431 samples, 10.00%)</title><rect x="109.9" y="1555.0" width="117.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="112.9" y="1566.0">jdk/internal/n..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (171 samples, 3.97%)</title><rect x="109.9" y="1539.0" width="46.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="112.9" y="1550.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (171 samples, 3.97%)</title><rect x="109.9" y="1523.0" width="46.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="112.9" y="1534.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (171 samples, 3.97%)</title><rect x="109.9" y="1507.0" width="46.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="112.9" y="1518.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.05%)</title><rect x="109.9" y="1491.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.9" y="1502.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="109.9" y="1475.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="112.9" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$352/1505209664.apply (169 samples, 3.92%)</title><rect x="110.4" y="1491.0" width="46.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.4" y="1502.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (169 samples, 3.92%)</title><rect x="110.4" y="1475.0" width="46.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="113.4" y="1486.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (169 samples, 3.92%)</title><rect x="110.4" y="1459.0" width="46.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.4" y="1470.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$158/1087713702.apply (7 samples, 0.16%)</title><rect x="110.4" y="1443.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.4" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (7 samples, 0.16%)</title><rect x="110.4" y="1427.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="113.4" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (7 samples, 0.16%)</title><rect x="110.4" y="1411.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.4" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (5 samples, 0.12%)</title><rect x="111.0" y="1395.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="114.0" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (2 samples, 0.05%)</title><rect x="111.0" y="1379.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.0" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (2 samples, 0.05%)</title><rect x="111.0" y="1363.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="114.0" y="1374.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="111.3" y="1347.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="114.3" y="1358.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="111.3" y="1331.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="114.3" y="1342.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="111.3" y="1315.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="114.3" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (3 samples, 0.07%)</title><rect x="111.5" y="1379.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="114.5" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (3 samples, 0.07%)</title><rect x="111.5" y="1363.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="114.5" y="1374.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.02%)</title><rect x="111.5" y="1347.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="114.5" y="1358.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="111.5" y="1331.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="114.5" y="1342.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="111.5" y="1315.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="114.5" y="1326.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="111.8" y="1347.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.8" y="1358.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="111.8" y="1331.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.8" y="1342.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="111.8" y="1315.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="114.8" y="1326.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="111.8" y="1299.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="114.8" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$163/1625023506.apply (160 samples, 3.71%)</title><rect x="112.3" y="1443.0" width="43.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="115.3" y="1454.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (160 samples, 3.71%)</title><rect x="112.3" y="1427.0" width="43.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.3" y="1438.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (5 samples, 0.12%)</title><rect x="112.3" y="1411.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="115.3" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (5 samples, 0.12%)</title><rect x="112.3" y="1395.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="115.3" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.&lt;init&gt; (1 samples, 0.02%)</title><rect x="112.3" y="1379.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.3" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="112.3" y="1363.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.3" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.05%)</title><rect x="112.6" y="1379.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="115.6" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$443/90862708.apply (2 samples, 0.05%)</title><rect x="112.6" y="1363.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.6" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (2 samples, 0.05%)</title><rect x="112.6" y="1347.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="115.6" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2 samples, 0.05%)</title><rect x="112.6" y="1331.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="115.6" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$158/1087713702.apply (1 samples, 0.02%)</title><rect x="112.6" y="1315.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="115.6" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 0.02%)</title><rect x="112.6" y="1299.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="115.6" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1 samples, 0.02%)</title><rect x="112.6" y="1283.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="115.6" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (1 samples, 0.02%)</title><rect x="112.6" y="1267.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (1 samples, 0.02%)</title><rect x="112.6" y="1251.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.6" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (1 samples, 0.02%)</title><rect x="112.6" y="1235.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="115.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$522/1925782679.accept (1 samples, 0.02%)</title><rect x="112.6" y="1219.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="115.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (1 samples, 0.02%)</title><rect x="112.6" y="1203.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="115.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (1 samples, 0.02%)</title><rect x="112.6" y="1187.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="115.6" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (1 samples, 0.02%)</title><rect x="112.6" y="1171.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="115.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (1 samples, 0.02%)</title><rect x="112.6" y="1155.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="115.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="112.6" y="1139.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="115.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="112.6" y="1123.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="115.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.02%)</title><rect x="112.6" y="1107.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.02%)</title><rect x="112.6" y="1091.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="115.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.02%)</title><rect x="112.6" y="1075.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="115.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.02%)</title><rect x="112.6" y="1059.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="115.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.02%)</title><rect x="112.6" y="1043.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="115.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="112.6" y="1027.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="115.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="112.6" y="1011.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="115.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="112.6" y="995.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="115.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="112.6" y="979.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="115.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.02%)</title><rect x="112.6" y="963.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="115.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.02%)</title><rect x="112.6" y="947.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="115.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.02%)</title><rect x="112.6" y="931.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="115.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.02%)</title><rect x="112.6" y="915.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.02%)</title><rect x="112.6" y="899.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="115.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.02%)</title><rect x="112.6" y="883.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="115.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1 samples, 0.02%)</title><rect x="112.6" y="867.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 0.02%)</title><rect x="112.6" y="851.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="115.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1 samples, 0.02%)</title><rect x="112.6" y="835.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="115.6" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (1 samples, 0.02%)</title><rect x="112.6" y="819.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="115.6" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.02%)</title><rect x="112.6" y="803.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="115.6" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.02%)</title><rect x="112.6" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="115.6" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.02%)</title><rect x="112.6" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (1 samples, 0.02%)</title><rect x="112.6" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="115.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1 samples, 0.02%)</title><rect x="112.6" y="739.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.6" y="750.0"></text>
</g>
<g>
<title>writev (1 samples, 0.02%)</title><rect x="112.6" y="723.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="115.6" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="112.6" y="707.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="115.6" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="112.6" y="691.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="115.6" y="702.0"></text>
</g>
<g>
<title>__x64_sys_writev (1 samples, 0.02%)</title><rect x="112.6" y="675.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="115.6" y="686.0"></text>
</g>
<g>
<title>do_writev (1 samples, 0.02%)</title><rect x="112.6" y="659.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="115.6" y="670.0"></text>
</g>
<g>
<title>vfs_writev (1 samples, 0.02%)</title><rect x="112.6" y="643.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="115.6" y="654.0"></text>
</g>
<g>
<title>do_iter_write (1 samples, 0.02%)</title><rect x="112.6" y="627.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="115.6" y="638.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="112.6" y="611.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="115.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$163/1625023506.apply (1 samples, 0.02%)</title><rect x="112.9" y="1315.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.9" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (1 samples, 0.02%)</title><rect x="112.9" y="1299.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="115.9" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1 samples, 0.02%)</title><rect x="112.9" y="1283.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.9" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (1 samples, 0.02%)</title><rect x="112.9" y="1267.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="115.9" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (1 samples, 0.02%)</title><rect x="112.9" y="1251.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="115.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="112.9" y="1235.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="115.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.02%)</title><rect x="113.2" y="1379.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="116.2" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="113.4" y="1379.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.4" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="113.4" y="1363.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="116.4" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.02%)</title><rect x="113.4" y="1347.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="116.4" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.02%)</title><rect x="113.4" y="1331.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="116.4" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="113.7" y="1411.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="116.7" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.05%)</title><rect x="113.7" y="1395.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="116.7" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (1 samples, 0.02%)</title><rect x="114.0" y="1379.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.0" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="114.0" y="1363.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="117.0" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (153 samples, 3.55%)</title><rect x="114.3" y="1411.0" width="41.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.3" y="1422.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (131 samples, 3.04%)</title><rect x="114.3" y="1395.0" width="35.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.3" y="1406.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (131 samples, 3.04%)</title><rect x="114.3" y="1379.0" width="35.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="117.3" y="1390.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (1 samples, 0.02%)</title><rect x="114.5" y="1363.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.5" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="114.5" y="1347.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.5" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$427/237799779.apply (128 samples, 2.97%)</title><rect x="114.8" y="1363.0" width="35.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.8" y="1374.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (128 samples, 2.97%)</title><rect x="114.8" y="1347.0" width="35.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.8" y="1358.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.07%)</title><rect x="115.1" y="1331.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.1" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.07%)</title><rect x="115.1" y="1315.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.1" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.07%)</title><rect x="115.1" y="1299.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.1" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.07%)</title><rect x="115.1" y="1283.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.07%)</title><rect x="115.1" y="1267.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="118.1" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.07%)</title><rect x="115.1" y="1251.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="118.1" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3 samples, 0.07%)</title><rect x="115.1" y="1235.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.1" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (3 samples, 0.07%)</title><rect x="115.1" y="1219.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (3 samples, 0.07%)</title><rect x="115.1" y="1203.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="118.1" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (3 samples, 0.07%)</title><rect x="115.1" y="1187.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="118.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (3 samples, 0.07%)</title><rect x="115.1" y="1171.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (3 samples, 0.07%)</title><rect x="115.1" y="1155.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (3 samples, 0.07%)</title><rect x="115.1" y="1139.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.1" y="1150.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (2 samples, 0.05%)</title><rect x="115.1" y="1123.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="118.1" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.05%)</title><rect x="115.1" y="1107.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="118.1" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.05%)</title><rect x="115.1" y="1091.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.1" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.05%)</title><rect x="115.1" y="1075.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.1" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (2 samples, 0.05%)</title><rect x="115.1" y="1059.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.1" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (2 samples, 0.05%)</title><rect x="115.1" y="1043.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.1" y="1054.0"></text>
</g>
<g>
<title>writev (2 samples, 0.05%)</title><rect x="115.1" y="1027.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="118.1" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="115.1" y="1011.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="118.1" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="115.1" y="995.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="118.1" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_writev (2 samples, 0.05%)</title><rect x="115.1" y="979.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="118.1" y="990.0"></text>
</g>
<g>
<title>do_writev (2 samples, 0.05%)</title><rect x="115.1" y="963.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="118.1" y="974.0"></text>
</g>
<g>
<title>vfs_writev (2 samples, 0.05%)</title><rect x="115.1" y="947.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="118.1" y="958.0"></text>
</g>
<g>
<title>do_iter_write (2 samples, 0.05%)</title><rect x="115.1" y="931.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="118.1" y="942.0"></text>
</g>
<g>
<title>do_iter_readv_writev (2 samples, 0.05%)</title><rect x="115.1" y="915.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="118.1" y="926.0"></text>
</g>
<g>
<title>sock_write_iter (2 samples, 0.05%)</title><rect x="115.1" y="899.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="118.1" y="910.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.05%)</title><rect x="115.1" y="883.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="118.1" y="894.0"></text>
</g>
<g>
<title>inet6_sendmsg (2 samples, 0.05%)</title><rect x="115.1" y="867.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="118.1" y="878.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.05%)</title><rect x="115.1" y="851.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="118.1" y="862.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (2 samples, 0.05%)</title><rect x="115.1" y="835.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="118.1" y="846.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.05%)</title><rect x="115.1" y="819.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="118.1" y="830.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.05%)</title><rect x="115.1" y="803.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="118.1" y="814.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.05%)</title><rect x="115.1" y="787.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="118.1" y="798.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.05%)</title><rect x="115.1" y="771.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="118.1" y="782.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.05%)</title><rect x="115.1" y="755.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="118.1" y="766.0"></text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.05%)</title><rect x="115.1" y="739.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="118.1" y="750.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.05%)</title><rect x="115.1" y="723.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="118.1" y="734.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.05%)</title><rect x="115.1" y="707.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="118.1" y="718.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.05%)</title><rect x="115.1" y="691.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="118.1" y="702.0"></text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.05%)</title><rect x="115.1" y="675.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="118.1" y="686.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.05%)</title><rect x="115.1" y="659.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="118.1" y="670.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.05%)</title><rect x="115.1" y="643.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="118.1" y="654.0"></text>
</g>
<g>
<title>do_softirq.part.0 (2 samples, 0.05%)</title><rect x="115.1" y="627.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="118.1" y="638.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.05%)</title><rect x="115.1" y="611.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="118.1" y="622.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.05%)</title><rect x="115.1" y="595.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="118.1" y="606.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.05%)</title><rect x="115.1" y="579.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="118.1" y="590.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.05%)</title><rect x="115.1" y="563.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="118.1" y="574.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.05%)</title><rect x="115.1" y="547.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="118.1" y="558.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.05%)</title><rect x="115.1" y="531.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="118.1" y="542.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.05%)</title><rect x="115.1" y="515.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="118.1" y="526.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="115.1" y="499.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="118.1" y="510.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="115.4" y="499.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="118.4" y="510.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="115.4" y="483.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="118.4" y="494.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="115.4" y="467.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="118.4" y="478.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="115.4" y="451.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="118.4" y="462.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="115.4" y="435.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="118.4" y="446.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="115.4" y="419.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="118.4" y="430.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="115.4" y="403.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="118.4" y="414.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="115.4" y="387.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="118.4" y="398.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="115.4" y="371.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="118.4" y="382.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="115.4" y="355.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="118.4" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="115.4" y="339.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="118.4" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="115.4" y="323.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="118.4" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.02%)</title><rect x="115.6" y="1123.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="118.6" y="1134.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="115.6" y="1107.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="118.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (25 samples, 0.58%)</title><rect x="115.9" y="1331.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.9" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (24 samples, 0.56%)</title><rect x="116.2" y="1315.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="119.2" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1 samples, 0.02%)</title><rect x="116.2" y="1299.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="119.2" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.02%)</title><rect x="116.2" y="1283.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="119.2" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.02%)</title><rect x="116.2" y="1267.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="119.2" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (23 samples, 0.53%)</title><rect x="116.5" y="1299.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="119.5" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (23 samples, 0.53%)</title><rect x="116.5" y="1283.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.5" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (1 samples, 0.02%)</title><rect x="116.5" y="1267.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="119.5" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="116.5" y="1251.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="119.5" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="116.5" y="1235.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="119.5" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (16 samples, 0.37%)</title><rect x="116.7" y="1267.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="119.7" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (15 samples, 0.35%)</title><rect x="117.0" y="1251.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="120.0" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (15 samples, 0.35%)</title><rect x="117.0" y="1235.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="120.0" y="1246.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="117.3" y="1219.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="120.3" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="117.3" y="1203.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="120.3" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="117.3" y="1187.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="120.3" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="117.3" y="1171.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="120.3" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.02%)</title><rect x="117.3" y="1155.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="120.3" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (13 samples, 0.30%)</title><rect x="117.5" y="1219.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.5" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (13 samples, 0.30%)</title><rect x="117.5" y="1203.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="120.5" y="1214.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.02%)</title><rect x="117.5" y="1187.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="120.5" y="1198.0"></text>
</g>
<g>
<title>__write (12 samples, 0.28%)</title><rect x="117.8" y="1187.0" width="3.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="120.8" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.23%)</title><rect x="118.4" y="1171.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="121.4" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.23%)</title><rect x="118.4" y="1155.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="121.4" y="1166.0"></text>
</g>
<g>
<title>__x64_sys_write (9 samples, 0.21%)</title><rect x="118.6" y="1139.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="121.6" y="1150.0"></text>
</g>
<g>
<title>ksys_write (9 samples, 0.21%)</title><rect x="118.6" y="1123.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="121.6" y="1134.0"></text>
</g>
<g>
<title>vfs_write (8 samples, 0.19%)</title><rect x="118.9" y="1107.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="121.9" y="1118.0"></text>
</g>
<g>
<title>__vfs_write (7 samples, 0.16%)</title><rect x="119.2" y="1091.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="122.2" y="1102.0"></text>
</g>
<g>
<title>new_sync_write (7 samples, 0.16%)</title><rect x="119.2" y="1075.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="122.2" y="1086.0"></text>
</g>
<g>
<title>pipe_write (7 samples, 0.16%)</title><rect x="119.2" y="1059.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="122.2" y="1070.0"></text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 0.09%)</title><rect x="119.2" y="1043.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="122.2" y="1054.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.09%)</title><rect x="119.2" y="1027.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="122.2" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.09%)</title><rect x="119.2" y="1011.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="122.2" y="1022.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.07%)</title><rect x="120.3" y="1043.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="123.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.02%)</title><rect x="121.1" y="1267.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.1" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (5 samples, 0.12%)</title><rect x="121.4" y="1267.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="124.4" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (4 samples, 0.09%)</title><rect x="121.7" y="1251.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.7" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (4 samples, 0.09%)</title><rect x="121.7" y="1235.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="124.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (4 samples, 0.09%)</title><rect x="121.7" y="1219.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1473981203.linkToTargetMethod (2 samples, 0.05%)</title><rect x="121.9" y="1203.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="124.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2129442232.invoke (2 samples, 0.05%)</title><rect x="121.9" y="1187.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="124.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="121.9" y="1171.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.02%)</title><rect x="121.9" y="1155.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1204481453.invokeStatic (1 samples, 0.02%)</title><rect x="122.2" y="1171.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="125.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.02%)</title><rect x="122.2" y="1155.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.02%)</title><rect x="122.5" y="1203.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (99 samples, 2.30%)</title><rect x="122.7" y="1331.0" width="27.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="125.7" y="1342.0">j..</text>
</g>
<g>
<title>java/lang/Long.toString (1 samples, 0.02%)</title><rect x="123.3" y="1315.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="126.3" y="1326.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (1 samples, 0.02%)</title><rect x="123.3" y="1299.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.3" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.05%)</title><rect x="123.6" y="1315.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="126.6" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.02%)</title><rect x="123.8" y="1299.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (1 samples, 0.02%)</title><rect x="123.8" y="1283.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="124.1" y="1315.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.1" y="1326.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="124.1" y="1299.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="127.1" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.09%)</title><rect x="124.4" y="1315.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="127.4" y="1326.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.07%)</title><rect x="124.7" y="1299.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="127.7" y="1310.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.02%)</title><rect x="125.2" y="1283.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="128.2" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (63 samples, 1.46%)</title><rect x="125.5" y="1315.0" width="17.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="128.5" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.02%)</title><rect x="125.5" y="1299.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="128.5" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (3 samples, 0.07%)</title><rect x="125.8" y="1299.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="128.8" y="1310.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.07%)</title><rect x="125.8" y="1283.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="128.8" y="1294.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.07%)</title><rect x="125.8" y="1267.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="128.8" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.07%)</title><rect x="125.8" y="1251.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="128.8" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.07%)</title><rect x="125.8" y="1235.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="128.8" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.07%)</title><rect x="125.8" y="1219.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="128.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="126.0" y="1203.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.0" y="1214.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="126.0" y="1187.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.05%)</title><rect x="126.0" y="1171.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="129.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.05%)</title><rect x="126.0" y="1155.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (28 samples, 0.65%)</title><rect x="126.6" y="1299.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="129.6" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.09%)</title><rect x="127.4" y="1283.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="130.4" y="1294.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.05%)</title><rect x="127.4" y="1267.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="130.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.isLatin1 (1 samples, 0.02%)</title><rect x="127.4" y="1251.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="130.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.02%)</title><rect x="127.7" y="1251.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="130.7" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="127.7" y="1235.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.7" y="1246.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="127.9" y="1267.0" width="0.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="130.9" y="1278.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext (1 samples, 0.02%)</title><rect x="128.5" y="1283.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.5" y="1294.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (3 samples, 0.07%)</title><rect x="128.8" y="1283.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="131.8" y="1294.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (3 samples, 0.07%)</title><rect x="128.8" y="1267.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.8" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.05%)</title><rect x="129.0" y="1251.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.0" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.05%)</title><rect x="129.0" y="1235.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.0" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.05%)</title><rect x="129.0" y="1219.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="132.0" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.02%)</title><rect x="129.3" y="1203.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="132.3" y="1214.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (6 samples, 0.14%)</title><rect x="129.6" y="1283.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.6" y="1294.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (6 samples, 0.14%)</title><rect x="129.6" y="1267.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="132.6" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (4 samples, 0.09%)</title><rect x="130.1" y="1251.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.1" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.&lt;init&gt; (4 samples, 0.09%)</title><rect x="130.1" y="1235.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.1" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.&lt;init&gt; (3 samples, 0.07%)</title><rect x="130.4" y="1219.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="133.4" y="1230.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.02%)</title><rect x="131.2" y="1283.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="134.2" y="1294.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (1 samples, 0.02%)</title><rect x="131.2" y="1267.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="134.2" y="1278.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="131.2" y="1251.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="134.2" y="1262.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$479/1948513388.test (10 samples, 0.23%)</title><rect x="131.5" y="1283.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.5" y="1294.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (9 samples, 0.21%)</title><rect x="131.8" y="1267.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="134.8" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$268/691028570.test (2 samples, 0.05%)</title><rect x="131.8" y="1251.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.8" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.lambda$static$0 (1 samples, 0.02%)</title><rect x="132.1" y="1235.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="135.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.02%)</title><rect x="132.1" y="1219.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="135.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$94/2068598972.test (7 samples, 0.16%)</title><rect x="132.3" y="1251.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (7 samples, 0.16%)</title><rect x="132.3" y="1235.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.3" y="1246.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$83/477376212.test (7 samples, 0.16%)</title><rect x="132.3" y="1219.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="135.3" y="1230.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (7 samples, 0.16%)</title><rect x="132.3" y="1203.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="135.3" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1072377306.test (7 samples, 0.16%)</title><rect x="132.3" y="1187.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="135.3" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (7 samples, 0.16%)</title><rect x="132.3" y="1171.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="135.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.05%)</title><rect x="132.3" y="1155.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="135.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="132.3" y="1139.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="132.6" y="1139.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="132.6" y="1123.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="132.6" y="1107.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="135.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="132.6" y="1091.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="132.6" y="1075.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="135.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.02%)</title><rect x="132.6" y="1059.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="135.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.12%)</title><rect x="132.9" y="1155.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="135.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.12%)</title><rect x="132.9" y="1139.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="135.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.07%)</title><rect x="132.9" y="1123.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="135.9" y="1134.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="133.4" y="1107.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="136.4" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="133.7" y="1123.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="136.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (2 samples, 0.05%)</title><rect x="134.2" y="1299.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="137.2" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.isConnect (2 samples, 0.05%)</title><rect x="134.2" y="1283.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.2" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.05%)</title><rect x="134.2" y="1267.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.2" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="134.2" y="1251.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="134.2" y="1235.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="137.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="134.5" y="1235.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="137.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.02%)</title><rect x="134.5" y="1219.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="137.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.02%)</title><rect x="134.5" y="1203.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="137.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.02%)</title><rect x="134.5" y="1187.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="137.5" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (29 samples, 0.67%)</title><rect x="134.8" y="1299.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="137.8" y="1310.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (29 samples, 0.67%)</title><rect x="134.8" y="1283.0" width="7.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="137.8" y="1294.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (29 samples, 0.67%)</title><rect x="134.8" y="1267.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.8" y="1278.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (1 samples, 0.02%)</title><rect x="134.8" y="1251.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.8" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (1 samples, 0.02%)</title><rect x="134.8" y="1235.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="137.8" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.02%)</title><rect x="134.8" y="1219.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="137.8" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (4 samples, 0.09%)</title><rect x="135.1" y="1251.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="138.1" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (24 samples, 0.56%)</title><rect x="136.2" y="1251.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="139.2" y="1262.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.accept (23 samples, 0.53%)</title><rect x="136.2" y="1235.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.2" y="1246.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (22 samples, 0.51%)</title><rect x="136.4" y="1219.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="139.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 0.12%)</title><rect x="136.4" y="1203.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="139.4" y="1214.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.accept (2 samples, 0.05%)</title><rect x="136.4" y="1187.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="139.4" y="1198.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.05%)</title><rect x="136.4" y="1171.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="139.4" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.05%)</title><rect x="136.4" y="1155.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="139.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.05%)</title><rect x="136.4" y="1139.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="139.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="136.7" y="1123.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="139.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="136.7" y="1107.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="139.7" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (3 samples, 0.07%)</title><rect x="137.0" y="1187.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.0" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (3 samples, 0.07%)</title><rect x="137.0" y="1171.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="140.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.02%)</title><rect x="137.8" y="1203.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="140.8" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.02%)</title><rect x="137.8" y="1187.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="140.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.14%)</title><rect x="138.1" y="1203.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="141.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.14%)</title><rect x="138.1" y="1187.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="141.1" y="1198.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.get$Lambda (6 samples, 0.14%)</title><rect x="138.1" y="1171.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="141.1" y="1182.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.&lt;init&gt; (6 samples, 0.14%)</title><rect x="138.1" y="1155.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="141.1" y="1166.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="138.6" y="1139.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="141.6" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="139.2" y="1139.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$79/361268035.test (1 samples, 0.02%)</title><rect x="139.4" y="1139.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.4" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.05%)</title><rect x="139.7" y="1203.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="142.7" y="1214.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.accept (2 samples, 0.05%)</title><rect x="139.7" y="1187.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.7" y="1198.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.05%)</title><rect x="139.7" y="1171.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="142.7" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="139.7" y="1155.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.7" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="139.7" y="1139.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="142.7" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="139.7" y="1123.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="142.7" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="139.7" y="1107.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="142.7" y="1118.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="140.0" y="1091.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="143.0" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.19%)</title><rect x="140.3" y="1203.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="140.8" y="1187.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="143.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="140.8" y="1171.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="143.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="140.8" y="1155.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="143.8" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (2 samples, 0.05%)</title><rect x="141.1" y="1187.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.1" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.05%)</title><rect x="141.6" y="1187.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="144.6" y="1198.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="141.6" y="1171.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="144.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="141.6" y="1155.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.05%)</title><rect x="141.6" y="1139.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.02%)</title><rect x="141.6" y="1123.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="144.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.02%)</title><rect x="141.6" y="1107.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.getChar (1 samples, 0.02%)</title><rect x="141.9" y="1123.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.9" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.02%)</title><rect x="142.2" y="1187.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.2" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (1 samples, 0.02%)</title><rect x="142.2" y="1171.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.2" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.02%)</title><rect x="142.4" y="1235.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.4" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (4 samples, 0.09%)</title><rect x="142.7" y="1315.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="145.7" y="1326.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1 samples, 0.02%)</title><rect x="142.7" y="1299.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.7" y="1310.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (1 samples, 0.02%)</title><rect x="142.7" y="1283.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.7" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="143.0" y="1299.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="146.0" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (3 samples, 0.07%)</title><rect x="143.0" y="1283.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1806431167.invoke (3 samples, 0.07%)</title><rect x="143.0" y="1267.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.0" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="143.0" y="1251.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.0" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.02%)</title><rect x="143.0" y="1235.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="143.0" y="1219.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.0" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.02%)</title><rect x="143.3" y="1235.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="146.3" y="1246.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="143.3" y="1219.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="146.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.02%)</title><rect x="143.5" y="1235.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="146.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="143.5" y="1219.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.5" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (5 samples, 0.12%)</title><rect x="143.8" y="1315.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.07%)</title><rect x="143.8" y="1299.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.07%)</title><rect x="143.8" y="1283.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.8" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (1 samples, 0.02%)</title><rect x="144.6" y="1299.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="147.6" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.02%)</title><rect x="144.6" y="1283.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="147.6" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.proxy (1 samples, 0.02%)</title><rect x="144.9" y="1299.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.9" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (17 samples, 0.39%)</title><rect x="145.2" y="1315.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.2" y="1326.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="145.2" y="1299.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.2" y="1310.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="145.2" y="1283.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="148.2" y="1294.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.09%)</title><rect x="145.5" y="1299.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.5" y="1310.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.09%)</title><rect x="145.5" y="1283.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.5" y="1294.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.09%)</title><rect x="145.5" y="1267.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="148.5" y="1278.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.09%)</title><rect x="145.5" y="1251.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.5" y="1262.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.02%)</title><rect x="145.7" y="1235.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="148.7" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="146.0" y="1235.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.0" y="1246.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="146.3" y="1235.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="149.3" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (12 samples, 0.28%)</title><rect x="146.6" y="1299.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.6" y="1310.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (5 samples, 0.12%)</title><rect x="147.1" y="1283.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.1" y="1294.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.12%)</title><rect x="147.1" y="1267.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="150.1" y="1278.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.12%)</title><rect x="147.1" y="1251.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="150.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (5 samples, 0.12%)</title><rect x="147.1" y="1235.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="147.1" y="1219.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="150.1" y="1230.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="147.1" y="1203.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.02%)</title><rect x="147.1" y="1187.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="150.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.02%)</title><rect x="147.4" y="1219.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="150.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.02%)</title><rect x="147.4" y="1203.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="150.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.getChar (3 samples, 0.07%)</title><rect x="147.6" y="1219.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.6" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (5 samples, 0.12%)</title><rect x="148.5" y="1283.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="151.5" y="1294.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateLeft (1 samples, 0.02%)</title><rect x="148.7" y="1267.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="151.7" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (3 samples, 0.07%)</title><rect x="149.0" y="1267.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="152.0" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="149.8" y="1363.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.8" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="149.8" y="1347.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="152.8" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.02%)</title><rect x="149.8" y="1331.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="152.8" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.02%)</title><rect x="149.8" y="1315.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.8" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (22 samples, 0.51%)</title><rect x="150.1" y="1395.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="153.1" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (9 samples, 0.21%)</title><rect x="150.4" y="1379.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="153.4" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.21%)</title><rect x="150.4" y="1363.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.4" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.21%)</title><rect x="150.4" y="1347.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.4" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (9 samples, 0.21%)</title><rect x="150.4" y="1331.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.4" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (9 samples, 0.21%)</title><rect x="150.4" y="1315.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="153.4" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.02%)</title><rect x="150.4" y="1299.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.4" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4 samples, 0.09%)</title><rect x="150.7" y="1299.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="153.7" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.run (4 samples, 0.09%)</title><rect x="150.7" y="1283.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.7" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (4 samples, 0.09%)</title><rect x="150.7" y="1267.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.7" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (1 samples, 0.02%)</title><rect x="150.7" y="1251.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.02%)</title><rect x="150.7" y="1235.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (1 samples, 0.02%)</title><rect x="150.9" y="1251.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.9" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.05%)</title><rect x="151.2" y="1251.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.2" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.02%)</title><rect x="151.5" y="1235.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.5" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.02%)</title><rect x="151.5" y="1219.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.5" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$589/1973295159.run (1 samples, 0.02%)</title><rect x="151.5" y="1203.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.02%)</title><rect x="151.5" y="1187.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="154.5" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.02%)</title><rect x="151.5" y="1171.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="154.5" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (1 samples, 0.02%)</title><rect x="151.5" y="1155.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="154.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.isFinished (1 samples, 0.02%)</title><rect x="151.5" y="1139.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="154.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (4 samples, 0.09%)</title><rect x="151.8" y="1299.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="154.8" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.07%)</title><rect x="152.0" y="1283.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="155.0" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.02%)</title><rect x="152.0" y="1267.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="155.0" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.02%)</title><rect x="152.0" y="1251.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.0" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.02%)</title><rect x="152.0" y="1235.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.0" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="152.0" y="1219.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="155.0" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="152.0" y="1203.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.0" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="152.0" y="1187.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="155.0" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="152.0" y="1171.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.05%)</title><rect x="152.3" y="1267.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.run (2 samples, 0.05%)</title><rect x="152.3" y="1251.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="155.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.05%)</title><rect x="152.3" y="1235.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="155.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1 samples, 0.02%)</title><rect x="152.3" y="1219.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="155.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.02%)</title><rect x="152.6" y="1219.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.02%)</title><rect x="152.6" y="1203.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.02%)</title><rect x="152.6" y="1187.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.6" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$589/1973295159.run (1 samples, 0.02%)</title><rect x="152.6" y="1171.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.02%)</title><rect x="152.6" y="1155.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="155.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.02%)</title><rect x="152.6" y="1139.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="155.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (1 samples, 0.02%)</title><rect x="152.6" y="1123.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.isFinished (1 samples, 0.02%)</title><rect x="152.6" y="1107.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (12 samples, 0.28%)</title><rect x="152.8" y="1379.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="155.8" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.failedFuture (2 samples, 0.05%)</title><rect x="156.1" y="1443.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="159.1" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeExceptionally (2 samples, 0.05%)</title><rect x="156.1" y="1427.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="159.1" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (260 samples, 6.03%)</title><rect x="156.7" y="1539.0" width="71.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="159.7" y="1550.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.12%)</title><rect x="156.7" y="1523.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="159.7" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.12%)</title><rect x="156.7" y="1507.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="159.7" y="1518.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="156.7" y="1491.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="159.7" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$350/1291528467.apply (4 samples, 0.09%)</title><rect x="157.0" y="1491.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="160.0" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (2 samples, 0.05%)</title><rect x="157.5" y="1475.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="160.5" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (16 samples, 0.37%)</title><rect x="158.0" y="1523.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="161.0" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (16 samples, 0.37%)</title><rect x="158.0" y="1507.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="161.0" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.07%)</title><rect x="158.0" y="1491.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.0" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (3 samples, 0.07%)</title><rect x="158.0" y="1475.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="161.0" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.07%)</title><rect x="158.0" y="1459.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="161.0" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.07%)</title><rect x="158.0" y="1443.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="161.0" y="1454.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="158.0" y="1427.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="161.0" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$293/1705122973.accept (1 samples, 0.02%)</title><rect x="158.6" y="1427.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="161.6" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (13 samples, 0.30%)</title><rect x="158.9" y="1491.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="161.9" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (13 samples, 0.30%)</title><rect x="158.9" y="1475.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="161.9" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.02%)</title><rect x="162.2" y="1459.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="165.2" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (239 samples, 5.54%)</title><rect x="162.4" y="1523.0" width="65.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="165.4" y="1534.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (218 samples, 5.06%)</title><rect x="162.4" y="1507.0" width="59.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="165.4" y="1518.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (218 samples, 5.06%)</title><rect x="162.4" y="1491.0" width="59.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="165.4" y="1502.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (216 samples, 5.01%)</title><rect x="162.4" y="1475.0" width="59.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="165.4" y="1486.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.05%)</title><rect x="162.4" y="1459.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="165.4" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$184/1238990080.apply (2 samples, 0.05%)</title><rect x="162.4" y="1443.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.4" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$184/1238990080.apply (214 samples, 4.96%)</title><rect x="163.0" y="1459.0" width="58.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="166.0" y="1470.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (214 samples, 4.96%)</title><rect x="163.0" y="1443.0" width="58.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="166.0" y="1454.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (214 samples, 4.96%)</title><rect x="163.0" y="1427.0" width="58.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="166.0" y="1438.0">jdk/in..</text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (1 samples, 0.02%)</title><rect x="166.0" y="1411.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="169.0" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (107 samples, 2.48%)</title><rect x="166.3" y="1411.0" width="29.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="169.3" y="1422.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (106 samples, 2.46%)</title><rect x="166.5" y="1395.0" width="29.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="169.5" y="1406.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (105 samples, 2.44%)</title><rect x="166.8" y="1379.0" width="28.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="169.8" y="1390.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.&lt;init&gt; (4 samples, 0.09%)</title><rect x="167.1" y="1363.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="170.1" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (4 samples, 0.09%)</title><rect x="167.1" y="1347.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.1" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$290/1393051360.apply (100 samples, 2.32%)</title><rect x="168.2" y="1363.0" width="27.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="171.2" y="1374.0">j..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="168.2" y="1347.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="171.2" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (99 samples, 2.30%)</title><rect x="168.4" y="1347.0" width="27.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="171.4" y="1358.0">j..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="168.4" y="1331.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="171.4" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (98 samples, 2.27%)</title><rect x="168.7" y="1331.0" width="26.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="171.7" y="1342.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (96 samples, 2.23%)</title><rect x="169.3" y="1315.0" width="26.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="172.3" y="1326.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (83 samples, 1.92%)</title><rect x="169.3" y="1299.0" width="22.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="172.3" y="1310.0">j..</text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (2 samples, 0.05%)</title><rect x="169.3" y="1283.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="172.3" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="169.3" y="1267.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="172.3" y="1278.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (1 samples, 0.02%)</title><rect x="169.8" y="1283.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="172.8" y="1294.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="169.8" y="1267.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="172.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="169.8" y="1251.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="172.8" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (74 samples, 1.72%)</title><rect x="170.1" y="1283.0" width="20.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="173.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (73 samples, 1.69%)</title><rect x="170.4" y="1267.0" width="19.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="173.4" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (73 samples, 1.69%)</title><rect x="170.4" y="1251.0" width="19.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/501107890.linkToTargetMethod (2 samples, 0.05%)</title><rect x="170.6" y="1235.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="170.9" y="1219.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.9" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/1267556427.get$Lambda (1 samples, 0.02%)</title><rect x="170.9" y="1203.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="173.9" y="1214.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (70 samples, 1.62%)</title><rect x="171.2" y="1235.0" width="19.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="174.2" y="1246.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="171.5" y="1219.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="174.5" y="1230.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="171.7" y="1219.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="174.7" y="1230.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="172.0" y="1219.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.0" y="1230.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (55 samples, 1.28%)</title><rect x="172.3" y="1219.0" width="15.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="175.3" y="1230.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.02%)</title><rect x="173.1" y="1203.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="176.1" y="1214.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="173.4" y="1203.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="176.4" y="1214.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (1 samples, 0.02%)</title><rect x="173.6" y="1203.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="176.6" y="1214.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (5 samples, 0.12%)</title><rect x="173.9" y="1203.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="176.9" y="1214.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (4 samples, 0.09%)</title><rect x="174.2" y="1187.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="177.2" y="1198.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.05%)</title><rect x="175.3" y="1203.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="178.3" y="1214.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (7 samples, 0.16%)</title><rect x="175.8" y="1203.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="178.8" y="1214.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.02%)</title><rect x="176.4" y="1187.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="179.4" y="1198.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.02%)</title><rect x="176.7" y="1187.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="179.7" y="1198.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.02%)</title><rect x="176.9" y="1187.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="179.9" y="1198.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.02%)</title><rect x="176.9" y="1171.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="179.9" y="1182.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.02%)</title><rect x="177.2" y="1187.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="180.2" y="1198.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.02%)</title><rect x="177.5" y="1187.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="180.5" y="1198.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.07%)</title><rect x="177.8" y="1203.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="180.8" y="1214.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.02%)</title><rect x="178.6" y="1203.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="181.6" y="1214.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.07%)</title><rect x="178.8" y="1203.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="181.8" y="1214.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (3 samples, 0.07%)</title><rect x="179.7" y="1203.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="182.7" y="1214.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.02%)</title><rect x="180.5" y="1203.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="183.5" y="1214.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (10 samples, 0.23%)</title><rect x="180.8" y="1203.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="183.8" y="1214.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (9 samples, 0.21%)</title><rect x="180.8" y="1187.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="183.8" y="1198.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.09%)</title><rect x="181.0" y="1171.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="184.0" y="1182.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.07%)</title><rect x="181.3" y="1155.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="184.3" y="1166.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="182.1" y="1171.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="185.1" y="1182.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (3 samples, 0.07%)</title><rect x="182.4" y="1171.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="185.4" y="1182.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.02%)</title><rect x="183.2" y="1187.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="186.2" y="1198.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (14 samples, 0.32%)</title><rect x="183.5" y="1203.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="186.5" y="1214.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.02%)</title><rect x="185.1" y="1187.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="188.1" y="1198.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.02%)</title><rect x="185.1" y="1171.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="188.1" y="1182.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (5 samples, 0.12%)</title><rect x="185.4" y="1187.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="188.4" y="1198.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.05%)</title><rect x="186.8" y="1187.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="189.8" y="1198.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.05%)</title><rect x="186.8" y="1171.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="189.8" y="1182.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.05%)</title><rect x="186.8" y="1155.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="189.8" y="1166.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="187.1" y="1139.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="190.1" y="1150.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.02%)</title><rect x="187.3" y="1219.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="190.3" y="1230.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.05%)</title><rect x="187.6" y="1219.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="190.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/1267556427.run (7 samples, 0.16%)</title><rect x="188.1" y="1219.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="191.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (7 samples, 0.16%)</title><rect x="188.1" y="1203.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="191.1" y="1214.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (7 samples, 0.16%)</title><rect x="188.1" y="1187.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (4 samples, 0.09%)</title><rect x="188.4" y="1171.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.4" y="1182.0"></text>
</g>
<g>
<title>java/lang/System.checkKey (2 samples, 0.05%)</title><rect x="188.4" y="1155.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.05%)</title><rect x="188.4" y="1139.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="191.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="188.7" y="1123.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="191.7" y="1134.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.02%)</title><rect x="188.7" y="1107.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="191.7" y="1118.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.05%)</title><rect x="189.0" y="1155.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="192.0" y="1166.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.05%)</title><rect x="189.0" y="1139.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="192.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.05%)</title><rect x="189.0" y="1123.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="192.0" y="1134.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.05%)</title><rect x="189.5" y="1171.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="189.8" y="1155.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="192.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="189.8" y="1139.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="192.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="189.8" y="1123.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="192.8" y="1134.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="190.1" y="1219.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="193.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (6 samples, 0.14%)</title><rect x="190.3" y="1283.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="193.3" y="1294.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.09%)</title><rect x="190.3" y="1267.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="193.3" y="1278.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.09%)</title><rect x="190.3" y="1251.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="193.3" y="1262.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.09%)</title><rect x="190.3" y="1235.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="193.3" y="1246.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.09%)</title><rect x="190.3" y="1219.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="193.3" y="1230.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.09%)</title><rect x="190.3" y="1203.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="193.3" y="1214.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.07%)</title><rect x="190.3" y="1187.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="193.3" y="1198.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="191.2" y="1187.0" width="0.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="194.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteBuffer (2 samples, 0.05%)</title><rect x="191.4" y="1267.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="194.4" y="1278.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putShort (1 samples, 0.02%)</title><rect x="191.7" y="1251.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="194.7" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putShortUnaligned (1 samples, 0.02%)</title><rect x="191.7" y="1235.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="194.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (13 samples, 0.30%)</title><rect x="192.0" y="1299.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="195.0" y="1310.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.09%)</title><rect x="192.0" y="1283.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="195.0" y="1294.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="192.8" y="1267.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="195.8" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (9 samples, 0.21%)</title><rect x="193.1" y="1283.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="196.1" y="1294.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (6 samples, 0.14%)</title><rect x="193.6" y="1267.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.6" y="1278.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.14%)</title><rect x="193.6" y="1251.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.6" y="1262.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.14%)</title><rect x="193.6" y="1235.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="196.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.05%)</title><rect x="193.6" y="1219.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="196.6" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.09%)</title><rect x="194.2" y="1219.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="197.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.07%)</title><rect x="194.2" y="1203.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="197.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.05%)</title><rect x="194.4" y="1187.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="197.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.02%)</title><rect x="194.7" y="1171.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="197.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.getChar (1 samples, 0.02%)</title><rect x="195.0" y="1203.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="198.0" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.02%)</title><rect x="195.3" y="1267.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="198.3" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (1 samples, 0.02%)</title><rect x="195.3" y="1251.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (94 samples, 2.18%)</title><rect x="195.5" y="1411.0" width="25.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="198.5" y="1422.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (91 samples, 2.11%)</title><rect x="196.4" y="1395.0" width="24.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="199.4" y="1406.0">j..</text>
</g>
<g>
<title>java/util/LinkedList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="196.6" y="1379.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="199.6" y="1390.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="196.6" y="1363.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.6" y="1374.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="196.6" y="1347.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="199.6" y="1358.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 0.02%)</title><rect x="196.6" y="1331.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.6" y="1342.0"></text>
</g>
<g>
<title>java/util/Objects.hash (1 samples, 0.02%)</title><rect x="196.9" y="1379.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="199.9" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (1 samples, 0.02%)</title><rect x="197.2" y="1379.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="200.2" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (6 samples, 0.14%)</title><rect x="197.5" y="1379.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="200.5" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="197.7" y="1363.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="200.7" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="197.7" y="1347.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="200.7" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.get$Lambda (1 samples, 0.02%)</title><rect x="197.7" y="1331.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="200.7" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.&lt;init&gt; (1 samples, 0.02%)</title><rect x="197.7" y="1315.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="200.7" y="1326.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="197.7" y="1299.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="200.7" y="1310.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="197.7" y="1283.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="200.7" y="1294.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="197.7" y="1267.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="200.7" y="1278.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="197.7" y="1251.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="200.7" y="1262.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.02%)</title><rect x="197.7" y="1235.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="200.7" y="1246.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.02%)</title><rect x="197.7" y="1219.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="200.7" y="1230.0"></text>
</g>
<g>
<title>rcu_report_qs_rnp (1 samples, 0.02%)</title><rect x="197.7" y="1203.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="200.7" y="1214.0"></text>
</g>
<g>
<title>rcu_gp_kthread_wake (1 samples, 0.02%)</title><rect x="197.7" y="1187.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="200.7" y="1198.0"></text>
</g>
<g>
<title>swake_up_one (1 samples, 0.02%)</title><rect x="197.7" y="1171.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="200.7" y="1182.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="197.7" y="1155.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="200.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (2 samples, 0.05%)</title><rect x="198.0" y="1363.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="201.0" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.02%)</title><rect x="198.5" y="1363.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="201.5" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (1 samples, 0.02%)</title><rect x="198.5" y="1347.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="201.5" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.&lt;init&gt; (1 samples, 0.02%)</title><rect x="198.5" y="1331.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.5" y="1342.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="198.5" y="1315.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="201.5" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.02%)</title><rect x="198.8" y="1363.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="201.8" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.02%)</title><rect x="198.8" y="1347.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="201.8" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.02%)</title><rect x="198.8" y="1331.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="201.8" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.02%)</title><rect x="198.8" y="1315.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="201.8" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (25 samples, 0.58%)</title><rect x="199.1" y="1379.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="202.1" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (25 samples, 0.58%)</title><rect x="199.1" y="1363.0" width="6.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="202.1" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.&lt;init&gt; (1 samples, 0.02%)</title><rect x="199.1" y="1347.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="202.1" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (24 samples, 0.56%)</title><rect x="199.4" y="1347.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="202.4" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.07%)</title><rect x="199.4" y="1331.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="202.4" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="199.6" y="1315.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="202.6" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.02%)</title><rect x="199.6" y="1299.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="202.6" y="1310.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.02%)</title><rect x="199.6" y="1283.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="202.6" y="1294.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.02%)</title><rect x="199.6" y="1267.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="202.6" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="199.9" y="1315.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="202.9" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.02%)</title><rect x="199.9" y="1299.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="202.9" y="1310.0"></text>
</g>
<g>
<title>java/util/Objects.hash (1 samples, 0.02%)</title><rect x="199.9" y="1283.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="202.9" y="1294.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (1 samples, 0.02%)</title><rect x="199.9" y="1267.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="202.9" y="1278.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (1 samples, 0.02%)</title><rect x="199.9" y="1251.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="202.9" y="1262.0"></text>
</g>
<g>
<title>java/util/LinkedList.removeFirst (3 samples, 0.07%)</title><rect x="200.2" y="1331.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="203.2" y="1342.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (3 samples, 0.07%)</title><rect x="200.2" y="1315.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="203.2" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (18 samples, 0.42%)</title><rect x="201.0" y="1331.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="204.0" y="1342.0"></text>
</g>
<g>
<title>java/lang/Object.equals (1 samples, 0.02%)</title><rect x="201.0" y="1315.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="204.0" y="1326.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (2 samples, 0.05%)</title><rect x="201.3" y="1315.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.3" y="1326.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (2 samples, 0.05%)</title><rect x="201.3" y="1299.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="204.3" y="1310.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (2 samples, 0.05%)</title><rect x="201.3" y="1283.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="204.3" y="1294.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (15 samples, 0.35%)</title><rect x="201.8" y="1315.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.8" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (56 samples, 1.30%)</title><rect x="205.9" y="1379.0" width="15.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="208.9" y="1390.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (56 samples, 1.30%)</title><rect x="205.9" y="1363.0" width="15.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.9" y="1374.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (39 samples, 0.90%)</title><rect x="206.2" y="1347.0" width="10.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="209.2" y="1358.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.02%)</title><rect x="206.5" y="1331.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="209.5" y="1342.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (2 samples, 0.05%)</title><rect x="206.8" y="1331.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="209.8" y="1342.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.02%)</title><rect x="207.3" y="1331.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="210.3" y="1342.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.05%)</title><rect x="207.6" y="1331.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="210.6" y="1342.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (2 samples, 0.05%)</title><rect x="207.6" y="1315.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="210.6" y="1326.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.02%)</title><rect x="208.1" y="1331.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="211.1" y="1342.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.02%)</title><rect x="208.4" y="1331.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="211.4" y="1342.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (8 samples, 0.19%)</title><rect x="208.7" y="1331.0" width="2.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="211.7" y="1342.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.02%)</title><rect x="208.7" y="1315.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="211.7" y="1326.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="208.7" y="1299.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="211.7" y="1310.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="208.7" y="1283.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="211.7" y="1294.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="208.7" y="1267.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="211.7" y="1278.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (5 samples, 0.12%)</title><rect x="208.9" y="1315.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="211.9" y="1326.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (4 samples, 0.09%)</title><rect x="209.2" y="1299.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="212.2" y="1310.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.02%)</title><rect x="210.3" y="1315.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="213.3" y="1326.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="210.6" y="1315.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="213.6" y="1326.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.05%)</title><rect x="210.9" y="1331.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="213.9" y="1342.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.05%)</title><rect x="211.4" y="1331.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="214.4" y="1342.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="212.0" y="1331.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="215.0" y="1342.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (1 samples, 0.02%)</title><rect x="212.2" y="1331.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="215.2" y="1342.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.02%)</title><rect x="212.5" y="1331.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="215.5" y="1342.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.02%)</title><rect x="212.8" y="1331.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="215.8" y="1342.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (4 samples, 0.09%)</title><rect x="213.1" y="1331.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="216.1" y="1342.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.07%)</title><rect x="213.3" y="1315.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="216.3" y="1326.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.05%)</title><rect x="213.3" y="1299.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="216.3" y="1310.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="213.9" y="1299.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="216.9" y="1310.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (10 samples, 0.23%)</title><rect x="214.1" y="1331.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="217.1" y="1342.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.07%)</title><rect x="215.0" y="1315.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="218.0" y="1326.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.05%)</title><rect x="215.2" y="1299.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="218.2" y="1310.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.09%)</title><rect x="215.8" y="1315.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="218.8" y="1326.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.05%)</title><rect x="216.3" y="1299.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="219.3" y="1310.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.05%)</title><rect x="216.3" y="1283.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="219.3" y="1294.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.05%)</title><rect x="216.3" y="1267.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="219.3" y="1278.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.02%)</title><rect x="216.9" y="1347.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="219.9" y="1358.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.05%)</title><rect x="217.2" y="1347.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="220.2" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$194/211908476.run (10 samples, 0.23%)</title><rect x="217.7" y="1347.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="220.7" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (7 samples, 0.16%)</title><rect x="218.5" y="1331.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="221.5" y="1342.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (7 samples, 0.16%)</title><rect x="218.5" y="1315.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.5" y="1326.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (7 samples, 0.16%)</title><rect x="218.5" y="1299.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="221.5" y="1310.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (7 samples, 0.16%)</title><rect x="218.5" y="1283.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="221.5" y="1294.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (6 samples, 0.14%)</title><rect x="218.8" y="1267.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="221.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.02%)</title><rect x="218.8" y="1251.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="221.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.02%)</title><rect x="218.8" y="1235.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="221.8" y="1246.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (1 samples, 0.02%)</title><rect x="218.8" y="1219.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="221.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="219.1" y="1251.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="222.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="219.1" y="1235.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="222.1" y="1246.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (4 samples, 0.09%)</title><rect x="219.3" y="1251.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="222.3" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="219.3" y="1235.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.next (1 samples, 0.02%)</title><rect x="219.6" y="1235.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="222.6" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (1 samples, 0.02%)</title><rect x="219.6" y="1219.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="222.6" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (2 samples, 0.05%)</title><rect x="219.9" y="1235.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="222.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (2 samples, 0.05%)</title><rect x="219.9" y="1219.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="222.9" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (2 samples, 0.05%)</title><rect x="219.9" y="1203.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="222.9" y="1214.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.02%)</title><rect x="220.4" y="1347.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="223.4" y="1358.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.05%)</title><rect x="220.7" y="1347.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="223.7" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (1 samples, 0.02%)</title><rect x="221.3" y="1411.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="224.3" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="221.5" y="1475.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="224.5" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="221.5" y="1459.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="224.5" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (2 samples, 0.05%)</title><rect x="221.5" y="1443.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="224.5" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (2 samples, 0.05%)</title><rect x="221.5" y="1427.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="224.5" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.02%)</title><rect x="222.1" y="1507.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="225.1" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="222.1" y="1491.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="225.1" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="222.1" y="1475.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="225.1" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="222.1" y="1459.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="225.1" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (20 samples, 0.46%)</title><rect x="222.4" y="1507.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="225.4" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="222.4" y="1491.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="225.4" y="1502.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="222.4" y="1475.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="225.4" y="1486.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="222.4" y="1459.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="225.4" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (17 samples, 0.39%)</title><rect x="222.6" y="1491.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="225.6" y="1502.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.05%)</title><rect x="222.6" y="1475.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="225.6" y="1486.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.05%)</title><rect x="222.6" y="1459.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="225.6" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (15 samples, 0.35%)</title><rect x="223.2" y="1475.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="226.2" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2128155258.linkToTargetMethod (15 samples, 0.35%)</title><rect x="223.2" y="1459.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="226.2" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2090995829.invoke (15 samples, 0.35%)</title><rect x="223.2" y="1443.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="226.2" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.09%)</title><rect x="223.2" y="1427.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="226.2" y="1438.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (4 samples, 0.09%)</title><rect x="223.2" y="1411.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="226.2" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/892748663.invoke (11 samples, 0.26%)</title><rect x="224.3" y="1427.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="227.3" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.19%)</title><rect x="224.3" y="1411.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.3" y="1422.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixCoder (1 samples, 0.02%)</title><rect x="224.3" y="1395.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="227.3" y="1406.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.05%)</title><rect x="224.5" y="1395.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="227.5" y="1406.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (3 samples, 0.07%)</title><rect x="225.1" y="1395.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="228.1" y="1406.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (3 samples, 0.07%)</title><rect x="225.1" y="1379.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="228.1" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.05%)</title><rect x="225.9" y="1395.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="228.9" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.05%)</title><rect x="225.9" y="1379.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="228.9" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1326229544.invokeStatic (3 samples, 0.07%)</title><rect x="226.5" y="1411.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="229.5" y="1422.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (2 samples, 0.05%)</title><rect x="226.7" y="1395.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="229.7" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.05%)</title><rect x="227.3" y="1491.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="230.3" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="227.3" y="1475.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="230.3" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.02%)</title><rect x="227.3" y="1459.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="230.3" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="227.3" y="1443.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="230.3" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="227.3" y="1427.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="230.3" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.02%)</title><rect x="227.6" y="1475.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="230.6" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.02%)</title><rect x="227.6" y="1459.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="230.6" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (29 samples, 0.67%)</title><rect x="227.8" y="1587.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="230.8" y="1598.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (8 samples, 0.19%)</title><rect x="227.8" y="1571.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="230.8" y="1582.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.19%)</title><rect x="227.8" y="1555.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="230.8" y="1566.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.05%)</title><rect x="228.4" y="1539.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="231.4" y="1550.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="228.4" y="1523.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="231.4" y="1534.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="228.4" y="1507.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="231.4" y="1518.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="228.4" y="1491.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="231.4" y="1502.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="228.7" y="1491.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="231.7" y="1502.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.getChar (1 samples, 0.02%)</title><rect x="228.7" y="1475.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="231.7" y="1486.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.07%)</title><rect x="228.9" y="1539.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.9" y="1550.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (3 samples, 0.07%)</title><rect x="228.9" y="1523.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="231.9" y="1534.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="229.2" y="1507.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="232.2" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.02%)</title><rect x="229.5" y="1507.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="232.5" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.02%)</title><rect x="229.7" y="1539.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="232.7" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.compareTo (1 samples, 0.02%)</title><rect x="229.7" y="1523.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="232.7" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.02%)</title><rect x="229.7" y="1507.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="232.7" y="1518.0"></text>
</g>
<g>
<title>java/time/Instant.compareTo (1 samples, 0.02%)</title><rect x="229.7" y="1491.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="232.7" y="1502.0"></text>
</g>
<g>
<title>java/lang/Long.compare (1 samples, 0.02%)</title><rect x="229.7" y="1475.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="232.7" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (21 samples, 0.49%)</title><rect x="230.0" y="1571.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="233.0" y="1582.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (21 samples, 0.49%)</title><rect x="230.0" y="1555.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="233.0" y="1566.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (21 samples, 0.49%)</title><rect x="230.0" y="1539.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="233.0" y="1550.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="230.3" y="1523.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="233.3" y="1534.0"></text>
</g>
<g>
<title>__write (19 samples, 0.44%)</title><rect x="230.6" y="1523.0" width="5.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="233.6" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.35%)</title><rect x="231.7" y="1507.0" width="4.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="234.7" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.35%)</title><rect x="231.7" y="1491.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="234.7" y="1502.0"></text>
</g>
<g>
<title>__x64_sys_write (14 samples, 0.32%)</title><rect x="231.9" y="1475.0" width="3.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="234.9" y="1486.0"></text>
</g>
<g>
<title>ksys_write (14 samples, 0.32%)</title><rect x="231.9" y="1459.0" width="3.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="234.9" y="1470.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.02%)</title><rect x="231.9" y="1443.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="234.9" y="1454.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="231.9" y="1427.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="234.9" y="1438.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="231.9" y="1411.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="234.9" y="1422.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="232.2" y="1443.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="235.2" y="1454.0"></text>
</g>
<g>
<title>vfs_write (12 samples, 0.28%)</title><rect x="232.5" y="1443.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="235.5" y="1454.0"></text>
</g>
<g>
<title>__vfs_write (11 samples, 0.26%)</title><rect x="232.5" y="1427.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="235.5" y="1438.0"></text>
</g>
<g>
<title>new_sync_write (11 samples, 0.26%)</title><rect x="232.5" y="1411.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="235.5" y="1422.0"></text>
</g>
<g>
<title>pipe_write (11 samples, 0.26%)</title><rect x="232.5" y="1395.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="235.5" y="1406.0"></text>
</g>
<g>
<title>__mnt_want_write_file (1 samples, 0.02%)</title><rect x="232.5" y="1379.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="235.5" y="1390.0"></text>
</g>
<g>
<title>__wake_up_sync_key (8 samples, 0.19%)</title><rect x="232.8" y="1379.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="235.8" y="1390.0"></text>
</g>
<g>
<title>__wake_up_common_lock (8 samples, 0.19%)</title><rect x="232.8" y="1363.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="235.8" y="1374.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.19%)</title><rect x="232.8" y="1347.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="235.8" y="1358.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="234.9" y="1379.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="237.9" y="1390.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.02%)</title><rect x="235.2" y="1379.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="238.2" y="1390.0"></text>
</g>
<g>
<title>__mnt_want_write_file (1 samples, 0.02%)</title><rect x="235.2" y="1363.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="238.2" y="1374.0"></text>
</g>
<g>
<title>__mnt_want_write (1 samples, 0.02%)</title><rect x="235.2" y="1347.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="238.2" y="1358.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.02%)</title><rect x="235.5" y="1427.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="238.5" y="1438.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.02%)</title><rect x="235.5" y="1411.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="238.5" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (21 samples, 0.49%)</title><rect x="235.8" y="1587.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="238.8" y="1598.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (8 samples, 0.19%)</title><rect x="236.0" y="1571.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="239.0" y="1582.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (8 samples, 0.19%)</title><rect x="236.0" y="1555.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.0" y="1566.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (8 samples, 0.19%)</title><rect x="236.0" y="1539.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="239.0" y="1550.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (8 samples, 0.19%)</title><rect x="236.0" y="1523.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="239.0" y="1534.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.02%)</title><rect x="237.7" y="1507.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="240.7" y="1518.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (1 samples, 0.02%)</title><rect x="238.0" y="1507.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="241.0" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (12 samples, 0.28%)</title><rect x="238.2" y="1571.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="241.2" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (1 samples, 0.02%)</title><rect x="238.2" y="1555.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="241.2" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (11 samples, 0.26%)</title><rect x="238.5" y="1555.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="241.5" y="1566.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (9 samples, 0.21%)</title><rect x="239.0" y="1539.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.0" y="1550.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (2 samples, 0.05%)</title><rect x="239.0" y="1523.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.0" y="1534.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (2 samples, 0.05%)</title><rect x="239.0" y="1507.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.0" y="1518.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (7 samples, 0.16%)</title><rect x="239.6" y="1523.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="242.6" y="1534.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (7 samples, 0.16%)</title><rect x="239.6" y="1507.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="242.6" y="1518.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="239.6" y="1491.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="242.6" y="1502.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="240.1" y="1491.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="243.1" y="1502.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.05%)</title><rect x="240.4" y="1491.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="243.4" y="1502.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (2 samples, 0.05%)</title><rect x="240.4" y="1475.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="243.4" y="1486.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.05%)</title><rect x="241.0" y="1491.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="244.0" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (7 samples, 0.16%)</title><rect x="241.5" y="1587.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="244.5" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (7 samples, 0.16%)</title><rect x="241.5" y="1571.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="244.5" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.timeout (2 samples, 0.05%)</title><rect x="241.5" y="1555.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="244.5" y="1566.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.05%)</title><rect x="241.5" y="1539.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="244.5" y="1550.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (2 samples, 0.05%)</title><rect x="241.5" y="1523.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="244.5" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (5 samples, 0.12%)</title><rect x="242.1" y="1555.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="245.1" y="1566.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.05%)</title><rect x="242.6" y="1539.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.6" y="1550.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.05%)</title><rect x="242.6" y="1523.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="245.6" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.05%)</title><rect x="242.6" y="1507.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="245.6" y="1518.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.05%)</title><rect x="242.6" y="1491.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="245.6" y="1502.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="242.6" y="1475.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="245.6" y="1486.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.02%)</title><rect x="242.9" y="1475.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="245.9" y="1486.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.02%)</title><rect x="243.2" y="1539.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="246.2" y="1550.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (1 samples, 0.02%)</title><rect x="243.2" y="1523.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="246.2" y="1534.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.02%)</title><rect x="243.2" y="1507.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="246.2" y="1518.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.02%)</title><rect x="243.2" y="1491.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="246.2" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.02%)</title><rect x="243.2" y="1475.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="246.2" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.05%)</title><rect x="243.4" y="1651.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="246.4" y="1662.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.05%)</title><rect x="243.4" y="1635.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="246.4" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (1 samples, 0.02%)</title><rect x="243.4" y="1619.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="246.4" y="1630.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="243.4" y="1603.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="246.4" y="1614.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="243.4" y="1587.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="246.4" y="1598.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="243.4" y="1571.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="246.4" y="1582.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils$$Lambda$170/1308121008.accept (1 samples, 0.02%)</title><rect x="243.7" y="1619.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="246.7" y="1630.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils.lambda$firstN$0 (1 samples, 0.02%)</title><rect x="243.7" y="1603.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="246.7" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$152/866147305.get (1 samples, 0.02%)</title><rect x="244.0" y="1667.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="247.0" y="1678.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$LocalServiceClient$$Lambda$131/1534001839.get (36 samples, 0.83%)</title><rect x="244.2" y="1667.0" width="9.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="247.2" y="1678.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$LocalServiceClient.lambda$putAsync$1 (36 samples, 0.83%)</title><rect x="244.2" y="1651.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="247.2" y="1662.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.putEntityLocal (36 samples, 0.83%)</title><rect x="244.2" y="1635.0" width="9.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="247.2" y="1646.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.02%)</title><rect x="244.5" y="1619.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="247.5" y="1630.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="244.8" y="1619.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="247.8" y="1630.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/MemTablePool.upsert (1 samples, 0.02%)</title><rect x="244.8" y="1603.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="247.8" y="1614.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/DAOImpl.upsert (31 samples, 0.72%)</title><rect x="245.1" y="1619.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="248.1" y="1630.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/MemTablePool.upsert (31 samples, 0.72%)</title><rect x="245.1" y="1603.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="248.1" y="1614.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="245.1" y="1587.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="248.1" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.02%)</title><rect x="245.3" y="1587.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="248.3" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.02%)</title><rect x="245.3" y="1571.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="248.3" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.02%)</title><rect x="245.3" y="1555.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="248.3" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$FairSync.readerShouldBlock (1 samples, 0.02%)</title><rect x="245.3" y="1539.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="248.3" y="1550.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/MemTable.upsert (29 samples, 0.67%)</title><rect x="245.6" y="1587.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="248.6" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (29 samples, 0.67%)</title><rect x="245.6" y="1571.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="248.6" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (29 samples, 0.67%)</title><rect x="245.6" y="1555.0" width="8.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="248.6" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (3 samples, 0.07%)</title><rect x="247.3" y="1539.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="250.3" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (5 samples, 0.12%)</title><rect x="248.1" y="1539.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="251.1" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.02%)</title><rect x="248.1" y="1523.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="251.1" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.02%)</title><rect x="248.1" y="1507.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="251.1" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.02%)</title><rect x="248.1" y="1491.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="251.1" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.09%)</title><rect x="248.4" y="1523.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="251.4" y="1534.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.09%)</title><rect x="248.4" y="1507.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="251.4" y="1518.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.07%)</title><rect x="248.6" y="1491.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="251.6" y="1502.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.05%)</title><rect x="248.6" y="1475.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="251.6" y="1486.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="249.2" y="1475.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="252.2" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (13 samples, 0.30%)</title><rect x="249.4" y="1539.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.4" y="1550.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.30%)</title><rect x="249.4" y="1523.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="252.4" y="1534.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.30%)</title><rect x="249.4" y="1507.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.4" y="1518.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.07%)</title><rect x="249.4" y="1491.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="252.4" y="1502.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.07%)</title><rect x="249.4" y="1475.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="252.4" y="1486.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.02%)</title><rect x="250.3" y="1491.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="253.3" y="1502.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.19%)</title><rect x="250.5" y="1491.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="253.5" y="1502.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.05%)</title><rect x="252.2" y="1475.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="255.2" y="1486.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.02%)</title><rect x="252.5" y="1459.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="255.5" y="1470.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="252.7" y="1491.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="255.7" y="1502.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.02%)</title><rect x="252.7" y="1475.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="255.7" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (2 samples, 0.05%)</title><rect x="253.0" y="1539.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.0" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAdd (2 samples, 0.05%)</title><rect x="253.0" y="1523.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.0" y="1534.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ByteBufferUtils.wrapString (2 samples, 0.05%)</title><rect x="253.6" y="1619.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="256.6" y="1630.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ByteBufferUtils.wrapString (2 samples, 0.05%)</title><rect x="253.6" y="1603.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.6" y="1614.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="253.6" y="1587.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.6" y="1598.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.02%)</title><rect x="253.6" y="1571.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.6" y="1582.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.02%)</title><rect x="253.6" y="1555.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="256.6" y="1566.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="253.6" y="1539.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="256.6" y="1550.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="253.8" y="1587.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="256.8" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.02%)</title><rect x="254.1" y="1683.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="257.1" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="254.1" y="1667.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="257.1" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.02%)</title><rect x="254.1" y="1651.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.1" y="1662.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="254.1" y="1635.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="257.1" y="1646.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="254.1" y="1619.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="257.1" y="1630.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="254.1" y="1603.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="257.1" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.02%)</title><rect x="254.4" y="1683.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="257.4" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="254.4" y="1667.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="257.4" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (1 samples, 0.02%)</title><rect x="254.4" y="1651.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.4" y="1662.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (1 samples, 0.02%)</title><rect x="254.4" y="1635.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="257.4" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (695 samples, 16.12%)</title><rect x="254.6" y="1683.0" width="190.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="257.6" y="1694.0">java/util/concurrent/Thre..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (477 samples, 11.06%)</title><rect x="256.3" y="1667.0" width="130.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="259.3" y="1678.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (477 samples, 11.06%)</title><rect x="256.3" y="1651.0" width="130.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="259.3" y="1662.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (464 samples, 10.76%)</title><rect x="257.9" y="1635.0" width="127.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="260.9" y="1646.0">java/util/concur..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="266.1" y="1619.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="269.1" y="1630.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.02%)</title><rect x="266.1" y="1603.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="269.1" y="1614.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.12%)</title><rect x="266.4" y="1619.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="269.4" y="1630.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.shouldSpin (113 samples, 2.62%)</title><rect x="267.8" y="1619.0" width="30.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="270.8" y="1630.0">ja..</text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="298.4" y="1603.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="301.4" y="1614.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="298.4" y="1587.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="301.4" y="1598.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="298.4" y="1571.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="301.4" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (310 samples, 7.19%)</title><rect x="298.7" y="1619.0" width="84.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="301.7" y="1630.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (3 samples, 0.07%)</title><rect x="298.7" y="1603.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="301.7" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.05%)</title><rect x="299.0" y="1587.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="302.0" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (307 samples, 7.12%)</title><rect x="299.5" y="1603.0" width="84.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="302.5" y="1614.0">jdk/intern..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="300.6" y="1587.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="303.6" y="1598.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.09%)</title><rect x="300.9" y="1587.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="303.9" y="1598.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.02%)</title><rect x="302.0" y="1587.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="305.0" y="1598.0"></text>
</g>
<g>
<title>Unsafe_Park (120 samples, 2.78%)</title><rect x="302.3" y="1587.0" width="32.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="305.3" y="1598.0">Un..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (5 samples, 0.12%)</title><rect x="303.1" y="1571.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="306.1" y="1582.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (24 samples, 0.56%)</title><rect x="304.5" y="1571.0" width="6.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="307.5" y="1582.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.05%)</title><rect x="308.6" y="1555.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="311.6" y="1566.0"></text>
</g>
<g>
<title>Monitor::unlock() (3 samples, 0.07%)</title><rect x="309.1" y="1555.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="312.1" y="1566.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="309.9" y="1555.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="312.9" y="1566.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="310.5" y="1555.0" width="0.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="313.5" y="1566.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.02%)</title><rect x="310.7" y="1555.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="313.7" y="1566.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.05%)</title><rect x="311.0" y="1571.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="314.0" y="1582.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="311.6" y="1571.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="314.6" y="1582.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (2 samples, 0.05%)</title><rect x="311.8" y="1571.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="314.8" y="1582.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.05%)</title><rect x="312.4" y="1571.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="315.4" y="1582.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (71 samples, 1.65%)</title><rect x="312.9" y="1571.0" width="19.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="315.9" y="1582.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (46 samples, 1.07%)</title><rect x="319.8" y="1555.0" width="12.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="322.8" y="1566.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="319.8" y="1539.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="322.8" y="1550.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 1.02%)</title><rect x="320.3" y="1539.0" width="12.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="323.3" y="1550.0"></text>
</g>
<g>
<title>__x64_sys_futex (20 samples, 0.46%)</title><rect x="326.3" y="1523.0" width="5.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="329.3" y="1534.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.39%)</title><rect x="326.9" y="1507.0" width="4.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="329.9" y="1518.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.35%)</title><rect x="327.2" y="1491.0" width="4.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="330.2" y="1502.0"></text>
</g>
<g>
<title>get_futex_key (6 samples, 0.14%)</title><rect x="329.4" y="1475.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="332.4" y="1486.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="331.0" y="1475.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="334.0" y="1486.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="331.3" y="1491.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="334.3" y="1502.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="331.5" y="1507.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="334.5" y="1518.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="331.8" y="1523.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="334.8" y="1534.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="332.1" y="1523.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="335.1" y="1534.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="332.1" y="1507.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="335.1" y="1518.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="332.1" y="1491.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="335.1" y="1502.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="332.4" y="1571.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="335.4" y="1582.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="332.6" y="1571.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="335.6" y="1582.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.05%)</title><rect x="332.9" y="1571.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="335.9" y="1582.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (5 samples, 0.12%)</title><rect x="333.5" y="1571.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="336.5" y="1582.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.02%)</title><rect x="334.8" y="1571.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="337.8" y="1582.0"></text>
</g>
<g>
<title>[unknown] (176 samples, 4.08%)</title><rect x="335.1" y="1587.0" width="48.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="338.1" y="1598.0">[unk..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.05%)</title><rect x="335.1" y="1571.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="338.1" y="1582.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="335.6" y="1571.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="338.6" y="1582.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.05%)</title><rect x="335.9" y="1571.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="338.9" y="1582.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="336.5" y="1571.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="339.5" y="1582.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="336.7" y="1571.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="339.7" y="1582.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (169 samples, 3.92%)</title><rect x="337.0" y="1571.0" width="46.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="340.0" y="1582.0">pthr..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (88 samples, 2.04%)</title><rect x="359.2" y="1555.0" width="24.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="362.2" y="1566.0">e..</text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="359.2" y="1539.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="362.2" y="1550.0"></text>
</g>
<g>
<title>do_syscall_64 (87 samples, 2.02%)</title><rect x="359.5" y="1539.0" width="23.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="362.5" y="1550.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (74 samples, 1.72%)</title><rect x="363.0" y="1523.0" width="20.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="366.0" y="1534.0"></text>
</g>
<g>
<title>_copy_from_user (4 samples, 0.09%)</title><rect x="363.6" y="1507.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="366.6" y="1518.0"></text>
</g>
<g>
<title>do_futex (64 samples, 1.48%)</title><rect x="364.7" y="1507.0" width="17.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="367.7" y="1518.0"></text>
</g>
<g>
<title>futex_wait (62 samples, 1.44%)</title><rect x="364.7" y="1491.0" width="16.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="367.7" y="1502.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="364.9" y="1475.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="367.9" y="1486.0"></text>
</g>
<g>
<title>futex_wait_queue_me (38 samples, 0.88%)</title><rect x="365.2" y="1475.0" width="10.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="368.2" y="1486.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (27 samples, 0.63%)</title><rect x="365.8" y="1459.0" width="7.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="368.8" y="1470.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (27 samples, 0.63%)</title><rect x="365.8" y="1443.0" width="7.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="368.8" y="1454.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.05%)</title><rect x="373.1" y="1459.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="376.1" y="1470.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="373.4" y="1443.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="376.4" y="1454.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="373.4" y="1427.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="376.4" y="1438.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="373.4" y="1411.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="376.4" y="1422.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="373.4" y="1395.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="376.4" y="1406.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="373.4" y="1379.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="376.4" y="1390.0"></text>
</g>
<g>
<title>__run_timers.part.0 (1 samples, 0.02%)</title><rect x="373.4" y="1363.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="376.4" y="1374.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="373.4" y="1347.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="376.4" y="1358.0"></text>
</g>
<g>
<title>process_timeout (1 samples, 0.02%)</title><rect x="373.4" y="1331.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="376.4" y="1342.0"></text>
</g>
<g>
<title>wake_up_process (1 samples, 0.02%)</title><rect x="373.4" y="1315.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="376.4" y="1326.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="373.4" y="1299.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="376.4" y="1310.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="373.4" y="1283.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="376.4" y="1294.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.16%)</title><rect x="373.7" y="1459.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="376.7" y="1470.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.07%)</title><rect x="374.8" y="1443.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="377.8" y="1454.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="375.1" y="1427.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="378.1" y="1438.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="375.3" y="1411.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="378.3" y="1422.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="375.3" y="1395.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="378.3" y="1406.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="375.3" y="1379.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="378.3" y="1390.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="375.3" y="1363.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="378.3" y="1374.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="375.3" y="1347.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="378.3" y="1358.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="375.3" y="1331.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="378.3" y="1342.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="375.3" y="1315.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="378.3" y="1326.0"></text>
</g>
<g>
<title>futex_wait_setup (12 samples, 0.28%)</title><rect x="375.6" y="1475.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="378.6" y="1486.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="378.1" y="1459.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="381.1" y="1470.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.05%)</title><rect x="378.3" y="1459.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="381.3" y="1470.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="378.9" y="1475.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="381.9" y="1486.0"></text>
</g>
<g>
<title>hrtimer_cancel (6 samples, 0.14%)</title><rect x="379.2" y="1475.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="382.2" y="1486.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (6 samples, 0.14%)</title><rect x="379.2" y="1459.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="382.2" y="1470.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.12%)</title><rect x="379.2" y="1443.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="382.2" y="1454.0"></text>
</g>
<g>
<title>hrtimer_active (1 samples, 0.02%)</title><rect x="380.5" y="1443.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="383.5" y="1454.0"></text>
</g>
<g>
<title>hrtimer_init (3 samples, 0.07%)</title><rect x="380.8" y="1475.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="383.8" y="1486.0"></text>
</g>
<g>
<title>__hrtimer_init (3 samples, 0.07%)</title><rect x="380.8" y="1459.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="383.8" y="1470.0"></text>
</g>
<g>
<title>hrtimer_init_sleeper (1 samples, 0.02%)</title><rect x="381.6" y="1491.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="384.6" y="1502.0"></text>
</g>
<g>
<title>ktime_add_safe (1 samples, 0.02%)</title><rect x="381.9" y="1491.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="384.9" y="1502.0"></text>
</g>
<g>
<title>get_timespec64 (4 samples, 0.09%)</title><rect x="382.2" y="1507.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="385.2" y="1518.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="382.4" y="1491.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="385.4" y="1502.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.05%)</title><rect x="382.7" y="1491.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="385.7" y="1502.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="383.3" y="1587.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="386.3" y="1598.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="383.3" y="1571.0" width="0.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="386.3" y="1582.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="383.3" y="1555.0" width="0.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="386.3" y="1566.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (5 samples, 0.12%)</title><rect x="383.5" y="1619.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="386.5" y="1630.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (2 samples, 0.05%)</title><rect x="384.9" y="1635.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="387.9" y="1646.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.05%)</title><rect x="384.9" y="1619.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="387.9" y="1630.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.05%)</title><rect x="384.9" y="1603.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="387.9" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (5 samples, 0.12%)</title><rect x="385.5" y="1635.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="388.5" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (212 samples, 4.92%)</title><rect x="386.8" y="1667.0" width="58.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="389.8" y="1678.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (212 samples, 4.92%)</title><rect x="386.8" y="1651.0" width="58.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="389.8" y="1662.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (209 samples, 4.85%)</title><rect x="387.1" y="1635.0" width="57.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.1" y="1646.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.shouldSpin (184 samples, 4.27%)</title><rect x="389.0" y="1619.0" width="50.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="392.0" y="1630.0">java/..</text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="439.1" y="1603.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="442.1" y="1614.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="439.1" y="1587.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="442.1" y="1598.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="439.1" y="1571.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="442.1" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (18 samples, 0.42%)</title><rect x="439.4" y="1619.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="442.4" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (18 samples, 0.42%)</title><rect x="439.4" y="1603.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="442.4" y="1614.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.12%)</title><rect x="439.4" y="1587.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="442.4" y="1598.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (4 samples, 0.09%)</title><rect x="439.4" y="1571.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="442.4" y="1582.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="440.2" y="1555.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="443.2" y="1566.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="440.2" y="1539.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="443.2" y="1550.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="440.2" y="1523.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="443.2" y="1534.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="440.2" y="1507.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="443.2" y="1518.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="440.2" y="1491.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="443.2" y="1502.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="440.2" y="1475.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="443.2" y="1486.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="440.5" y="1571.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="443.5" y="1582.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.30%)</title><rect x="440.7" y="1587.0" width="3.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="443.7" y="1598.0"></text>
</g>
<g>
<title>__pthread_cond_wait (12 samples, 0.28%)</title><rect x="440.7" y="1571.0" width="3.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="443.7" y="1582.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.19%)</title><rect x="441.8" y="1555.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="444.8" y="1566.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.19%)</title><rect x="441.8" y="1539.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="444.8" y="1550.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.19%)</title><rect x="441.8" y="1523.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="444.8" y="1534.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.14%)</title><rect x="442.4" y="1507.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="445.4" y="1518.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.12%)</title><rect x="442.6" y="1491.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="445.6" y="1502.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="442.9" y="1475.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="445.9" y="1486.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.07%)</title><rect x="443.2" y="1475.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="446.2" y="1486.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.02%)</title><rect x="443.2" y="1459.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="446.2" y="1470.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="443.5" y="1459.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="446.5" y="1470.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.05%)</title><rect x="443.5" y="1443.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="446.5" y="1454.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="443.7" y="1427.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="446.7" y="1438.0"></text>
</g>
<g>
<title>_pthread_cleanup_push (1 samples, 0.02%)</title><rect x="444.0" y="1571.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="447.0" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (2 samples, 0.05%)</title><rect x="444.3" y="1635.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="447.3" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$498/375914915.run (500 samples, 11.60%)</title><rect x="444.8" y="1683.0" width="136.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="447.8" y="1694.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (496 samples, 11.50%)</title><rect x="445.9" y="1667.0" width="135.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="448.9" y="1678.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (495 samples, 11.48%)</title><rect x="446.2" y="1651.0" width="135.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="449.2" y="1662.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (488 samples, 11.32%)</title><rect x="447.6" y="1635.0" width="133.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="450.6" y="1646.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (1 samples, 0.02%)</title><rect x="448.4" y="1619.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.4" y="1630.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (1 samples, 0.02%)</title><rect x="448.4" y="1603.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.4" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.get (1 samples, 0.02%)</title><rect x="448.4" y="1587.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.4" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (484 samples, 11.22%)</title><rect x="448.7" y="1619.0" width="132.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="451.7" y="1630.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (484 samples, 11.22%)</title><rect x="448.7" y="1603.0" width="132.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="451.7" y="1614.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (484 samples, 11.22%)</title><rect x="448.7" y="1587.0" width="132.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="451.7" y="1598.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$114/1594873248.getAsBoolean (1 samples, 0.02%)</title><rect x="448.7" y="1571.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="451.7" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isSelectorThread (1 samples, 0.02%)</title><rect x="448.7" y="1555.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="451.7" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (483 samples, 11.20%)</title><rect x="448.9" y="1571.0" width="132.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="451.9" y="1582.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (483 samples, 11.20%)</title><rect x="448.9" y="1555.0" width="132.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="451.9" y="1566.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (3 samples, 0.07%)</title><rect x="448.9" y="1539.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="451.9" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.05%)</title><rect x="449.2" y="1523.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="452.2" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.05%)</title><rect x="449.2" y="1507.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="452.2" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.05%)</title><rect x="449.2" y="1491.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="452.2" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.05%)</title><rect x="449.2" y="1475.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="452.2" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.02%)</title><rect x="449.2" y="1459.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="452.2" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.02%)</title><rect x="449.2" y="1443.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="452.2" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.02%)</title><rect x="449.2" y="1427.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="452.2" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.02%)</title><rect x="449.2" y="1411.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="452.2" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.02%)</title><rect x="449.2" y="1395.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="452.2" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.02%)</title><rect x="449.2" y="1379.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="452.2" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="449.5" y="1459.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="452.5" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="449.5" y="1443.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.5" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (480 samples, 11.13%)</title><rect x="449.8" y="1539.0" width="131.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="452.8" y="1550.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (480 samples, 11.13%)</title><rect x="449.8" y="1523.0" width="131.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="452.8" y="1534.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (79 samples, 1.83%)</title><rect x="450.3" y="1507.0" width="21.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="453.3" y="1518.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="451.1" y="1491.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="454.1" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="451.1" y="1475.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="454.1" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$548/2025116764.get$Lambda (1 samples, 0.02%)</title><rect x="451.1" y="1459.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="454.1" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$548/2025116764.&lt;init&gt; (1 samples, 0.02%)</title><rect x="451.1" y="1443.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="454.1" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$550/783484924.get$Lambda (1 samples, 0.02%)</title><rect x="451.4" y="1459.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="454.4" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (64 samples, 1.48%)</title><rect x="451.7" y="1491.0" width="17.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="454.7" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (62 samples, 1.44%)</title><rect x="452.2" y="1475.0" width="17.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="455.2" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (61 samples, 1.41%)</title><rect x="452.5" y="1459.0" width="16.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="455.5" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.05%)</title><rect x="454.7" y="1443.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="457.7" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2 samples, 0.05%)</title><rect x="454.7" y="1427.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="457.7" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (51 samples, 1.18%)</title><rect x="455.2" y="1443.0" width="14.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="458.2" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (13 samples, 0.30%)</title><rect x="455.5" y="1427.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="458.5" y="1438.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="455.8" y="1411.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="458.8" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.02%)</title><rect x="456.3" y="1411.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="459.3" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.02%)</title><rect x="456.3" y="1395.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="459.3" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (1 samples, 0.02%)</title><rect x="456.6" y="1411.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="459.6" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (1 samples, 0.02%)</title><rect x="456.6" y="1395.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.6" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$527/52661102.apply (5 samples, 0.12%)</title><rect x="456.9" y="1411.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="459.9" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (4 samples, 0.09%)</title><rect x="457.2" y="1395.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="460.2" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (4 samples, 0.09%)</title><rect x="457.2" y="1379.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.2" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (3 samples, 0.07%)</title><rect x="457.4" y="1363.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="460.4" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.05%)</title><rect x="457.7" y="1347.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="460.7" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.05%)</title><rect x="457.7" y="1331.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="460.7" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2 samples, 0.05%)</title><rect x="457.7" y="1315.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.7" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$290/1393051360.apply (2 samples, 0.05%)</title><rect x="457.7" y="1299.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="460.7" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (2 samples, 0.05%)</title><rect x="457.7" y="1283.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.7" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (2 samples, 0.05%)</title><rect x="457.7" y="1267.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="460.7" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (2 samples, 0.05%)</title><rect x="457.7" y="1251.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="460.7" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.05%)</title><rect x="457.7" y="1235.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="460.7" y="1246.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="457.7" y="1219.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="460.7" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="458.0" y="1203.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.0" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$151/1373859138.apply (3 samples, 0.07%)</title><rect x="458.2" y="1411.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.2" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (3 samples, 0.07%)</title><rect x="458.2" y="1395.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.2" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (3 samples, 0.07%)</title><rect x="458.2" y="1379.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="461.2" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (3 samples, 0.07%)</title><rect x="458.2" y="1363.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="461.2" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (3 samples, 0.07%)</title><rect x="458.2" y="1347.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="461.2" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.07%)</title><rect x="458.2" y="1331.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="461.2" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$587/849392828.run (3 samples, 0.07%)</title><rect x="458.2" y="1315.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.2" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (3 samples, 0.07%)</title><rect x="458.2" y="1299.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="461.2" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.02%)</title><rect x="458.2" y="1283.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="461.2" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="458.2" y="1267.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="461.2" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="458.2" y="1251.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="461.2" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.02%)</title><rect x="458.2" y="1235.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.2" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.02%)</title><rect x="458.2" y="1219.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="461.2" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.02%)</title><rect x="458.2" y="1203.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="461.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.run (1 samples, 0.02%)</title><rect x="458.2" y="1187.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="461.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.02%)</title><rect x="458.2" y="1171.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.02%)</title><rect x="458.2" y="1155.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="461.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.02%)</title><rect x="458.2" y="1139.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.02%)</title><rect x="458.2" y="1123.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="461.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$589/1973295159.run (1 samples, 0.02%)</title><rect x="458.2" y="1107.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="461.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.02%)</title><rect x="458.2" y="1091.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.02%)</title><rect x="458.2" y="1075.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.02%)</title><rect x="458.2" y="1059.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.02%)</title><rect x="458.2" y="1043.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="461.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1 samples, 0.02%)</title><rect x="458.2" y="1027.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.02%)</title><rect x="458.2" y="1011.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="461.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.02%)</title><rect x="458.2" y="995.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.02%)</title><rect x="458.2" y="979.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="461.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (1 samples, 0.02%)</title><rect x="458.2" y="963.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="461.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.02%)</title><rect x="458.2" y="947.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.02%)</title><rect x="458.2" y="931.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="461.2" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.02%)</title><rect x="458.2" y="915.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.2" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.02%)</title><rect x="458.2" y="899.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="461.2" y="910.0"></text>
</g>
<g>
<title>__write (1 samples, 0.02%)</title><rect x="458.2" y="883.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="461.2" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="458.2" y="867.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="461.2" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="458.2" y="851.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="461.2" y="862.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.02%)</title><rect x="458.2" y="835.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="461.2" y="846.0"></text>
</g>
<g>
<title>ksys_write (1 samples, 0.02%)</title><rect x="458.2" y="819.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="461.2" y="830.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.02%)</title><rect x="458.2" y="803.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="461.2" y="814.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.02%)</title><rect x="458.2" y="787.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="461.2" y="798.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.02%)</title><rect x="458.2" y="771.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="461.2" y="782.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.02%)</title><rect x="458.2" y="755.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="461.2" y="766.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="458.2" y="739.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="461.2" y="750.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="458.2" y="723.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="461.2" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="458.2" y="707.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="461.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (2 samples, 0.05%)</title><rect x="458.5" y="1283.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.5" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (2 samples, 0.05%)</title><rect x="458.5" y="1267.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.5" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.05%)</title><rect x="458.5" y="1251.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.05%)</title><rect x="458.5" y="1235.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="458.5" y="1219.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="461.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.05%)</title><rect x="458.5" y="1203.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (2 samples, 0.05%)</title><rect x="458.5" y="1187.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (2 samples, 0.05%)</title><rect x="458.5" y="1171.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (2 samples, 0.05%)</title><rect x="458.5" y="1155.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (2 samples, 0.05%)</title><rect x="458.5" y="1139.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="461.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (2 samples, 0.05%)</title><rect x="458.5" y="1123.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="461.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.05%)</title><rect x="458.5" y="1107.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.05%)</title><rect x="458.5" y="1091.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="461.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.05%)</title><rect x="458.5" y="1075.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="461.5" y="1086.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.05%)</title><rect x="458.5" y="1059.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="461.5" y="1070.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.05%)</title><rect x="458.5" y="1043.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="461.5" y="1054.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (2 samples, 0.05%)</title><rect x="458.5" y="1027.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="461.5" y="1038.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (2 samples, 0.05%)</title><rect x="458.5" y="1011.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="461.5" y="1022.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.02%)</title><rect x="458.5" y="995.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="461.5" y="1006.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="458.8" y="995.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="461.8" y="1006.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.02%)</title><rect x="458.8" y="979.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="461.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (36 samples, 0.83%)</title><rect x="459.1" y="1427.0" width="9.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="462.1" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (36 samples, 0.83%)</title><rect x="459.1" y="1411.0" width="9.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="462.1" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="459.1" y="1395.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="462.1" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.02%)</title><rect x="459.1" y="1379.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="462.1" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.02%)</title><rect x="459.1" y="1363.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="462.1" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.02%)</title><rect x="459.1" y="1347.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="462.1" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.localInit (1 samples, 0.02%)</title><rect x="459.1" y="1331.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="462.1" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.mix64 (1 samples, 0.02%)</title><rect x="459.1" y="1315.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="462.1" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$443/90862708.apply (35 samples, 0.81%)</title><rect x="459.3" y="1395.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="462.3" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.02%)</title><rect x="459.3" y="1379.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="462.3" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (34 samples, 0.79%)</title><rect x="459.6" y="1379.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="462.6" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (34 samples, 0.79%)</title><rect x="459.6" y="1363.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="462.6" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$158/1087713702.apply (22 samples, 0.51%)</title><rect x="459.6" y="1347.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="462.6" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (22 samples, 0.51%)</title><rect x="459.6" y="1331.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="462.6" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="459.6" y="1315.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="462.6" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.05%)</title><rect x="459.6" y="1299.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="462.6" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (20 samples, 0.46%)</title><rect x="460.2" y="1315.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="463.2" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (9 samples, 0.21%)</title><rect x="460.2" y="1299.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="463.2" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (9 samples, 0.21%)</title><rect x="460.2" y="1283.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="463.2" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (9 samples, 0.21%)</title><rect x="460.2" y="1267.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.2" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$507/1060480628.accept (4 samples, 0.09%)</title><rect x="460.7" y="1251.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="463.7" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (2 samples, 0.05%)</title><rect x="461.3" y="1235.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="464.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (2 samples, 0.05%)</title><rect x="461.3" y="1219.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="464.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="461.3" y="1203.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="464.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="461.3" y="1187.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="464.3" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$518/627396116.get$Lambda (1 samples, 0.02%)</title><rect x="461.3" y="1171.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="464.3" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$518/627396116.&lt;init&gt; (1 samples, 0.02%)</title><rect x="461.3" y="1155.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="464.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.02%)</title><rect x="461.5" y="1203.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="464.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="461.5" y="1187.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="464.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.02%)</title><rect x="461.5" y="1171.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="464.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="461.5" y="1155.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="464.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$522/1925782679.accept (3 samples, 0.07%)</title><rect x="461.8" y="1251.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="464.8" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (3 samples, 0.07%)</title><rect x="461.8" y="1235.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="464.8" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (3 samples, 0.07%)</title><rect x="461.8" y="1219.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="464.8" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (3 samples, 0.07%)</title><rect x="461.8" y="1203.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="464.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (3 samples, 0.07%)</title><rect x="461.8" y="1187.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="464.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.07%)</title><rect x="461.8" y="1171.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="464.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.07%)</title><rect x="461.8" y="1155.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="464.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.07%)</title><rect x="461.8" y="1139.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="464.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.07%)</title><rect x="461.8" y="1123.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="464.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (3 samples, 0.07%)</title><rect x="461.8" y="1107.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="464.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.05%)</title><rect x="462.1" y="1091.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="465.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.05%)</title><rect x="462.1" y="1075.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.05%)</title><rect x="462.1" y="1059.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="465.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.05%)</title><rect x="462.1" y="1043.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="465.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (2 samples, 0.05%)</title><rect x="462.1" y="1027.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="465.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.05%)</title><rect x="462.1" y="1011.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="465.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.05%)</title><rect x="462.1" y="995.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="462.1" y="979.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="465.1" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="462.1" y="963.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.1" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.02%)</title><rect x="462.4" y="979.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (11 samples, 0.26%)</title><rect x="462.6" y="1299.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="465.6" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (1 samples, 0.02%)</title><rect x="462.6" y="1283.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="465.6" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (1 samples, 0.02%)</title><rect x="462.6" y="1267.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="465.6" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.02%)</title><rect x="462.6" y="1251.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="465.6" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.&lt;init&gt; (1 samples, 0.02%)</title><rect x="462.6" y="1235.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="465.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="462.6" y="1219.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="465.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (10 samples, 0.23%)</title><rect x="462.9" y="1283.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="465.9" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (1 samples, 0.02%)</title><rect x="463.2" y="1267.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.2" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (1 samples, 0.02%)</title><rect x="463.2" y="1251.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.2" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (1 samples, 0.02%)</title><rect x="463.2" y="1235.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="466.2" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (8 samples, 0.19%)</title><rect x="463.4" y="1267.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="466.4" y="1278.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.02%)</title><rect x="463.4" y="1251.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.4" y="1262.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="463.4" y="1235.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="466.4" y="1246.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="463.4" y="1219.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="466.4" y="1230.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="463.4" y="1203.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="463.4" y="1187.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="466.4" y="1198.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.02%)</title><rect x="463.4" y="1171.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="466.4" y="1182.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (4 samples, 0.09%)</title><rect x="463.7" y="1251.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.7" y="1262.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.09%)</title><rect x="463.7" y="1235.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.7" y="1246.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.09%)</title><rect x="463.7" y="1219.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="466.7" y="1230.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="464.3" y="1203.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="467.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (1 samples, 0.02%)</title><rect x="464.5" y="1203.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="467.5" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="464.8" y="1251.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="467.8" y="1262.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="464.8" y="1235.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="467.8" y="1246.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.07%)</title><rect x="464.8" y="1219.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="467.8" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.07%)</title><rect x="464.8" y="1203.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="467.8" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.02%)</title><rect x="464.8" y="1187.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="467.8" y="1198.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="465.1" y="1187.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="468.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$163/1625023506.apply (10 samples, 0.23%)</title><rect x="465.6" y="1347.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="468.6" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (10 samples, 0.23%)</title><rect x="465.6" y="1331.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="468.6" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (10 samples, 0.23%)</title><rect x="465.6" y="1315.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="468.6" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (10 samples, 0.23%)</title><rect x="465.6" y="1299.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="468.6" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (10 samples, 0.23%)</title><rect x="465.6" y="1283.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.6" y="1294.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="467.6" y="1267.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="470.6" y="1278.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.02%)</title><rect x="467.8" y="1267.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="470.8" y="1278.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="468.1" y="1267.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="471.1" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.failedFuture (2 samples, 0.05%)</title><rect x="468.4" y="1347.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.4" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeExceptionally (1 samples, 0.02%)</title><rect x="468.6" y="1331.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="471.6" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (1 samples, 0.02%)</title><rect x="468.6" y="1315.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="471.6" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="468.6" y="1299.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="471.6" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="468.6" y="1283.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.6" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.02%)</title><rect x="468.9" y="1427.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.9" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.02%)</title><rect x="468.9" y="1411.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="471.9" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.02%)</title><rect x="468.9" y="1395.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.9" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AltResult.&lt;init&gt; (1 samples, 0.02%)</title><rect x="468.9" y="1379.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="471.9" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (3 samples, 0.07%)</title><rect x="469.2" y="1491.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="472.2" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (1 samples, 0.02%)</title><rect x="469.7" y="1475.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="472.7" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (1 samples, 0.02%)</title><rect x="469.7" y="1459.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="472.7" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.16%)</title><rect x="470.0" y="1491.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="473.0" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$548/2025116764.run (4 samples, 0.09%)</title><rect x="470.8" y="1475.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="473.8" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (3 samples, 0.07%)</title><rect x="471.1" y="1459.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.1" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (1 samples, 0.02%)</title><rect x="471.4" y="1443.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="474.4" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (1 samples, 0.02%)</title><rect x="471.7" y="1443.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="474.7" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (6 samples, 0.14%)</title><rect x="471.9" y="1507.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="474.9" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (6 samples, 0.14%)</title><rect x="471.9" y="1491.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="474.9" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (6 samples, 0.14%)</title><rect x="471.9" y="1475.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="474.9" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.first (1 samples, 0.02%)</title><rect x="473.3" y="1459.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="476.3" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (393 samples, 9.11%)</title><rect x="473.6" y="1507.0" width="107.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="476.6" y="1518.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (393 samples, 9.11%)</title><rect x="473.6" y="1491.0" width="107.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="476.6" y="1502.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (393 samples, 9.11%)</title><rect x="473.6" y="1475.0" width="107.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="476.6" y="1486.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (391 samples, 9.07%)</title><rect x="474.1" y="1459.0" width="107.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="477.1" y="1470.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$543/412781571.run (3 samples, 0.07%)</title><rect x="474.7" y="1443.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="477.7" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (3 samples, 0.07%)</title><rect x="474.7" y="1427.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="477.7" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (3 samples, 0.07%)</title><rect x="474.7" y="1411.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="477.7" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (2 samples, 0.05%)</title><rect x="474.9" y="1395.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="477.9" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="474.9" y="1379.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="477.9" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="474.9" y="1363.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="477.9" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="475.2" y="1347.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="478.2" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$114/1594873248.getAsBoolean (1 samples, 0.02%)</title><rect x="475.2" y="1331.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.2" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isSelectorThread (1 samples, 0.02%)</title><rect x="475.2" y="1315.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="478.2" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (383 samples, 8.88%)</title><rect x="475.5" y="1443.0" width="104.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="478.5" y="1454.0">jdk/internal..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (379 samples, 8.79%)</title><rect x="475.8" y="1427.0" width="103.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="478.8" y="1438.0">java/nio/cha..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (379 samples, 8.79%)</title><rect x="475.8" y="1411.0" width="103.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.8" y="1422.0">sun/nio/ch/S..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.09%)</title><rect x="475.8" y="1395.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="478.8" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="476.3" y="1379.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="479.3" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.05%)</title><rect x="476.3" y="1363.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="479.3" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.05%)</title><rect x="476.3" y="1347.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="479.3" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="476.3" y="1331.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.3" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="476.3" y="1315.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="479.3" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="476.3" y="1299.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="479.3" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (1 samples, 0.02%)</title><rect x="476.6" y="1331.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="479.6" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (375 samples, 8.70%)</title><rect x="476.9" y="1395.0" width="102.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="479.9" y="1406.0">sun/nio/ch/I..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (375 samples, 8.70%)</title><rect x="476.9" y="1379.0" width="102.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="479.9" y="1390.0">sun/nio/ch/I..</text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.05%)</title><rect x="477.9" y="1363.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.9" y="1374.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.05%)</title><rect x="477.9" y="1347.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="480.9" y="1358.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (6 samples, 0.14%)</title><rect x="478.5" y="1363.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.5" y="1374.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (6 samples, 0.14%)</title><rect x="478.5" y="1347.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="481.5" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (5 samples, 0.12%)</title><rect x="478.8" y="1331.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="481.8" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (5 samples, 0.12%)</title><rect x="478.8" y="1315.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.8" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (4 samples, 0.09%)</title><rect x="479.0" y="1299.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="482.0" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (3 samples, 0.07%)</title><rect x="479.3" y="1283.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="482.3" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setBuffer (6 samples, 0.14%)</title><rect x="480.1" y="1363.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="483.1" y="1374.0"></text>
</g>
<g>
<title>jint_arraycopy (1 samples, 0.02%)</title><rect x="480.7" y="1347.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="483.7" y="1358.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="481.0" y="1347.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="484.0" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1 samples, 0.02%)</title><rect x="481.5" y="1347.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.5" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (352 samples, 8.16%)</title><rect x="481.8" y="1363.0" width="96.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="484.8" y="1374.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (351 samples, 8.14%)</title><rect x="482.1" y="1347.0" width="96.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.1" y="1358.0">sun/nio/ch/..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (2 samples, 0.05%)</title><rect x="482.3" y="1331.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="485.3" y="1342.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (2 samples, 0.05%)</title><rect x="482.9" y="1331.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="485.9" y="1342.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="483.4" y="1331.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="486.4" y="1342.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="483.4" y="1315.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="486.4" y="1326.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="483.4" y="1299.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="486.4" y="1310.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="483.4" y="1283.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="486.4" y="1294.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="483.4" y="1267.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="486.4" y="1278.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="483.4" y="1251.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="486.4" y="1262.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.02%)</title><rect x="483.7" y="1331.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="486.7" y="1342.0"></text>
</g>
<g>
<title>writev (344 samples, 7.98%)</title><rect x="484.0" y="1331.0" width="94.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="487.0" y="1342.0">writev</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (328 samples, 7.61%)</title><rect x="488.3" y="1315.0" width="89.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="491.3" y="1326.0">entry_SYSC..</text>
</g>
<g>
<title>do_syscall_64 (328 samples, 7.61%)</title><rect x="488.3" y="1299.0" width="89.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="491.3" y="1310.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_writev (321 samples, 7.44%)</title><rect x="489.7" y="1283.0" width="87.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="492.7" y="1294.0">__x64_sys_..</text>
</g>
<g>
<title>do_writev (321 samples, 7.44%)</title><rect x="489.7" y="1267.0" width="87.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="492.7" y="1278.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (8 samples, 0.19%)</title><rect x="490.0" y="1251.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="493.0" y="1262.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.19%)</title><rect x="490.0" y="1235.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="493.0" y="1246.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.19%)</title><rect x="490.0" y="1219.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="493.0" y="1230.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="492.2" y="1251.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="495.2" y="1262.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.05%)</title><rect x="493.0" y="1251.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="496.0" y="1262.0"></text>
</g>
<g>
<title>vfs_writev (307 samples, 7.12%)</title><rect x="493.5" y="1251.0" width="84.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="496.5" y="1262.0">vfs_writev</text>
</g>
<g>
<title>do_iter_write (302 samples, 7.00%)</title><rect x="494.1" y="1235.0" width="82.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="497.1" y="1246.0">do_iter_w..</text>
</g>
<g>
<title>__fsnotify_parent (4 samples, 0.09%)</title><rect x="494.6" y="1219.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="497.6" y="1230.0"></text>
</g>
<g>
<title>do_iter_readv_writev (286 samples, 6.63%)</title><rect x="495.7" y="1219.0" width="78.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="498.7" y="1230.0">do_iter_r..</text>
</g>
<g>
<title>sock_write_iter (284 samples, 6.59%)</title><rect x="496.3" y="1203.0" width="77.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="499.3" y="1214.0">sock_writ..</text>
</g>
<g>
<title>sock_sendmsg (282 samples, 6.54%)</title><rect x="496.8" y="1187.0" width="77.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="499.8" y="1198.0">sock_send..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.09%)</title><rect x="496.8" y="1171.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="499.8" y="1182.0"></text>
</g>
<g>
<title>inet6_sendmsg (278 samples, 6.45%)</title><rect x="497.9" y="1171.0" width="76.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="500.9" y="1182.0">inet6_se..</text>
</g>
<g>
<title>tcp_sendmsg (277 samples, 6.42%)</title><rect x="498.2" y="1155.0" width="75.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="501.2" y="1166.0">tcp_send..</text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.09%)</title><rect x="498.2" y="1139.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="501.2" y="1150.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.02%)</title><rect x="499.3" y="1139.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="502.3" y="1150.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.02%)</title><rect x="499.6" y="1139.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="502.6" y="1150.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="499.8" y="1139.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="502.8" y="1150.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (269 samples, 6.24%)</title><rect x="500.1" y="1139.0" width="73.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="503.1" y="1150.0">tcp_send..</text>
</g>
<g>
<title>_copy_from_iter_full (7 samples, 0.16%)</title><rect x="502.3" y="1123.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="505.3" y="1134.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.12%)</title><rect x="502.6" y="1107.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="505.6" y="1118.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="503.9" y="1107.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="506.9" y="1118.0"></text>
</g>
<g>
<title>sk_page_frag_refill (5 samples, 0.12%)</title><rect x="504.2" y="1123.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="507.2" y="1134.0"></text>
</g>
<g>
<title>skb_page_frag_refill (5 samples, 0.12%)</title><rect x="504.2" y="1107.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="507.2" y="1118.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (23 samples, 0.53%)</title><rect x="505.6" y="1123.0" width="6.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="508.6" y="1134.0"></text>
</g>
<g>
<title>__alloc_skb (23 samples, 0.53%)</title><rect x="505.6" y="1107.0" width="6.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="508.6" y="1118.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="506.4" y="1091.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="509.4" y="1102.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (10 samples, 0.23%)</title><rect x="506.7" y="1091.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="509.7" y="1102.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.14%)</title><rect x="506.7" y="1075.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="509.7" y="1086.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="508.1" y="1059.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="511.1" y="1070.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="508.3" y="1075.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="511.3" y="1086.0"></text>
</g>
<g>
<title>memset_erms (3 samples, 0.07%)</title><rect x="508.6" y="1075.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="511.6" y="1086.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.12%)</title><rect x="509.4" y="1091.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="512.4" y="1102.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="510.5" y="1075.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="513.5" y="1086.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.07%)</title><rect x="510.8" y="1091.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="513.8" y="1102.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.07%)</title><rect x="510.8" y="1075.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="513.8" y="1086.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.02%)</title><rect x="511.6" y="1091.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="514.6" y="1102.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.09%)</title><rect x="511.9" y="1123.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="514.9" y="1134.0"></text>
</g>
<g>
<title>tcp_push (218 samples, 5.06%)</title><rect x="513.0" y="1123.0" width="59.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="516.0" y="1134.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (218 samples, 5.06%)</title><rect x="513.0" y="1107.0" width="59.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="516.0" y="1118.0">__tcp_..</text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.02%)</title><rect x="513.0" y="1091.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="516.0" y="1102.0"></text>
</g>
<g>
<title>tcp_write_xmit (217 samples, 5.03%)</title><rect x="513.3" y="1091.0" width="59.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="516.3" y="1102.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (198 samples, 4.59%)</title><rect x="514.3" y="1075.0" width="54.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="517.3" y="1086.0">__tcp..</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.05%)</title><rect x="516.3" y="1059.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="519.3" y="1070.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="516.8" y="1059.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="519.8" y="1070.0"></text>
</g>
<g>
<title>ip_queue_xmit (183 samples, 4.24%)</title><rect x="517.1" y="1059.0" width="50.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="520.1" y="1070.0">ip_qu..</text>
</g>
<g>
<title>__ip_queue_xmit (182 samples, 4.22%)</title><rect x="517.1" y="1043.0" width="49.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="520.1" y="1054.0">__ip_..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="517.6" y="1027.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="520.6" y="1038.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="517.6" y="1011.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="520.6" y="1022.0"></text>
</g>
<g>
<title>ip_local_out (179 samples, 4.15%)</title><rect x="517.9" y="1027.0" width="49.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="520.9" y="1038.0">ip_l..</text>
</g>
<g>
<title>ip_output (179 samples, 4.15%)</title><rect x="517.9" y="1011.0" width="49.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="520.9" y="1022.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (177 samples, 4.10%)</title><rect x="518.5" y="995.0" width="48.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="521.5" y="1006.0">ip_f..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="518.5" y="979.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="521.5" y="990.0"></text>
</g>
<g>
<title>__ip_finish_output (175 samples, 4.06%)</title><rect x="518.7" y="979.0" width="47.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="521.7" y="990.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (173 samples, 4.01%)</title><rect x="519.3" y="963.0" width="47.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="522.3" y="974.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (141 samples, 3.27%)</title><rect x="521.7" y="947.0" width="38.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="524.7" y="958.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (140 samples, 3.25%)</title><rect x="522.0" y="931.0" width="38.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="525.0" y="942.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (138 samples, 3.20%)</title><rect x="522.6" y="915.0" width="37.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="525.6" y="926.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (138 samples, 3.20%)</title><rect x="522.6" y="899.0" width="37.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="525.6" y="910.0">__s..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="523.7" y="883.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="526.7" y="894.0"></text>
</g>
<g>
<title>net_rx_action (133 samples, 3.08%)</title><rect x="523.9" y="883.0" width="36.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="526.9" y="894.0">net..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="524.2" y="867.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="527.2" y="878.0"></text>
</g>
<g>
<title>process_backlog (131 samples, 3.04%)</title><rect x="524.5" y="867.0" width="35.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="527.5" y="878.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (128 samples, 2.97%)</title><rect x="525.3" y="851.0" width="35.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="528.3" y="862.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (128 samples, 2.97%)</title><rect x="525.3" y="835.0" width="35.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="528.3" y="846.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.07%)</title><rect x="525.3" y="819.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="528.3" y="830.0"></text>
</g>
<g>
<title>ip_rcv (122 samples, 2.83%)</title><rect x="526.1" y="819.0" width="33.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="529.1" y="830.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.05%)</title><rect x="526.7" y="803.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="529.7" y="814.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.02%)</title><rect x="527.2" y="803.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="530.2" y="814.0"></text>
</g>
<g>
<title>ip_rcv_finish (117 samples, 2.71%)</title><rect x="527.5" y="803.0" width="32.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="530.5" y="814.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (116 samples, 2.69%)</title><rect x="527.8" y="787.0" width="31.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="530.8" y="798.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (116 samples, 2.69%)</title><rect x="527.8" y="771.0" width="31.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="530.8" y="782.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (115 samples, 2.67%)</title><rect x="527.8" y="755.0" width="31.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="530.8" y="766.0">ip..</text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="528.3" y="739.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="531.3" y="750.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="528.6" y="739.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="531.6" y="750.0"></text>
</g>
<g>
<title>tcp_v4_rcv (111 samples, 2.57%)</title><rect x="528.8" y="739.0" width="30.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="531.8" y="750.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.16%)</title><rect x="528.8" y="723.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="531.8" y="734.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="530.5" y="707.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="533.5" y="718.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="530.8" y="723.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="533.8" y="734.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.12%)</title><rect x="531.0" y="723.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="534.0" y="734.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.07%)</title><rect x="531.0" y="707.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="534.0" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.05%)</title><rect x="531.9" y="707.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="534.9" y="718.0"></text>
</g>
<g>
<title>skb_condense (1 samples, 0.02%)</title><rect x="532.4" y="723.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="535.4" y="734.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (96 samples, 2.23%)</title><rect x="532.7" y="723.0" width="26.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="535.7" y="734.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="532.7" y="707.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="535.7" y="718.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.05%)</title><rect x="533.0" y="707.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="536.0" y="718.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="533.5" y="707.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="536.5" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_established (92 samples, 2.13%)</title><rect x="533.8" y="707.0" width="25.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="536.8" y="718.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (6 samples, 0.14%)</title><rect x="535.1" y="691.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="538.1" y="702.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (6 samples, 0.14%)</title><rect x="535.1" y="675.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="538.1" y="686.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="535.4" y="659.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="538.4" y="670.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.09%)</title><rect x="535.7" y="659.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="538.7" y="670.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.09%)</title><rect x="535.7" y="643.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="538.7" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.09%)</title><rect x="535.7" y="627.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="538.7" y="638.0"></text>
</g>
<g>
<title>sock_def_readable (70 samples, 1.62%)</title><rect x="536.8" y="691.0" width="19.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="539.8" y="702.0"></text>
</g>
<g>
<title>__wake_up_sync_key (69 samples, 1.60%)</title><rect x="537.1" y="675.0" width="18.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="540.1" y="686.0"></text>
</g>
<g>
<title>__wake_up_common_lock (68 samples, 1.58%)</title><rect x="537.1" y="659.0" width="18.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="540.1" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (67 samples, 1.55%)</title><rect x="537.3" y="643.0" width="18.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="540.3" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="555.7" y="659.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="558.7" y="670.0"></text>
</g>
<g>
<title>tcp_data_queue (5 samples, 0.12%)</title><rect x="555.9" y="691.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="558.9" y="702.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.09%)</title><rect x="555.9" y="675.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="558.9" y="686.0"></text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 0.09%)</title><rect x="555.9" y="659.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="558.9" y="670.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.09%)</title><rect x="555.9" y="643.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="558.9" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.09%)</title><rect x="555.9" y="627.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="558.9" y="638.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="557.0" y="675.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="560.0" y="686.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.09%)</title><rect x="557.3" y="691.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="560.3" y="702.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="558.4" y="691.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="561.4" y="702.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="558.4" y="675.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="561.4" y="686.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="558.7" y="691.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="561.7" y="702.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="559.0" y="723.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="562.0" y="734.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="559.2" y="755.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="562.2" y="766.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.05%)</title><rect x="559.5" y="819.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="562.5" y="830.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="560.0" y="819.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="563.0" y="830.0"></text>
</g>
<g>
<title>dev_queue_xmit (22 samples, 0.51%)</title><rect x="560.3" y="947.0" width="6.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="563.3" y="958.0"></text>
</g>
<g>
<title>__dev_queue_xmit (22 samples, 0.51%)</title><rect x="560.3" y="931.0" width="6.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="563.3" y="942.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (15 samples, 0.35%)</title><rect x="561.4" y="915.0" width="4.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="564.4" y="926.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="561.7" y="899.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="564.7" y="910.0"></text>
</g>
<g>
<title>loopback_xmit (13 samples, 0.30%)</title><rect x="562.0" y="899.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="565.0" y="910.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.05%)</title><rect x="562.2" y="883.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="565.2" y="894.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.09%)</title><rect x="562.8" y="883.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="565.8" y="894.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.09%)</title><rect x="562.8" y="867.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="565.8" y="878.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.07%)</title><rect x="563.1" y="851.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="566.1" y="862.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.05%)</title><rect x="563.9" y="883.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="566.9" y="894.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.05%)</title><rect x="564.4" y="883.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="567.4" y="894.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.05%)</title><rect x="565.0" y="883.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="568.0" y="894.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="565.5" y="915.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="568.5" y="926.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="565.5" y="899.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="568.5" y="910.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.05%)</title><rect x="565.8" y="915.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="568.8" y="926.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.02%)</title><rect x="566.3" y="947.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="569.3" y="958.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="566.6" y="979.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="569.6" y="990.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="566.9" y="1043.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="569.9" y="1054.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.07%)</title><rect x="567.2" y="1059.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="570.2" y="1070.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.07%)</title><rect x="567.2" y="1043.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="570.2" y="1054.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.05%)</title><rect x="567.4" y="1027.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="570.4" y="1038.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (2 samples, 0.05%)</title><rect x="568.0" y="1059.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="571.0" y="1070.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="568.5" y="1075.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="571.5" y="1086.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="568.8" y="1075.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="571.8" y="1086.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="569.1" y="1075.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="572.1" y="1086.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.09%)</title><rect x="569.6" y="1075.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="572.6" y="1086.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="569.6" y="1059.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="572.6" y="1070.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.07%)</title><rect x="569.9" y="1059.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="572.9" y="1070.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.07%)</title><rect x="569.9" y="1043.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="572.9" y="1054.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="569.9" y="1027.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="572.9" y="1038.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="570.2" y="1027.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="573.2" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="570.2" y="1011.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="573.2" y="1022.0"></text>
</g>
<g>
<title>tcp_mtu_probe (2 samples, 0.05%)</title><rect x="570.7" y="1075.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="573.7" y="1086.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.02%)</title><rect x="571.3" y="1075.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="574.3" y="1086.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.05%)</title><rect x="571.5" y="1075.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="574.5" y="1086.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="572.1" y="1075.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="575.1" y="1086.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="572.1" y="1059.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="575.1" y="1070.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="572.1" y="1043.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="575.1" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="572.1" y="1027.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="575.1" y="1038.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.02%)</title><rect x="572.4" y="1075.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="575.4" y="1086.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.09%)</title><rect x="572.6" y="1123.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="575.6" y="1134.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.05%)</title><rect x="572.9" y="1107.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="575.9" y="1118.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.02%)</title><rect x="573.5" y="1107.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="576.5" y="1118.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="573.7" y="1139.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="576.7" y="1150.0"></text>
</g>
<g>
<title>rw_verify_area (8 samples, 0.19%)</title><rect x="574.0" y="1219.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="577.0" y="1230.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.05%)</title><rect x="574.0" y="1203.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="577.0" y="1214.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.14%)</title><rect x="574.6" y="1203.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="577.6" y="1214.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.09%)</title><rect x="574.6" y="1187.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="577.6" y="1198.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.09%)</title><rect x="574.6" y="1171.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="577.6" y="1182.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.05%)</title><rect x="575.6" y="1187.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="578.6" y="1198.0"></text>
</g>
<g>
<title>sock_write_iter (2 samples, 0.05%)</title><rect x="576.2" y="1219.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="579.2" y="1230.0"></text>
</g>
<g>
<title>import_iovec (3 samples, 0.07%)</title><rect x="576.7" y="1235.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="579.7" y="1246.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="576.7" y="1219.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="579.7" y="1230.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (2 samples, 0.05%)</title><rect x="577.0" y="1219.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="580.0" y="1230.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="577.0" y="1203.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="580.0" y="1214.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.02%)</title><rect x="577.0" y="1187.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="580.0" y="1198.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="577.3" y="1203.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="580.3" y="1214.0"></text>
</g>
<g>
<title>do_writev (1 samples, 0.02%)</title><rect x="577.6" y="1283.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="580.6" y="1294.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="577.8" y="1283.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="580.8" y="1294.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="577.8" y="1267.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="580.8" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.12%)</title><rect x="578.1" y="1363.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="581.1" y="1374.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.05%)</title><rect x="578.9" y="1347.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="581.9" y="1358.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.05%)</title><rect x="578.9" y="1331.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="581.9" y="1342.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3 samples, 0.07%)</title><rect x="579.5" y="1427.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="582.5" y="1438.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.02%)</title><rect x="579.5" y="1411.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="582.5" y="1422.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (2 samples, 0.05%)</title><rect x="579.7" y="1411.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="582.7" y="1422.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (2 samples, 0.05%)</title><rect x="579.7" y="1395.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="582.7" y="1406.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.02%)</title><rect x="580.0" y="1379.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="583.0" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.02%)</title><rect x="580.3" y="1443.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.3" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.02%)</title><rect x="580.3" y="1427.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="583.3" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.compareAndSet (1 samples, 0.02%)</title><rect x="580.3" y="1411.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="583.3" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (2 samples, 0.05%)</title><rect x="580.6" y="1443.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.6" y="1454.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.02%)</title><rect x="580.8" y="1427.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="583.8" y="1438.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (1 samples, 0.02%)</title><rect x="580.8" y="1411.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="583.8" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.get (2 samples, 0.05%)</title><rect x="581.1" y="1635.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="584.1" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.get (2 samples, 0.05%)</title><rect x="581.1" y="1619.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="584.1" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (626 samples, 14.52%)</title><rect x="581.7" y="1683.0" width="171.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="584.7" y="1694.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (625 samples, 14.49%)</title><rect x="581.9" y="1667.0" width="171.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="584.9" y="1678.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (236 samples, 5.47%)</title><rect x="582.2" y="1651.0" width="64.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="585.2" y="1662.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.run (236 samples, 5.47%)</title><rect x="582.2" y="1635.0" width="64.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="585.2" y="1646.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (236 samples, 5.47%)</title><rect x="582.2" y="1619.0" width="64.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="585.2" y="1630.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (34 samples, 0.79%)</title><rect x="582.2" y="1603.0" width="9.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="585.2" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (32 samples, 0.74%)</title><rect x="582.2" y="1587.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="585.2" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (32 samples, 0.74%)</title><rect x="582.2" y="1571.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.2" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (32 samples, 0.74%)</title><rect x="582.2" y="1555.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="585.2" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (32 samples, 0.74%)</title><rect x="582.2" y="1539.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="585.2" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (32 samples, 0.74%)</title><rect x="582.2" y="1523.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="585.2" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (32 samples, 0.74%)</title><rect x="582.2" y="1507.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="585.2" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (32 samples, 0.74%)</title><rect x="582.2" y="1491.0" width="8.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.2" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.02%)</title><rect x="582.2" y="1475.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.2" y="1486.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (1 samples, 0.02%)</title><rect x="582.2" y="1459.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="585.2" y="1470.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.register (1 samples, 0.02%)</title><rect x="582.2" y="1443.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.2" y="1454.0"></text>
</g>
<g>
<title>java/nio/channels/SelectionKey.attach (1 samples, 0.02%)</title><rect x="582.2" y="1427.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="585.2" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (26 samples, 0.60%)</title><rect x="582.5" y="1475.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.5" y="1486.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (26 samples, 0.60%)</title><rect x="582.5" y="1459.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="585.5" y="1470.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (26 samples, 0.60%)</title><rect x="582.5" y="1443.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="585.5" y="1454.0"></text>
</g>
<g>
<title>__write (26 samples, 0.60%)</title><rect x="582.5" y="1427.0" width="7.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="585.5" y="1438.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.58%)</title><rect x="582.8" y="1411.0" width="6.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="585.8" y="1422.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.58%)</title><rect x="582.8" y="1395.0" width="6.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="585.8" y="1406.0"></text>
</g>
<g>
<title>__x64_sys_write (24 samples, 0.56%)</title><rect x="583.0" y="1379.0" width="6.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="586.0" y="1390.0"></text>
</g>
<g>
<title>ksys_write (24 samples, 0.56%)</title><rect x="583.0" y="1363.0" width="6.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="586.0" y="1374.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.05%)</title><rect x="583.0" y="1347.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="586.0" y="1358.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="583.0" y="1331.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="586.0" y="1342.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.05%)</title><rect x="583.0" y="1315.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="586.0" y="1326.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="583.6" y="1347.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="586.6" y="1358.0"></text>
</g>
<g>
<title>vfs_write (21 samples, 0.49%)</title><rect x="583.9" y="1347.0" width="5.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="586.9" y="1358.0"></text>
</g>
<g>
<title>__vfs_write (18 samples, 0.42%)</title><rect x="584.1" y="1331.0" width="5.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="587.1" y="1342.0"></text>
</g>
<g>
<title>new_sync_write (18 samples, 0.42%)</title><rect x="584.1" y="1315.0" width="5.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="587.1" y="1326.0"></text>
</g>
<g>
<title>pipe_write (18 samples, 0.42%)</title><rect x="584.1" y="1299.0" width="5.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="587.1" y="1310.0"></text>
</g>
<g>
<title>__wake_up_sync_key (13 samples, 0.30%)</title><rect x="584.7" y="1283.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="587.7" y="1294.0"></text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 0.30%)</title><rect x="584.7" y="1267.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="587.7" y="1278.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.28%)</title><rect x="584.9" y="1251.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="587.9" y="1262.0"></text>
</g>
<g>
<title>file_update_time (3 samples, 0.07%)</title><rect x="588.2" y="1283.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="591.2" y="1294.0"></text>
</g>
<g>
<title>timespec64_trunc (1 samples, 0.02%)</title><rect x="588.8" y="1267.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="591.8" y="1278.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.05%)</title><rect x="589.1" y="1331.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="592.1" y="1342.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="589.1" y="1315.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="592.1" y="1326.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.02%)</title><rect x="589.3" y="1315.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="592.3" y="1326.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="589.3" y="1299.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="592.3" y="1310.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.02%)</title><rect x="589.3" y="1283.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="592.3" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.abort (5 samples, 0.12%)</title><rect x="589.6" y="1475.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="592.6" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalError (5 samples, 0.12%)</title><rect x="589.6" y="1459.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="592.6" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalError (5 samples, 0.12%)</title><rect x="589.6" y="1443.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="592.6" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (5 samples, 0.12%)</title><rect x="589.6" y="1427.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="592.6" y="1438.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="590.7" y="1411.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="593.7" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (2 samples, 0.05%)</title><rect x="591.0" y="1587.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="594.0" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (1 samples, 0.02%)</title><rect x="591.5" y="1603.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="594.5" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.get (1 samples, 0.02%)</title><rect x="591.5" y="1587.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="594.5" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (201 samples, 4.66%)</title><rect x="591.8" y="1603.0" width="55.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="594.8" y="1614.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (201 samples, 4.66%)</title><rect x="591.8" y="1587.0" width="55.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="594.8" y="1598.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (201 samples, 4.66%)</title><rect x="591.8" y="1571.0" width="55.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="594.8" y="1582.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (201 samples, 4.66%)</title><rect x="591.8" y="1555.0" width="55.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.8" y="1566.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (119 samples, 2.76%)</title><rect x="591.8" y="1539.0" width="32.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="594.8" y="1550.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (119 samples, 2.76%)</title><rect x="591.8" y="1523.0" width="32.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="594.8" y="1534.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (119 samples, 2.76%)</title><rect x="591.8" y="1507.0" width="32.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="594.8" y="1518.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (116 samples, 2.69%)</title><rect x="592.6" y="1491.0" width="31.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.6" y="1502.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.05%)</title><rect x="592.9" y="1475.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="595.9" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.05%)</title><rect x="592.9" y="1459.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="595.9" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.05%)</title><rect x="592.9" y="1443.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.9" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.localInit (1 samples, 0.02%)</title><rect x="593.2" y="1427.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="596.2" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.mix64 (1 samples, 0.02%)</title><rect x="593.2" y="1411.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="596.2" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (113 samples, 2.62%)</title><rect x="593.4" y="1475.0" width="31.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="596.4" y="1486.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (113 samples, 2.62%)</title><rect x="593.4" y="1459.0" width="31.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="596.4" y="1470.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (113 samples, 2.62%)</title><rect x="593.4" y="1443.0" width="31.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="596.4" y="1454.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (6 samples, 0.14%)</title><rect x="593.4" y="1427.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="596.4" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (6 samples, 0.14%)</title><rect x="593.4" y="1411.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="596.4" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (6 samples, 0.14%)</title><rect x="593.4" y="1395.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="596.4" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.05%)</title><rect x="595.1" y="1427.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="598.1" y="1438.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="595.1" y="1411.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="598.1" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (100 samples, 2.32%)</title><rect x="595.6" y="1427.0" width="27.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="598.6" y="1438.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (99 samples, 2.30%)</title><rect x="595.9" y="1411.0" width="27.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="598.9" y="1422.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (77 samples, 1.79%)</title><rect x="598.4" y="1395.0" width="21.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.4" y="1406.0">j..</text>
</g>
<g>
<title>itable stub (4 samples, 0.09%)</title><rect x="598.9" y="1379.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="601.9" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.05%)</title><rect x="600.0" y="1379.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="603.0" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.05%)</title><rect x="600.0" y="1363.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.0" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.05%)</title><rect x="600.0" y="1347.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="603.0" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.05%)</title><rect x="600.0" y="1331.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="603.0" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.localInit (2 samples, 0.05%)</title><rect x="600.0" y="1315.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.0" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.mix64 (2 samples, 0.05%)</title><rect x="600.0" y="1299.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.0" y="1310.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$48/1970436060.apply (2 samples, 0.05%)</title><rect x="600.5" y="1379.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="603.5" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$533/1265756444.apply (5 samples, 0.12%)</title><rect x="601.1" y="1379.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="604.1" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (3 samples, 0.07%)</title><rect x="601.6" y="1363.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="604.6" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (3 samples, 0.07%)</title><rect x="601.6" y="1347.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="604.6" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.05%)</title><rect x="601.9" y="1331.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="604.9" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.05%)</title><rect x="601.9" y="1315.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="604.9" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.05%)</title><rect x="601.9" y="1299.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="604.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.05%)</title><rect x="601.9" y="1283.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="604.9" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.05%)</title><rect x="601.9" y="1267.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="604.9" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$151/1373859138.apply (51 samples, 1.18%)</title><rect x="602.5" y="1379.0" width="13.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="605.5" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (50 samples, 1.16%)</title><rect x="602.7" y="1363.0" width="13.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="605.7" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="602.7" y="1347.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="605.7" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="602.7" y="1331.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="605.7" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$607/831886457.get$Lambda (2 samples, 0.05%)</title><rect x="602.7" y="1315.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="605.7" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$607/831886457.&lt;init&gt; (2 samples, 0.05%)</title><rect x="602.7" y="1299.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="605.7" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.02%)</title><rect x="603.0" y="1283.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="606.0" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (48 samples, 1.11%)</title><rect x="603.3" y="1347.0" width="13.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="606.3" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (48 samples, 1.11%)</title><rect x="603.3" y="1331.0" width="13.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="606.3" y="1342.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$141/925456338.apply (4 samples, 0.09%)</title><rect x="603.3" y="1315.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.3" y="1326.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$discarding$6 (4 samples, 0.09%)</title><rect x="603.3" y="1299.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.3" y="1310.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.discarding (4 samples, 0.09%)</title><rect x="603.3" y="1283.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="606.3" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (4 samples, 0.09%)</title><rect x="603.3" y="1267.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="606.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.02%)</title><rect x="604.1" y="1251.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="607.1" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (44 samples, 1.02%)</title><rect x="604.4" y="1315.0" width="12.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.4" y="1326.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (17 samples, 0.39%)</title><rect x="604.4" y="1299.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.4" y="1310.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.02%)</title><rect x="604.4" y="1283.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="607.4" y="1294.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.02%)</title><rect x="604.4" y="1267.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.4" y="1278.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.02%)</title><rect x="604.4" y="1251.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="607.4" y="1262.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.02%)</title><rect x="604.4" y="1235.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.4" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.02%)</title><rect x="604.4" y="1219.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="607.4" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (10 samples, 0.23%)</title><rect x="604.7" y="1283.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="607.7" y="1294.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (10 samples, 0.23%)</title><rect x="604.7" y="1267.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="607.7" y="1278.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (1 samples, 0.02%)</title><rect x="604.7" y="1251.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.7" y="1262.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="604.7" y="1235.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="607.7" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (9 samples, 0.21%)</title><rect x="604.9" y="1251.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.9" y="1262.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.16%)</title><rect x="605.2" y="1235.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="608.2" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.09%)</title><rect x="605.7" y="1219.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="608.7" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.02%)</title><rect x="605.7" y="1203.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="608.7" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.05%)</title><rect x="606.0" y="1203.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="609.0" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.02%)</title><rect x="606.3" y="1187.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="609.3" y="1198.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (1 samples, 0.02%)</title><rect x="606.3" y="1171.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="609.3" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (1 samples, 0.02%)</title><rect x="606.3" y="1155.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="609.3" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.accept (1 samples, 0.02%)</title><rect x="606.3" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="609.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.02%)</title><rect x="606.3" y="1123.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="609.3" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.getStreamAndOpFlags (1 samples, 0.02%)</title><rect x="606.6" y="1203.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.6" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.02%)</title><rect x="606.8" y="1219.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="609.8" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (1 samples, 0.02%)</title><rect x="606.8" y="1203.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="609.8" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.02%)</title><rect x="607.1" y="1235.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="610.1" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.02%)</title><rect x="607.1" y="1219.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="610.1" y="1230.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (1 samples, 0.02%)</title><rect x="607.1" y="1203.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="610.1" y="1214.0"></text>
</g>
<g>
<title>java/util/OptionalLong.&lt;init&gt; (1 samples, 0.02%)</title><rect x="607.1" y="1187.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="607.1" y="1171.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="610.1" y="1182.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.02%)</title><rect x="607.1" y="1155.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="610.1" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (6 samples, 0.14%)</title><rect x="607.4" y="1283.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="610.4" y="1294.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.&lt;init&gt; (5 samples, 0.12%)</title><rect x="607.7" y="1267.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="610.7" y="1278.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.&lt;init&gt; (5 samples, 0.12%)</title><rect x="607.7" y="1251.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="610.7" y="1262.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.&lt;init&gt; (5 samples, 0.12%)</title><rect x="607.7" y="1235.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="610.7" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (5 samples, 0.12%)</title><rect x="607.7" y="1219.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="610.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="608.8" y="1203.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="611.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.09%)</title><rect x="609.0" y="1299.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.0" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="609.0" y="1283.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="612.0" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.02%)</title><rect x="609.0" y="1267.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="612.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="609.0" y="1251.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="612.0" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="609.3" y="1267.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="609.3" y="1251.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="612.3" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.05%)</title><rect x="609.6" y="1283.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="612.6" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="609.6" y="1267.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="612.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (2 samples, 0.05%)</title><rect x="609.6" y="1251.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="612.6" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.05%)</title><rect x="609.6" y="1235.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="612.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.&lt;init&gt; (1 samples, 0.02%)</title><rect x="610.1" y="1299.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="613.1" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (2 samples, 0.05%)</title><rect x="610.4" y="1299.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="613.4" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (20 samples, 0.46%)</title><rect x="610.9" y="1299.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="613.9" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$587/849392828.run (19 samples, 0.44%)</title><rect x="611.2" y="1283.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="614.2" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (19 samples, 0.44%)</title><rect x="611.2" y="1267.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="614.2" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (2 samples, 0.05%)</title><rect x="611.2" y="1251.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.2" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.acquire (3 samples, 0.07%)</title><rect x="611.8" y="1251.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="614.8" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.reference (1 samples, 0.02%)</title><rect x="612.3" y="1235.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="615.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.02%)</title><rect x="612.3" y="1219.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="615.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (1 samples, 0.02%)</title><rect x="612.6" y="1251.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="615.6" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (8 samples, 0.19%)</title><rect x="612.9" y="1251.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="615.9" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (8 samples, 0.19%)</title><rect x="612.9" y="1235.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="615.9" y="1246.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (8 samples, 0.19%)</title><rect x="612.9" y="1219.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="615.9" y="1230.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (8 samples, 0.19%)</title><rect x="612.9" y="1203.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="615.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (8 samples, 0.19%)</title><rect x="612.9" y="1187.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.9" y="1198.0"></text>
</g>
<g>
<title>JVM_IHashCode (8 samples, 0.19%)</title><rect x="612.9" y="1171.0" width="2.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="615.9" y="1182.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (6 samples, 0.14%)</title><rect x="613.4" y="1155.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="616.4" y="1166.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (2 samples, 0.05%)</title><rect x="614.5" y="1139.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="617.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (2 samples, 0.05%)</title><rect x="615.1" y="1251.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="618.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="615.3" y="1235.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="618.3" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/282265585.invoke (1 samples, 0.02%)</title><rect x="615.3" y="1219.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="618.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="615.3" y="1203.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="618.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.02%)</title><rect x="615.3" y="1187.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="618.3" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (3 samples, 0.07%)</title><rect x="615.6" y="1251.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="618.6" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (3 samples, 0.07%)</title><rect x="615.6" y="1235.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="618.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="615.6" y="1219.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="618.6" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/282265585.invoke (2 samples, 0.05%)</title><rect x="615.6" y="1203.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="618.6" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="615.6" y="1187.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="618.6" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.05%)</title><rect x="615.6" y="1171.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="618.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.05%)</title><rect x="615.6" y="1155.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="618.6" y="1166.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="615.6" y="1139.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="618.6" y="1150.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="615.9" y="1139.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="618.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.02%)</title><rect x="616.1" y="1219.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="619.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.02%)</title><rect x="616.1" y="1203.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.1" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.02%)</title><rect x="616.1" y="1187.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="619.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.02%)</title><rect x="616.1" y="1171.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="619.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$446/989563096.apply (11 samples, 0.26%)</title><rect x="616.4" y="1379.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="619.4" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (9 samples, 0.21%)</title><rect x="617.0" y="1363.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="620.0" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (7 samples, 0.16%)</title><rect x="617.0" y="1347.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="620.0" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (4 samples, 0.09%)</title><rect x="617.8" y="1331.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="620.8" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (4 samples, 0.09%)</title><rect x="617.8" y="1315.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="620.8" y="1326.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (3 samples, 0.07%)</title><rect x="618.1" y="1299.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="621.1" y="1310.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (1 samples, 0.02%)</title><rect x="618.3" y="1283.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="621.3" y="1294.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.02%)</title><rect x="618.3" y="1267.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="621.3" y="1278.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.02%)</title><rect x="618.6" y="1283.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="621.6" y="1294.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.02%)</title><rect x="618.6" y="1267.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="621.6" y="1278.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.02%)</title><rect x="618.6" y="1251.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="621.6" y="1262.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (1 samples, 0.02%)</title><rect x="618.6" y="1235.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="621.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.05%)</title><rect x="618.9" y="1347.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="621.9" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.05%)</title><rect x="618.9" y="1331.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="621.9" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.05%)</title><rect x="618.9" y="1315.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.9" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.05%)</title><rect x="618.9" y="1299.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="621.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.05%)</title><rect x="618.9" y="1283.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="621.9" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (9 samples, 0.21%)</title><rect x="619.4" y="1395.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.4" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9 samples, 0.21%)</title><rect x="619.4" y="1379.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="622.4" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$449/843290145.apply (8 samples, 0.19%)</title><rect x="619.7" y="1363.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="622.7" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (8 samples, 0.19%)</title><rect x="619.7" y="1347.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="622.7" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (6 samples, 0.14%)</title><rect x="619.7" y="1331.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="622.7" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (5 samples, 0.12%)</title><rect x="620.0" y="1315.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.0" y="1326.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (5 samples, 0.12%)</title><rect x="620.0" y="1299.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="623.0" y="1310.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (4 samples, 0.09%)</title><rect x="620.3" y="1283.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="623.3" y="1294.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (3 samples, 0.07%)</title><rect x="620.5" y="1267.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="623.5" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (2 samples, 0.05%)</title><rect x="620.5" y="1251.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="623.5" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (1 samples, 0.02%)</title><rect x="620.8" y="1235.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.8" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.02%)</title><rect x="621.1" y="1251.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="624.1" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExceptionalCF (2 samples, 0.05%)</title><rect x="621.3" y="1331.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.3" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.failedFuture (2 samples, 0.05%)</title><rect x="621.3" y="1315.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="624.3" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeExceptionally (2 samples, 0.05%)</title><rect x="621.3" y="1299.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="624.3" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (2 samples, 0.05%)</title><rect x="621.3" y="1283.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="624.3" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.05%)</title><rect x="621.3" y="1267.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.3" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.05%)</title><rect x="621.3" y="1251.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="624.3" y="1262.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.02%)</title><rect x="621.6" y="1235.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="624.6" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (3 samples, 0.07%)</title><rect x="621.9" y="1395.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="624.9" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.05%)</title><rect x="622.2" y="1379.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="625.2" y="1390.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="622.7" y="1395.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="625.7" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$553/1767458720.apply (5 samples, 0.12%)</title><rect x="623.0" y="1427.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="626.0" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (5 samples, 0.12%)</title><rect x="623.0" y="1411.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="626.0" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (2 samples, 0.05%)</title><rect x="623.0" y="1395.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="626.0" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (3 samples, 0.07%)</title><rect x="623.5" y="1395.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="626.5" y="1406.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.07%)</title><rect x="623.5" y="1379.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="626.5" y="1390.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="623.8" y="1363.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="626.8" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="624.1" y="1363.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="627.1" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (78 samples, 1.81%)</title><rect x="624.4" y="1539.0" width="21.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="627.4" y="1550.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (1 samples, 0.02%)</title><rect x="625.7" y="1523.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="628.7" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.maybeStartHeaders (3 samples, 0.07%)</title><rect x="626.0" y="1523.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="629.0" y="1534.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.05%)</title><rect x="626.0" y="1507.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="629.0" y="1518.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.05%)</title><rect x="626.0" y="1491.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="629.0" y="1502.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.05%)</title><rect x="626.0" y="1475.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.0" y="1486.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.newCapacity (1 samples, 0.02%)</title><rect x="626.3" y="1459.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="629.3" y="1470.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="626.5" y="1507.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="629.5" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (14 samples, 0.32%)</title><rect x="626.8" y="1523.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="629.8" y="1534.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.07%)</title><rect x="628.5" y="1507.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="631.5" y="1518.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.07%)</title><rect x="628.5" y="1491.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="631.5" y="1502.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.09%)</title><rect x="629.3" y="1507.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="632.3" y="1518.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (2 samples, 0.05%)</title><rect x="629.8" y="1491.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.8" y="1502.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="630.4" y="1507.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="633.4" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (5 samples, 0.12%)</title><rect x="630.6" y="1523.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="633.6" y="1534.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.09%)</title><rect x="630.6" y="1507.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="633.6" y="1518.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.09%)</title><rect x="630.6" y="1491.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="633.6" y="1502.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.05%)</title><rect x="631.2" y="1475.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="634.2" y="1486.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="631.5" y="1459.0" width="0.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="634.5" y="1470.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="631.7" y="1507.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="634.7" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (5 samples, 0.12%)</title><rect x="632.0" y="1523.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.0" y="1534.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.07%)</title><rect x="632.3" y="1507.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="635.3" y="1518.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.07%)</title><rect x="632.3" y="1491.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="635.3" y="1502.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.02%)</title><rect x="632.6" y="1475.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.6" y="1486.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.02%)</title><rect x="632.6" y="1459.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="635.6" y="1470.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (1 samples, 0.02%)</title><rect x="632.6" y="1443.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="635.6" y="1454.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="632.8" y="1475.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="635.8" y="1486.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.02%)</title><rect x="632.8" y="1459.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.8" y="1470.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="632.8" y="1443.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="635.8" y="1454.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.02%)</title><rect x="633.1" y="1507.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="636.1" y="1518.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="633.1" y="1491.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="636.1" y="1502.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="633.1" y="1475.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="636.1" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (22 samples, 0.51%)</title><rect x="633.4" y="1523.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="636.4" y="1534.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (19 samples, 0.44%)</title><rect x="634.2" y="1507.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="637.2" y="1518.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (18 samples, 0.42%)</title><rect x="634.5" y="1491.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.5" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="634.5" y="1475.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="637.5" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="634.5" y="1459.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="637.5" y="1470.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.get$Lambda (1 samples, 0.02%)</title><rect x="634.5" y="1443.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="637.5" y="1454.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (1 samples, 0.02%)</title><rect x="634.8" y="1475.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="637.8" y="1486.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (1 samples, 0.02%)</title><rect x="634.8" y="1459.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="637.8" y="1470.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="634.8" y="1443.0" width="0.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="637.8" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (14 samples, 0.32%)</title><rect x="635.0" y="1475.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.0" y="1486.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.accept (13 samples, 0.30%)</title><rect x="635.3" y="1459.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="638.3" y="1470.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (12 samples, 0.28%)</title><rect x="635.6" y="1443.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="638.6" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.14%)</title><rect x="635.6" y="1427.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.6" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.14%)</title><rect x="635.6" y="1411.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="638.6" y="1422.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.get$Lambda (6 samples, 0.14%)</title><rect x="635.6" y="1395.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="638.6" y="1406.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.&lt;init&gt; (6 samples, 0.14%)</title><rect x="635.6" y="1379.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="638.6" y="1390.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="635.8" y="1363.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="638.8" y="1374.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="636.4" y="1363.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="639.4" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$79/361268035.test (2 samples, 0.05%)</title><rect x="636.7" y="1363.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="639.7" y="1374.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.02%)</title><rect x="637.2" y="1427.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.2" y="1438.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.accept (1 samples, 0.02%)</title><rect x="637.2" y="1411.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="640.2" y="1422.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.02%)</title><rect x="637.2" y="1395.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="640.2" y="1406.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.02%)</title><rect x="637.2" y="1379.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="640.2" y="1390.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.02%)</title><rect x="637.2" y="1363.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="640.2" y="1374.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="637.2" y="1347.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.2" y="1358.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.02%)</title><rect x="637.5" y="1427.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.5" y="1438.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.02%)</title><rect x="637.5" y="1411.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.5" y="1422.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.02%)</title><rect x="637.5" y="1395.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="640.5" y="1406.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListN.&lt;init&gt; (1 samples, 0.02%)</title><rect x="637.5" y="1379.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="640.5" y="1390.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.09%)</title><rect x="637.8" y="1427.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="640.8" y="1438.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (3 samples, 0.07%)</title><rect x="637.8" y="1411.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="640.8" y="1422.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.07%)</title><rect x="637.8" y="1395.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="640.8" y="1406.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.07%)</title><rect x="637.8" y="1379.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="640.8" y="1390.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.07%)</title><rect x="637.8" y="1363.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="640.8" y="1374.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="638.0" y="1347.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="641.0" y="1358.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="638.0" y="1331.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="641.0" y="1342.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="638.0" y="1315.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="641.0" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.getChar (1 samples, 0.02%)</title><rect x="638.3" y="1347.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="641.3" y="1358.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.02%)</title><rect x="638.6" y="1411.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="641.6" y="1422.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (1 samples, 0.02%)</title><rect x="638.6" y="1395.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="641.6" y="1406.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (2 samples, 0.05%)</title><rect x="638.9" y="1475.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="641.9" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (23 samples, 0.53%)</title><rect x="639.4" y="1523.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.4" y="1534.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="639.7" y="1507.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.7" y="1518.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.05%)</title><rect x="640.0" y="1507.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="643.0" y="1518.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="640.5" y="1507.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="643.5" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (18 samples, 0.42%)</title><rect x="640.8" y="1507.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="643.8" y="1518.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (2 samples, 0.05%)</title><rect x="641.0" y="1491.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="644.0" y="1502.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="641.6" y="1491.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="644.6" y="1502.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.09%)</title><rect x="641.9" y="1491.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="644.9" y="1502.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.07%)</title><rect x="643.0" y="1491.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.0" y="1502.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.05%)</title><rect x="643.2" y="1475.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="646.2" y="1486.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.02%)</title><rect x="643.8" y="1491.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="646.8" y="1502.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.02%)</title><rect x="643.8" y="1475.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="646.8" y="1486.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (6 samples, 0.14%)</title><rect x="644.1" y="1491.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="647.1" y="1502.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.07%)</title><rect x="644.1" y="1475.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="647.1" y="1486.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="644.6" y="1459.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.6" y="1470.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="644.6" y="1443.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.6" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.02%)</title><rect x="644.9" y="1475.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="647.9" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$577/496477348.apply (2 samples, 0.05%)</title><rect x="645.2" y="1475.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="648.2" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (2 samples, 0.05%)</title><rect x="645.2" y="1459.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="648.2" y="1470.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="645.4" y="1443.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="648.4" y="1454.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="645.4" y="1427.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="648.4" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$376/1981716426.accept (4 samples, 0.09%)</title><rect x="645.7" y="1539.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="648.7" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (4 samples, 0.09%)</title><rect x="645.7" y="1523.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="648.7" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (3 samples, 0.07%)</title><rect x="646.0" y="1507.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.0" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (388 samples, 9.00%)</title><rect x="646.8" y="1651.0" width="106.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="649.8" y="1662.0">jdk/internal/..</text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (1 samples, 0.02%)</title><rect x="647.1" y="1635.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="650.1" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (386 samples, 8.95%)</title><rect x="647.3" y="1635.0" width="105.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="650.3" y="1646.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (3 samples, 0.07%)</title><rect x="647.3" y="1619.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.3" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (3 samples, 0.07%)</title><rect x="647.3" y="1603.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="650.3" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (3 samples, 0.07%)</title><rect x="647.3" y="1587.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.3" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.07%)</title><rect x="647.3" y="1571.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="650.3" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.07%)</title><rect x="647.3" y="1555.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.3" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.02%)</title><rect x="647.3" y="1539.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="650.3" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.02%)</title><rect x="647.3" y="1523.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.3" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.02%)</title><rect x="647.3" y="1507.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.3" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.02%)</title><rect x="647.3" y="1491.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="650.3" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.02%)</title><rect x="647.3" y="1475.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.3" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.02%)</title><rect x="647.3" y="1459.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="650.3" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="647.6" y="1539.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.6" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="647.6" y="1523.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.6" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (383 samples, 8.88%)</title><rect x="648.2" y="1619.0" width="104.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="651.2" y="1630.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.run (383 samples, 8.88%)</title><rect x="648.2" y="1603.0" width="104.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="651.2" y="1614.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (383 samples, 8.88%)</title><rect x="648.2" y="1587.0" width="104.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="651.2" y="1598.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (383 samples, 8.88%)</title><rect x="648.2" y="1571.0" width="104.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="651.2" y="1582.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="656.1" y="1555.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.1" y="1566.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="656.1" y="1539.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="659.1" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$394/574621129.get$Lambda (1 samples, 0.02%)</title><rect x="656.1" y="1523.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.1" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$394/574621129.&lt;init&gt; (1 samples, 0.02%)</title><rect x="656.1" y="1507.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="659.1" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (8 samples, 0.19%)</title><rect x="656.4" y="1555.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="659.4" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (5 samples, 0.12%)</title><rect x="657.2" y="1539.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="660.2" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (2 samples, 0.05%)</title><rect x="658.0" y="1523.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.0" y="1534.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (1 samples, 0.02%)</title><rect x="658.3" y="1507.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="661.3" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (345 samples, 8.00%)</title><rect x="658.6" y="1555.0" width="94.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="661.6" y="1566.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (345 samples, 8.00%)</title><rect x="658.6" y="1539.0" width="94.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.6" y="1550.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$589/1973295159.run (119 samples, 2.76%)</title><rect x="659.9" y="1523.0" width="32.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="662.9" y="1534.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (119 samples, 2.76%)</title><rect x="659.9" y="1507.0" width="32.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="662.9" y="1518.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (119 samples, 2.76%)</title><rect x="659.9" y="1491.0" width="32.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="662.9" y="1502.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (21 samples, 0.49%)</title><rect x="660.2" y="1475.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.2" y="1486.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (7 samples, 0.16%)</title><rect x="660.2" y="1459.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="663.2" y="1470.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="660.5" y="1443.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="663.5" y="1454.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.02%)</title><rect x="660.8" y="1443.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="663.8" y="1454.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.02%)</title><rect x="660.8" y="1427.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="663.8" y="1438.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.02%)</title><rect x="660.8" y="1411.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="663.8" y="1422.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.02%)</title><rect x="660.8" y="1395.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="663.8" y="1406.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="660.8" y="1379.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="663.8" y="1390.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="660.8" y="1363.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="663.8" y="1374.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="660.8" y="1347.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="663.8" y="1358.0"></text>
</g>
<g>
<title>java/util/List.of (4 samples, 0.09%)</title><rect x="661.0" y="1443.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="664.0" y="1454.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.emptyList (4 samples, 0.09%)</title><rect x="661.0" y="1427.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="664.0" y="1438.0"></text>
</g>
<g>
<title>java/util/Collection.stream (7 samples, 0.16%)</title><rect x="662.1" y="1459.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="665.1" y="1470.0"></text>
</g>
<g>
<title>java/util/List.spliterator (2 samples, 0.05%)</title><rect x="662.1" y="1443.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="665.1" y="1454.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.&lt;init&gt; (2 samples, 0.05%)</title><rect x="662.1" y="1427.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.1" y="1438.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.12%)</title><rect x="662.7" y="1443.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="665.7" y="1454.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (2 samples, 0.05%)</title><rect x="662.7" y="1427.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="665.7" y="1438.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (2 samples, 0.05%)</title><rect x="662.7" y="1411.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="665.7" y="1422.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.05%)</title><rect x="662.7" y="1395.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="665.7" y="1406.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (3 samples, 0.07%)</title><rect x="663.2" y="1427.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="666.2" y="1438.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (7 samples, 0.16%)</title><rect x="664.0" y="1459.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="667.0" y="1470.0"></text>
</g>
<g>
<title>java/lang/Long.compare (2 samples, 0.05%)</title><rect x="664.3" y="1443.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="667.3" y="1454.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.09%)</title><rect x="664.9" y="1443.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="667.9" y="1454.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (1 samples, 0.02%)</title><rect x="664.9" y="1427.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="667.9" y="1438.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.07%)</title><rect x="665.1" y="1427.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="668.1" y="1438.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.05%)</title><rect x="665.1" y="1411.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.1" y="1422.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.05%)</title><rect x="665.1" y="1395.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="668.1" y="1406.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.05%)</title><rect x="665.1" y="1379.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.1" y="1390.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (2 samples, 0.05%)</title><rect x="665.1" y="1363.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="668.1" y="1374.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (1 samples, 0.02%)</title><rect x="665.7" y="1411.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.7" y="1422.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (1 samples, 0.02%)</title><rect x="665.7" y="1395.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="668.7" y="1406.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.02%)</title><rect x="665.7" y="1379.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="668.7" y="1390.0"></text>
</g>
<g>
<title>java/util/Optional.map (1 samples, 0.02%)</title><rect x="666.0" y="1475.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="669.0" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (84 samples, 1.95%)</title><rect x="666.2" y="1475.0" width="23.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="669.2" y="1486.0">j..</text>
</g>
<g>
<title>java/time/Instant.now (4 samples, 0.09%)</title><rect x="666.2" y="1459.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="669.2" y="1470.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (4 samples, 0.09%)</title><rect x="666.2" y="1443.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.2" y="1454.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.05%)</title><rect x="666.2" y="1427.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.2" y="1438.0"></text>
</g>
<g>
<title>java/lang/Math.floorMod (2 samples, 0.05%)</title><rect x="666.2" y="1411.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.2" y="1422.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (2 samples, 0.05%)</title><rect x="666.2" y="1395.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.2" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.05%)</title><rect x="666.8" y="1427.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.8" y="1438.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.05%)</title><rect x="666.8" y="1411.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="669.8" y="1422.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="666.8" y="1395.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="669.8" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (80 samples, 1.86%)</title><rect x="667.3" y="1459.0" width="21.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="670.3" y="1470.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (18 samples, 0.42%)</title><rect x="667.3" y="1443.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="670.3" y="1454.0"></text>
</g>
<g>
<title>java/time/Instant.isAfter (4 samples, 0.09%)</title><rect x="668.1" y="1427.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="671.1" y="1438.0"></text>
</g>
<g>
<title>java/time/Instant.compareTo (4 samples, 0.09%)</title><rect x="668.1" y="1411.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="671.1" y="1422.0"></text>
</g>
<g>
<title>java/lang/Long.compare (2 samples, 0.05%)</title><rect x="668.7" y="1395.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="671.7" y="1406.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.05%)</title><rect x="669.2" y="1427.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="672.2" y="1438.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (1 samples, 0.02%)</title><rect x="669.5" y="1411.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="672.5" y="1422.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (4 samples, 0.09%)</title><rect x="669.8" y="1427.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="672.8" y="1438.0"></text>
</g>
<g>
<title>java/time/Duration.toNanos (1 samples, 0.02%)</title><rect x="670.3" y="1411.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="673.3" y="1422.0"></text>
</g>
<g>
<title>java/util/LinkedList.checkPositionIndex (1 samples, 0.02%)</title><rect x="670.6" y="1411.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.6" y="1422.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (2 samples, 0.05%)</title><rect x="670.9" y="1427.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="673.9" y="1438.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (2 samples, 0.05%)</title><rect x="670.9" y="1411.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="673.9" y="1422.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (2 samples, 0.05%)</title><rect x="670.9" y="1395.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="673.9" y="1406.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (1 samples, 0.02%)</title><rect x="671.2" y="1379.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="674.2" y="1390.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.hasNext (1 samples, 0.02%)</title><rect x="671.4" y="1427.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="674.4" y="1438.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (2 samples, 0.05%)</title><rect x="671.7" y="1427.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="674.7" y="1438.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.hasNext (2 samples, 0.05%)</title><rect x="671.7" y="1411.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="674.7" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (14 samples, 0.32%)</title><rect x="672.2" y="1443.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="675.2" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap.get (12 samples, 0.28%)</title><rect x="672.2" y="1427.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="675.2" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (8 samples, 0.19%)</title><rect x="672.2" y="1411.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="675.2" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.02%)</title><rect x="674.2" y="1395.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="677.2" y="1406.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.02%)</title><rect x="674.2" y="1379.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.2" y="1390.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.02%)</title><rect x="674.2" y="1363.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="677.2" y="1374.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (1 samples, 0.02%)</title><rect x="674.2" y="1347.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="677.2" y="1358.0"></text>
</g>
<g>
<title>java/net/Inet4Address.equals (1 samples, 0.02%)</title><rect x="674.2" y="1331.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="677.2" y="1342.0"></text>
</g>
<g>
<title>java/net/InetAddress.holder (1 samples, 0.02%)</title><rect x="674.2" y="1315.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="677.2" y="1326.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.09%)</title><rect x="674.4" y="1411.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="677.4" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (4 samples, 0.09%)</title><rect x="674.4" y="1395.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.4" y="1406.0"></text>
</g>
<g>
<title>java/util/Objects.hash (4 samples, 0.09%)</title><rect x="674.4" y="1379.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="677.4" y="1390.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (4 samples, 0.09%)</title><rect x="674.4" y="1363.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.4" y="1374.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (2 samples, 0.05%)</title><rect x="675.0" y="1347.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="678.0" y="1358.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.hashCode (2 samples, 0.05%)</title><rect x="675.0" y="1331.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="678.0" y="1342.0"></text>
</g>
<g>
<title>java/net/Inet4Address.hashCode (1 samples, 0.02%)</title><rect x="675.3" y="1315.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="678.3" y="1326.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.02%)</title><rect x="675.5" y="1427.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="678.5" y="1438.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.02%)</title><rect x="675.5" y="1411.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="678.5" y="1422.0"></text>
</g>
<g>
<title>java/util/LinkedList$Node.&lt;init&gt; (1 samples, 0.02%)</title><rect x="675.5" y="1395.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="678.5" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (1 samples, 0.02%)</title><rect x="675.8" y="1427.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="678.8" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.&lt;init&gt; (1 samples, 0.02%)</title><rect x="675.8" y="1411.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="678.8" y="1422.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="675.8" y="1395.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="678.8" y="1406.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.02%)</title><rect x="675.8" y="1379.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="678.8" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (48 samples, 1.11%)</title><rect x="676.1" y="1443.0" width="13.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.1" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (48 samples, 1.11%)</title><rect x="676.1" y="1427.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="679.1" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (48 samples, 1.11%)</title><rect x="676.1" y="1411.0" width="13.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="679.1" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (48 samples, 1.11%)</title><rect x="676.1" y="1395.0" width="13.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.1" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (42 samples, 0.97%)</title><rect x="676.3" y="1379.0" width="11.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="679.3" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (42 samples, 0.97%)</title><rect x="676.3" y="1363.0" width="11.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="679.3" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (42 samples, 0.97%)</title><rect x="676.3" y="1347.0" width="11.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="679.3" y="1358.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="676.3" y="1331.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.3" y="1342.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="676.3" y="1315.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.3" y="1326.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="676.9" y="1299.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.9" y="1310.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="676.9" y="1283.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="679.9" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (39 samples, 0.90%)</title><rect x="677.2" y="1331.0" width="10.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="680.2" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (39 samples, 0.90%)</title><rect x="677.2" y="1315.0" width="10.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.2" y="1326.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (2 samples, 0.05%)</title><rect x="677.2" y="1299.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="680.2" y="1310.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="677.7" y="1299.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="680.7" y="1310.0"></text>
</g>
<g>
<title>__write (36 samples, 0.83%)</title><rect x="678.0" y="1299.0" width="9.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="681.0" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.74%)</title><rect x="679.1" y="1283.0" width="8.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="682.1" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 0.74%)</title><rect x="679.1" y="1267.0" width="8.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="682.1" y="1278.0"></text>
</g>
<g>
<title>__x64_sys_write (32 samples, 0.74%)</title><rect x="679.1" y="1251.0" width="8.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="682.1" y="1262.0"></text>
</g>
<g>
<title>ksys_write (32 samples, 0.74%)</title><rect x="679.1" y="1235.0" width="8.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="682.1" y="1246.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.02%)</title><rect x="679.1" y="1219.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="682.1" y="1230.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="679.1" y="1203.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="682.1" y="1214.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="679.1" y="1187.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="682.1" y="1198.0"></text>
</g>
<g>
<title>vfs_write (31 samples, 0.72%)</title><rect x="679.4" y="1219.0" width="8.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="682.4" y="1230.0"></text>
</g>
<g>
<title>__vfs_write (26 samples, 0.60%)</title><rect x="679.4" y="1203.0" width="7.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="682.4" y="1214.0"></text>
</g>
<g>
<title>new_sync_write (26 samples, 0.60%)</title><rect x="679.4" y="1187.0" width="7.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="682.4" y="1198.0"></text>
</g>
<g>
<title>__sb_end_write (1 samples, 0.02%)</title><rect x="679.6" y="1171.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="682.6" y="1182.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="679.9" y="1171.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="682.9" y="1182.0"></text>
</g>
<g>
<title>pipe_write (23 samples, 0.53%)</title><rect x="680.2" y="1171.0" width="6.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="683.2" y="1182.0"></text>
</g>
<g>
<title>__wake_up_sync_key (17 samples, 0.39%)</title><rect x="680.2" y="1155.0" width="4.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="683.2" y="1166.0"></text>
</g>
<g>
<title>__wake_up_common_lock (17 samples, 0.39%)</title><rect x="680.2" y="1139.0" width="4.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="683.2" y="1150.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.39%)</title><rect x="680.2" y="1123.0" width="4.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="683.2" y="1134.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="684.8" y="1155.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="687.8" y="1166.0"></text>
</g>
<g>
<title>copy_page_from_iter (4 samples, 0.09%)</title><rect x="685.1" y="1155.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="688.1" y="1166.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="685.7" y="1139.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="688.7" y="1150.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="685.9" y="1139.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="688.9" y="1150.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.02%)</title><rect x="686.2" y="1155.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="689.2" y="1166.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.02%)</title><rect x="686.2" y="1139.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="689.2" y="1150.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.05%)</title><rect x="686.5" y="1203.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="689.5" y="1214.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.07%)</title><rect x="687.0" y="1203.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="690.0" y="1214.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="687.0" y="1187.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="690.0" y="1198.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.05%)</title><rect x="687.3" y="1187.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="690.3" y="1198.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="687.6" y="1171.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="690.6" y="1182.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.02%)</title><rect x="687.6" y="1155.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="690.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (5 samples, 0.12%)</title><rect x="687.8" y="1379.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.8" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (3 samples, 0.07%)</title><rect x="687.8" y="1363.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="690.8" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3 samples, 0.07%)</title><rect x="687.8" y="1347.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.8" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3 samples, 0.07%)</title><rect x="687.8" y="1331.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="690.8" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1473981203.linkToTargetMethod (3 samples, 0.07%)</title><rect x="687.8" y="1315.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2129442232.invoke (3 samples, 0.07%)</title><rect x="687.8" y="1299.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="687.8" y="1283.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="690.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.02%)</title><rect x="687.8" y="1267.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.8" y="1278.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="687.8" y="1251.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="690.8" y="1262.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="687.8" y="1235.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="690.8" y="1246.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="687.8" y="1219.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="690.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/702025003.invokeStatic (1 samples, 0.02%)</title><rect x="688.1" y="1283.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="691.1" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/701141022.invoke (1 samples, 0.02%)</title><rect x="688.4" y="1283.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.4" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="688.4" y="1267.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="691.4" y="1278.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="688.4" y="1251.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="691.4" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (2 samples, 0.05%)</title><rect x="688.7" y="1363.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="691.7" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (12 samples, 0.28%)</title><rect x="689.2" y="1475.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="692.2" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.isFinished (8 samples, 0.19%)</title><rect x="690.3" y="1459.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="693.3" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$592/820455260.accept (12 samples, 0.28%)</title><rect x="692.5" y="1523.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.5" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (12 samples, 0.28%)</title><rect x="692.5" y="1507.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="695.5" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (12 samples, 0.28%)</title><rect x="692.5" y="1491.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.5" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (12 samples, 0.28%)</title><rect x="692.5" y="1475.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="695.5" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 0.28%)</title><rect x="692.5" y="1459.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.5" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (12 samples, 0.28%)</title><rect x="692.5" y="1443.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="695.5" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (12 samples, 0.28%)</title><rect x="692.5" y="1427.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.5" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.05%)</title><rect x="692.8" y="1411.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.8" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.02%)</title><rect x="693.0" y="1395.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.0" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.02%)</title><rect x="693.0" y="1379.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.0" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.02%)</title><rect x="693.0" y="1363.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="696.0" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.localInit (1 samples, 0.02%)</title><rect x="693.0" y="1347.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="696.0" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.mix64 (1 samples, 0.02%)</title><rect x="693.0" y="1331.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.0" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (6 samples, 0.14%)</title><rect x="693.3" y="1411.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="696.3" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (6 samples, 0.14%)</title><rect x="693.3" y="1395.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="696.3" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (6 samples, 0.14%)</title><rect x="693.3" y="1379.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.3" y="1390.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="693.3" y="1363.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="696.3" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$597/999361704.accept (3 samples, 0.07%)</title><rect x="693.9" y="1363.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="696.9" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$599/2146609873.accept (1 samples, 0.02%)</title><rect x="694.7" y="1363.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.7" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$597/999361704.accept (1 samples, 0.02%)</title><rect x="695.0" y="1411.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.0" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (1 samples, 0.02%)</title><rect x="695.0" y="1395.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="698.0" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$599/2146609873.accept (2 samples, 0.05%)</title><rect x="695.2" y="1411.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="698.2" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (2 samples, 0.05%)</title><rect x="695.2" y="1395.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="698.2" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (2 samples, 0.05%)</title><rect x="695.2" y="1379.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="698.2" y="1390.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (2 samples, 0.05%)</title><rect x="695.2" y="1363.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="698.2" y="1374.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="695.2" y="1347.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="698.2" y="1358.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="695.2" y="1331.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="698.2" y="1342.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="695.2" y="1315.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="698.2" y="1326.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="695.2" y="1299.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="698.2" y="1310.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="695.2" y="1283.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="698.2" y="1294.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="695.2" y="1267.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="698.2" y="1278.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="695.2" y="1251.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="698.2" y="1262.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (1 samples, 0.02%)</title><rect x="695.5" y="1347.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="698.5" y="1358.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (1 samples, 0.02%)</title><rect x="695.5" y="1331.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="698.5" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (99 samples, 2.30%)</title><rect x="695.8" y="1523.0" width="27.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="698.8" y="1534.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (99 samples, 2.30%)</title><rect x="695.8" y="1507.0" width="27.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="698.8" y="1518.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (99 samples, 2.30%)</title><rect x="695.8" y="1491.0" width="27.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="698.8" y="1502.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (99 samples, 2.30%)</title><rect x="695.8" y="1475.0" width="27.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="698.8" y="1486.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (99 samples, 2.30%)</title><rect x="695.8" y="1459.0" width="27.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.8" y="1470.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (99 samples, 2.30%)</title><rect x="695.8" y="1443.0" width="27.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="698.8" y="1454.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (99 samples, 2.30%)</title><rect x="695.8" y="1427.0" width="27.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="698.8" y="1438.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="696.3" y="1411.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.3" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (2 samples, 0.05%)</title><rect x="696.6" y="1411.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.6" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.05%)</title><rect x="696.6" y="1395.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="699.6" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.05%)</title><rect x="696.6" y="1379.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.6" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$601/301086023.accept (2 samples, 0.05%)</title><rect x="696.6" y="1363.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="699.6" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$601/301086023.accept (94 samples, 2.18%)</title><rect x="697.1" y="1411.0" width="25.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.1" y="1422.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (94 samples, 2.18%)</title><rect x="697.1" y="1395.0" width="25.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="700.1" y="1406.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (94 samples, 2.18%)</title><rect x="697.1" y="1379.0" width="25.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="700.1" y="1390.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.02%)</title><rect x="697.1" y="1363.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.1" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="697.1" y="1347.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="700.1" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="697.1" y="1331.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.1" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (93 samples, 2.16%)</title><rect x="697.4" y="1363.0" width="25.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="700.4" y="1374.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4 samples, 0.09%)</title><rect x="698.0" y="1347.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="701.0" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.02%)</title><rect x="698.0" y="1331.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="701.0" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$607/831886457.apply (1 samples, 0.02%)</title><rect x="698.0" y="1315.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.0" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.02%)</title><rect x="698.2" y="1331.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="701.2" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$607/831886457.apply (2 samples, 0.05%)</title><rect x="698.5" y="1331.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="701.5" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (2 samples, 0.05%)</title><rect x="698.5" y="1315.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="701.5" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (1 samples, 0.02%)</title><rect x="698.8" y="1299.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="701.8" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.02%)</title><rect x="699.1" y="1347.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="702.1" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.02%)</title><rect x="699.1" y="1331.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="702.1" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.02%)</title><rect x="699.1" y="1315.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="702.1" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AltResult.&lt;init&gt; (1 samples, 0.02%)</title><rect x="699.1" y="1299.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.1" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (84 samples, 1.95%)</title><rect x="699.3" y="1347.0" width="23.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="702.3" y="1358.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (84 samples, 1.95%)</title><rect x="699.3" y="1331.0" width="23.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="702.3" y="1342.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (73 samples, 1.69%)</title><rect x="699.6" y="1315.0" width="20.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.6" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (73 samples, 1.69%)</title><rect x="699.6" y="1299.0" width="20.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="702.6" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (73 samples, 1.69%)</title><rect x="699.6" y="1283.0" width="20.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="702.6" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (73 samples, 1.69%)</title><rect x="699.6" y="1267.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="702.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.tryLockPhase (1 samples, 0.02%)</title><rect x="699.6" y="1251.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="702.6" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="699.6" y="1235.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.02%)</title><rect x="699.6" y="1219.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.6" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (72 samples, 1.67%)</title><rect x="699.9" y="1251.0" width="19.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="702.9" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (72 samples, 1.67%)</title><rect x="699.9" y="1235.0" width="19.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.9" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (72 samples, 1.67%)</title><rect x="699.9" y="1219.0" width="19.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.9" y="1230.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.21%)</title><rect x="699.9" y="1203.0" width="2.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="702.9" y="1214.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="700.4" y="1187.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="703.4" y="1198.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="700.7" y="1187.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="703.7" y="1198.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="701.3" y="1187.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="704.3" y="1198.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.07%)</title><rect x="701.5" y="1187.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="704.5" y="1198.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="702.1" y="1171.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="705.1" y="1182.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="702.1" y="1155.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="705.1" y="1166.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="702.1" y="1139.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="705.1" y="1150.0"></text>
</g>
<g>
<title>__pthread_cond_signal (63 samples, 1.46%)</title><rect x="702.3" y="1203.0" width="17.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="705.3" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (49 samples, 1.14%)</title><rect x="705.9" y="1187.0" width="13.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="708.9" y="1198.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="705.9" y="1171.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="708.9" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (48 samples, 1.11%)</title><rect x="706.2" y="1171.0" width="13.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="709.2" y="1182.0"></text>
</g>
<g>
<title>__x64_sys_futex (43 samples, 1.00%)</title><rect x="707.5" y="1155.0" width="11.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="710.5" y="1166.0"></text>
</g>
<g>
<title>do_futex (43 samples, 1.00%)</title><rect x="707.5" y="1139.0" width="11.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="710.5" y="1150.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="707.5" y="1123.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="710.5" y="1134.0"></text>
</g>
<g>
<title>futex_wake (41 samples, 0.95%)</title><rect x="707.8" y="1123.0" width="11.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="710.8" y="1134.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="709.7" y="1107.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="712.7" y="1118.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.07%)</title><rect x="710.0" y="1107.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="713.0" y="1118.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="710.6" y="1091.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="713.6" y="1102.0"></text>
</g>
<g>
<title>wake_up_q (30 samples, 0.70%)</title><rect x="710.8" y="1107.0" width="8.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="713.8" y="1118.0"></text>
</g>
<g>
<title>try_to_wake_up (30 samples, 0.70%)</title><rect x="710.8" y="1091.0" width="8.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="713.8" y="1102.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (30 samples, 0.70%)</title><rect x="710.8" y="1075.0" width="8.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="713.8" y="1086.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="719.0" y="1123.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="722.0" y="1134.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="719.3" y="1187.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="722.3" y="1198.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="719.3" y="1171.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="722.3" y="1182.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="719.3" y="1155.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="722.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (8 samples, 0.19%)</title><rect x="719.6" y="1315.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="722.6" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (8 samples, 0.19%)</title><rect x="719.6" y="1299.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.6" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (8 samples, 0.19%)</title><rect x="719.6" y="1283.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="722.6" y="1294.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.12%)</title><rect x="719.9" y="1267.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="722.9" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$605/871672554.accept (1 samples, 0.02%)</title><rect x="721.2" y="1267.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.2" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$154/180352869.accept (1 samples, 0.02%)</title><rect x="721.5" y="1267.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="724.5" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$605/871672554.accept (1 samples, 0.02%)</title><rect x="721.8" y="1315.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="724.8" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$154/180352869.accept (1 samples, 0.02%)</title><rect x="722.1" y="1315.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.1" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (1 samples, 0.02%)</title><rect x="722.1" y="1299.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="725.1" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.02%)</title><rect x="722.1" y="1283.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="725.1" y="1294.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.05%)</title><rect x="722.3" y="1347.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="725.3" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (110 samples, 2.55%)</title><rect x="722.9" y="1523.0" width="30.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="725.9" y="1534.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onSubscribe (110 samples, 2.55%)</title><rect x="722.9" y="1507.0" width="30.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="725.9" y="1518.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (110 samples, 2.55%)</title><rect x="722.9" y="1491.0" width="30.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="725.9" y="1502.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (50 samples, 1.16%)</title><rect x="738.5" y="1475.0" width="13.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="741.5" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (2 samples, 0.05%)</title><rect x="751.3" y="1459.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.3" y="1470.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="751.9" y="1459.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="754.9" y="1470.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="751.9" y="1443.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="754.9" y="1454.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="751.9" y="1427.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="754.9" y="1438.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="751.9" y="1411.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="754.9" y="1422.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="751.9" y="1395.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="754.9" y="1406.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="751.9" y="1379.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="754.9" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.07%)</title><rect x="752.2" y="1475.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="755.2" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.07%)</title><rect x="752.2" y="1459.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="755.2" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.02%)</title><rect x="752.4" y="1443.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="755.4" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.02%)</title><rect x="752.7" y="1443.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="755.7" y="1454.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (1 samples, 0.02%)</title><rect x="752.7" y="1427.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="755.7" y="1438.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/TableFlusher$$Lambda$615/147485244.run (27 samples, 0.63%)</title><rect x="753.0" y="1683.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.0" y="1694.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/TableFlusher.lambda$flush$0 (27 samples, 0.63%)</title><rect x="753.0" y="1667.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="756.0" y="1678.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/DAOImpl.flushAndOpen (27 samples, 0.63%)</title><rect x="753.0" y="1651.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="756.0" y="1662.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/DAOImpl.flushEntries (27 samples, 0.63%)</title><rect x="753.0" y="1635.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="756.0" y="1646.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/Table.flushEntries (27 samples, 0.63%)</title><rect x="753.0" y="1619.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="756.0" y="1630.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (1 samples, 0.02%)</title><rect x="753.0" y="1603.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="756.0" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.02%)</title><rect x="753.0" y="1587.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.0" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (1 samples, 0.02%)</title><rect x="753.0" y="1571.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="756.0" y="1582.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (26 samples, 0.60%)</title><rect x="753.2" y="1603.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="756.2" y="1614.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.02%)</title><rect x="753.2" y="1587.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="756.2" y="1598.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.02%)</title><rect x="753.2" y="1571.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="756.2" y="1582.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.02%)</title><rect x="753.2" y="1555.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="756.2" y="1566.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (25 samples, 0.58%)</title><rect x="753.5" y="1587.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.5" y="1598.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (24 samples, 0.56%)</title><rect x="753.5" y="1571.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="756.5" y="1582.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (24 samples, 0.56%)</title><rect x="753.5" y="1555.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="756.5" y="1566.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (24 samples, 0.56%)</title><rect x="753.5" y="1539.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="756.5" y="1550.0"></text>
</g>
<g>
<title>__write (22 samples, 0.51%)</title><rect x="754.1" y="1523.0" width="6.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="757.1" y="1534.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.46%)</title><rect x="754.6" y="1507.0" width="5.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="757.6" y="1518.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.46%)</title><rect x="754.6" y="1491.0" width="5.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="757.6" y="1502.0"></text>
</g>
<g>
<title>__x64_sys_write (17 samples, 0.39%)</title><rect x="755.4" y="1475.0" width="4.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="758.4" y="1486.0"></text>
</g>
<g>
<title>ksys_write (17 samples, 0.39%)</title><rect x="755.4" y="1459.0" width="4.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="758.4" y="1470.0"></text>
</g>
<g>
<title>vfs_write (17 samples, 0.39%)</title><rect x="755.4" y="1443.0" width="4.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="758.4" y="1454.0"></text>
</g>
<g>
<title>__vfs_write (16 samples, 0.37%)</title><rect x="755.7" y="1427.0" width="4.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="758.7" y="1438.0"></text>
</g>
<g>
<title>new_sync_write (16 samples, 0.37%)</title><rect x="755.7" y="1411.0" width="4.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="758.7" y="1422.0"></text>
</g>
<g>
<title>ext4_file_write_iter (16 samples, 0.37%)</title><rect x="755.7" y="1395.0" width="4.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="758.7" y="1406.0"></text>
</g>
<g>
<title>__generic_file_write_iter (16 samples, 0.37%)</title><rect x="755.7" y="1379.0" width="4.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="758.7" y="1390.0"></text>
</g>
<g>
<title>generic_perform_write (16 samples, 0.37%)</title><rect x="755.7" y="1363.0" width="4.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="758.7" y="1374.0"></text>
</g>
<g>
<title>ext4_da_write_begin (2 samples, 0.05%)</title><rect x="755.7" y="1347.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="758.7" y="1358.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.02%)</title><rect x="755.7" y="1331.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="758.7" y="1342.0"></text>
</g>
<g>
<title>ext4_journal_check_start (1 samples, 0.02%)</title><rect x="755.7" y="1315.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="758.7" y="1326.0"></text>
</g>
<g>
<title>ext4_block_write_begin (1 samples, 0.02%)</title><rect x="756.0" y="1331.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="759.0" y="1342.0"></text>
</g>
<g>
<title>ext4_da_write_end (10 samples, 0.23%)</title><rect x="756.3" y="1347.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="759.3" y="1358.0"></text>
</g>
<g>
<title>generic_write_end (10 samples, 0.23%)</title><rect x="756.3" y="1331.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="759.3" y="1342.0"></text>
</g>
<g>
<title>__mark_inode_dirty (10 samples, 0.23%)</title><rect x="756.3" y="1315.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="759.3" y="1326.0"></text>
</g>
<g>
<title>ext4_dirty_inode (10 samples, 0.23%)</title><rect x="756.3" y="1299.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="759.3" y="1310.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.02%)</title><rect x="756.5" y="1283.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="759.5" y="1294.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.02%)</title><rect x="756.5" y="1267.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="759.5" y="1278.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (8 samples, 0.19%)</title><rect x="756.8" y="1283.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="759.8" y="1294.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (7 samples, 0.16%)</title><rect x="756.8" y="1267.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="759.8" y="1278.0"></text>
</g>
<g>
<title>__brelse (1 samples, 0.02%)</title><rect x="756.8" y="1251.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="759.8" y="1262.0"></text>
</g>
<g>
<title>ext4_do_update_inode (6 samples, 0.14%)</title><rect x="757.1" y="1251.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="760.1" y="1262.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (5 samples, 0.12%)</title><rect x="757.4" y="1235.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="760.4" y="1246.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (5 samples, 0.12%)</title><rect x="757.4" y="1219.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="760.4" y="1230.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.05%)</title><rect x="758.2" y="1203.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="761.2" y="1214.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.02%)</title><rect x="758.7" y="1267.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="761.7" y="1278.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.02%)</title><rect x="758.7" y="1251.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="761.7" y="1262.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.02%)</title><rect x="758.7" y="1235.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="761.7" y="1246.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.02%)</title><rect x="758.7" y="1219.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="761.7" y="1230.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.02%)</title><rect x="759.0" y="1347.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="762.0" y="1358.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.02%)</title><rect x="759.3" y="1347.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="762.3" y="1358.0"></text>
</g>
<g>
<title>unlock_page (2 samples, 0.05%)</title><rect x="759.5" y="1347.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="762.5" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="760.1" y="1571.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="763.1" y="1582.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="760.1" y="1555.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="763.1" y="1566.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.02%)</title><rect x="760.1" y="1539.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="763.1" y="1550.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.createMap (1 samples, 0.02%)</title><rect x="760.1" y="1523.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="763.1" y="1534.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="760.1" y="1507.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="763.1" y="1518.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (1 samples, 0.02%)</title><rect x="760.1" y="1491.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="763.1" y="1502.0"></text>
</g>
<g>
<title>java/lang/ref/WeakReference.&lt;init&gt; (1 samples, 0.02%)</title><rect x="760.1" y="1475.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="763.1" y="1486.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.02%)</title><rect x="760.1" y="1459.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="763.1" y="1470.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.02%)</title><rect x="760.1" y="1443.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="763.1" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (205 samples, 4.75%)</title><rect x="760.4" y="1731.0" width="56.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="763.4" y="1742.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (205 samples, 4.75%)</title><rect x="760.4" y="1715.0" width="56.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="763.4" y="1726.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (142 samples, 3.29%)</title><rect x="761.2" y="1699.0" width="38.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="764.2" y="1710.0">jav..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (1 samples, 0.02%)</title><rect x="763.4" y="1683.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="766.4" y="1694.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.compareAndSet (1 samples, 0.02%)</title><rect x="763.4" y="1667.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="766.4" y="1678.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_L (1 samples, 0.02%)</title><rect x="763.6" y="1683.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="766.6" y="1694.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAcquire (1 samples, 0.02%)</title><rect x="763.6" y="1667.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.6" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (130 samples, 3.01%)</title><rect x="763.9" y="1683.0" width="35.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="766.9" y="1694.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (2 samples, 0.05%)</title><rect x="763.9" y="1667.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="766.9" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (1 samples, 0.02%)</title><rect x="764.5" y="1667.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="767.5" y="1678.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (127 samples, 2.95%)</title><rect x="764.7" y="1667.0" width="34.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="767.7" y="1678.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (127 samples, 2.95%)</title><rect x="764.7" y="1651.0" width="34.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="767.7" y="1662.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (127 samples, 2.95%)</title><rect x="764.7" y="1635.0" width="34.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="767.7" y="1646.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (120 samples, 2.78%)</title><rect x="765.3" y="1619.0" width="32.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="768.3" y="1630.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (120 samples, 2.78%)</title><rect x="765.3" y="1603.0" width="32.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="768.3" y="1614.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4 samples, 0.09%)</title><rect x="765.8" y="1587.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="768.8" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (1 samples, 0.02%)</title><rect x="765.8" y="1571.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.8" y="1582.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="765.8" y="1555.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="768.8" y="1566.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="765.8" y="1539.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="768.8" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (3 samples, 0.07%)</title><rect x="766.1" y="1571.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.1" y="1582.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="766.1" y="1555.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="769.1" y="1566.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpServiceClient$$Lambda$166/433348196.apply (2 samples, 0.05%)</title><rect x="766.4" y="1555.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.4" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (114 samples, 2.64%)</title><rect x="766.9" y="1587.0" width="31.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="769.9" y="1598.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (113 samples, 2.62%)</title><rect x="767.2" y="1571.0" width="30.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="770.2" y="1582.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="767.5" y="1555.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="770.5" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.02%)</title><rect x="767.5" y="1539.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="770.5" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.02%)</title><rect x="767.5" y="1523.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="770.5" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.02%)</title><rect x="767.5" y="1507.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.5" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.localInit (1 samples, 0.02%)</title><rect x="767.5" y="1491.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="770.5" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.mix64 (1 samples, 0.02%)</title><rect x="767.5" y="1475.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="770.5" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (1 samples, 0.02%)</title><rect x="767.8" y="1555.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="770.8" y="1566.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="767.8" y="1539.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="770.8" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="767.8" y="1523.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="770.8" y="1534.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="767.8" y="1507.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="770.8" y="1518.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils$$Lambda$170/1308121008.accept (110 samples, 2.55%)</title><rect x="768.0" y="1555.0" width="30.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="771.0" y="1566.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils.lambda$firstN$0 (110 samples, 2.55%)</title><rect x="768.0" y="1539.0" width="30.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="771.0" y="1550.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (107 samples, 2.48%)</title><rect x="768.6" y="1523.0" width="29.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="771.6" y="1534.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (107 samples, 2.48%)</title><rect x="768.6" y="1507.0" width="29.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="771.6" y="1518.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (101 samples, 2.34%)</title><rect x="769.1" y="1491.0" width="27.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="772.1" y="1502.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$180/792115192.accept (101 samples, 2.34%)</title><rect x="769.1" y="1475.0" width="27.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="772.1" y="1486.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ServiceSession.send (99 samples, 2.30%)</title><rect x="769.7" y="1459.0" width="27.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="772.7" y="1470.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (99 samples, 2.30%)</title><rect x="769.7" y="1443.0" width="27.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="772.7" y="1454.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.02%)</title><rect x="770.2" y="1427.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="773.2" y="1438.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="770.2" y="1411.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.2" y="1422.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="770.2" y="1395.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="773.2" y="1406.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (94 samples, 2.18%)</title><rect x="770.5" y="1427.0" width="25.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="773.5" y="1438.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.16%)</title><rect x="770.5" y="1411.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="773.5" y="1422.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.12%)</title><rect x="771.0" y="1395.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="774.0" y="1406.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.02%)</title><rect x="771.0" y="1379.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="774.0" y="1390.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.02%)</title><rect x="771.0" y="1363.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="774.0" y="1374.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.05%)</title><rect x="771.3" y="1379.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="774.3" y="1390.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.05%)</title><rect x="771.9" y="1379.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="774.9" y="1390.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.05%)</title><rect x="771.9" y="1363.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="774.9" y="1374.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (87 samples, 2.02%)</title><rect x="772.4" y="1411.0" width="23.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="775.4" y="1422.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (87 samples, 2.02%)</title><rect x="772.4" y="1395.0" width="23.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="775.4" y="1406.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (84 samples, 1.95%)</title><rect x="772.7" y="1379.0" width="23.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="775.7" y="1390.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (84 samples, 1.95%)</title><rect x="772.7" y="1363.0" width="23.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="775.7" y="1374.0">o..</text>
</g>
<g>
<title>[unknown] (6 samples, 0.14%)</title><rect x="772.9" y="1347.0" width="1.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="775.9" y="1358.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.14%)</title><rect x="772.9" y="1331.0" width="1.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="775.9" y="1342.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.14%)</title><rect x="772.9" y="1315.0" width="1.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="775.9" y="1326.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (1 samples, 0.02%)</title><rect x="772.9" y="1299.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="775.9" y="1310.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.02%)</title><rect x="773.2" y="1299.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="776.2" y="1310.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.09%)</title><rect x="773.5" y="1299.0" width="1.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="776.5" y="1310.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.02%)</title><rect x="773.5" y="1283.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="776.5" y="1294.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.07%)</title><rect x="773.8" y="1283.0" width="0.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="776.8" y="1294.0"></text>
</g>
<g>
<title>__send (77 samples, 1.79%)</title><rect x="774.6" y="1347.0" width="21.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="777.6" y="1358.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (75 samples, 1.74%)</title><rect x="775.1" y="1331.0" width="20.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="778.1" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (75 samples, 1.74%)</title><rect x="775.1" y="1315.0" width="20.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="778.1" y="1326.0"></text>
</g>
<g>
<title>__x64_sys_sendto (73 samples, 1.69%)</title><rect x="775.7" y="1299.0" width="20.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="778.7" y="1310.0"></text>
</g>
<g>
<title>__sys_sendto (73 samples, 1.69%)</title><rect x="775.7" y="1283.0" width="20.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="778.7" y="1294.0"></text>
</g>
<g>
<title>sock_sendmsg (72 samples, 1.67%)</title><rect x="776.0" y="1267.0" width="19.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="779.0" y="1278.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.02%)</title><rect x="776.0" y="1251.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="779.0" y="1262.0"></text>
</g>
<g>
<title>inet6_sendmsg (68 samples, 1.58%)</title><rect x="776.2" y="1251.0" width="18.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="779.2" y="1262.0"></text>
</g>
<g>
<title>tcp_sendmsg (67 samples, 1.55%)</title><rect x="776.5" y="1235.0" width="18.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="779.5" y="1246.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.09%)</title><rect x="776.5" y="1219.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="779.5" y="1230.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.02%)</title><rect x="777.6" y="1219.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="780.6" y="1230.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (62 samples, 1.44%)</title><rect x="777.9" y="1219.0" width="16.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="780.9" y="1230.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="778.1" y="1203.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="781.1" y="1214.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="778.1" y="1187.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="781.1" y="1198.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.02%)</title><rect x="778.4" y="1203.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="781.4" y="1214.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.02%)</title><rect x="778.4" y="1187.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="781.4" y="1198.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.07%)</title><rect x="778.7" y="1203.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="781.7" y="1214.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.07%)</title><rect x="778.7" y="1187.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="781.7" y="1198.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.07%)</title><rect x="778.7" y="1171.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="781.7" y="1182.0"></text>
</g>
<g>
<title>tcp_push (55 samples, 1.28%)</title><rect x="779.5" y="1203.0" width="15.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="782.5" y="1214.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (55 samples, 1.28%)</title><rect x="779.5" y="1187.0" width="15.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="782.5" y="1198.0"></text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.02%)</title><rect x="779.5" y="1171.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="782.5" y="1182.0"></text>
</g>
<g>
<title>tcp_write_xmit (54 samples, 1.25%)</title><rect x="779.8" y="1171.0" width="14.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="782.8" y="1182.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (52 samples, 1.21%)</title><rect x="780.3" y="1155.0" width="14.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="783.3" y="1166.0"></text>
</g>
<g>
<title>ip_queue_xmit (49 samples, 1.14%)</title><rect x="781.2" y="1139.0" width="13.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="784.2" y="1150.0"></text>
</g>
<g>
<title>__ip_queue_xmit (48 samples, 1.11%)</title><rect x="781.2" y="1123.0" width="13.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="784.2" y="1134.0"></text>
</g>
<g>
<title>ip_local_out (46 samples, 1.07%)</title><rect x="781.7" y="1107.0" width="12.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="784.7" y="1118.0"></text>
</g>
<g>
<title>ip_output (46 samples, 1.07%)</title><rect x="781.7" y="1091.0" width="12.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="784.7" y="1102.0"></text>
</g>
<g>
<title>ip_finish_output (46 samples, 1.07%)</title><rect x="781.7" y="1075.0" width="12.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="784.7" y="1086.0"></text>
</g>
<g>
<title>__ip_finish_output (46 samples, 1.07%)</title><rect x="781.7" y="1059.0" width="12.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="784.7" y="1070.0"></text>
</g>
<g>
<title>ip_finish_output2 (46 samples, 1.07%)</title><rect x="781.7" y="1043.0" width="12.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="784.7" y="1054.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (38 samples, 0.88%)</title><rect x="782.0" y="1027.0" width="10.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="785.0" y="1038.0"></text>
</g>
<g>
<title>do_softirq.part.0 (38 samples, 0.88%)</title><rect x="782.0" y="1011.0" width="10.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="785.0" y="1022.0"></text>
</g>
<g>
<title>do_softirq_own_stack (37 samples, 0.86%)</title><rect x="782.3" y="995.0" width="10.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="785.3" y="1006.0"></text>
</g>
<g>
<title>__softirqentry_text_start (37 samples, 0.86%)</title><rect x="782.3" y="979.0" width="10.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="785.3" y="990.0"></text>
</g>
<g>
<title>net_rx_action (35 samples, 0.81%)</title><rect x="782.8" y="963.0" width="9.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="785.8" y="974.0"></text>
</g>
<g>
<title>process_backlog (35 samples, 0.81%)</title><rect x="782.8" y="947.0" width="9.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="785.8" y="958.0"></text>
</g>
<g>
<title>__netif_receive_skb (35 samples, 0.81%)</title><rect x="782.8" y="931.0" width="9.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="785.8" y="942.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (35 samples, 0.81%)</title><rect x="782.8" y="915.0" width="9.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="785.8" y="926.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.07%)</title><rect x="782.8" y="899.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="785.8" y="910.0"></text>
</g>
<g>
<title>ip_rcv (32 samples, 0.74%)</title><rect x="783.6" y="899.0" width="8.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="786.6" y="910.0"></text>
</g>
<g>
<title>ip_rcv_finish (32 samples, 0.74%)</title><rect x="783.6" y="883.0" width="8.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="786.6" y="894.0"></text>
</g>
<g>
<title>ip_local_deliver (32 samples, 0.74%)</title><rect x="783.6" y="867.0" width="8.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="786.6" y="878.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (32 samples, 0.74%)</title><rect x="783.6" y="851.0" width="8.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="786.6" y="862.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (32 samples, 0.74%)</title><rect x="783.6" y="835.0" width="8.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="786.6" y="846.0"></text>
</g>
<g>
<title>tcp_v4_rcv (32 samples, 0.74%)</title><rect x="783.6" y="819.0" width="8.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="786.6" y="830.0"></text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.14%)</title><rect x="783.9" y="803.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="786.9" y="814.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="785.5" y="803.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="788.5" y="814.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="785.8" y="803.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="788.8" y="814.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="785.8" y="787.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="788.8" y="798.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (23 samples, 0.53%)</title><rect x="786.1" y="803.0" width="6.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="789.1" y="814.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.05%)</title><rect x="786.1" y="787.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="789.1" y="798.0"></text>
</g>
<g>
<title>tcp_rcv_established (21 samples, 0.49%)</title><rect x="786.6" y="787.0" width="5.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="789.6" y="798.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.07%)</title><rect x="786.6" y="771.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="789.6" y="782.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.02%)</title><rect x="786.6" y="755.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="789.6" y="766.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (1 samples, 0.02%)</title><rect x="786.6" y="739.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="789.6" y="750.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="786.6" y="723.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="789.6" y="734.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="786.6" y="707.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="789.6" y="718.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="786.6" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="789.6" y="702.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.02%)</title><rect x="786.6" y="675.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="789.6" y="686.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.02%)</title><rect x="786.6" y="659.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="789.6" y="670.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="786.6" y="643.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="789.6" y="654.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.02%)</title><rect x="786.6" y="627.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="789.6" y="638.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="786.6" y="611.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="789.6" y="622.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="786.6" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="789.6" y="606.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="786.6" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="789.6" y="590.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="786.6" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="789.6" y="574.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="786.6" y="547.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="789.6" y="558.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.02%)</title><rect x="786.6" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="789.6" y="542.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="786.6" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="789.6" y="526.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.05%)</title><rect x="786.9" y="755.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="789.9" y="766.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.05%)</title><rect x="786.9" y="739.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="789.9" y="750.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="786.9" y="723.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="789.9" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="786.9" y="707.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="789.9" y="718.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.05%)</title><rect x="787.5" y="771.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="790.5" y="782.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.07%)</title><rect x="788.0" y="771.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="791.0" y="782.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.07%)</title><rect x="788.0" y="755.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="791.0" y="766.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.07%)</title><rect x="788.0" y="739.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="791.0" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="788.0" y="723.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="791.0" y="734.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.21%)</title><rect x="788.8" y="771.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="791.8" y="782.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.02%)</title><rect x="789.4" y="755.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="792.4" y="766.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.14%)</title><rect x="789.6" y="755.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="792.6" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.12%)</title><rect x="789.9" y="739.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="792.9" y="750.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.12%)</title><rect x="789.9" y="723.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="792.9" y="734.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.12%)</title><rect x="789.9" y="707.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="792.9" y="718.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.05%)</title><rect x="790.7" y="691.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="793.7" y="702.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.05%)</title><rect x="790.7" y="675.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="793.7" y="686.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="791.0" y="659.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="794.0" y="670.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.05%)</title><rect x="791.3" y="771.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="794.3" y="782.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="791.8" y="771.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="794.8" y="782.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="791.8" y="755.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="794.8" y="766.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="792.1" y="771.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="795.1" y="782.0"></text>
</g>
<g>
<title>dev_queue_xmit (7 samples, 0.16%)</title><rect x="792.4" y="1027.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="795.4" y="1038.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.16%)</title><rect x="792.4" y="1011.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="795.4" y="1022.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.14%)</title><rect x="792.7" y="995.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="795.7" y="1006.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.12%)</title><rect x="792.9" y="979.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="795.9" y="990.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.05%)</title><rect x="792.9" y="963.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="795.9" y="974.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.07%)</title><rect x="793.5" y="963.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="796.5" y="974.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.07%)</title><rect x="793.5" y="947.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="796.5" y="958.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.05%)</title><rect x="793.7" y="931.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="796.7" y="942.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.02%)</title><rect x="794.3" y="1123.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="797.3" y="1134.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.02%)</title><rect x="794.6" y="1203.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="797.6" y="1214.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.02%)</title><rect x="794.6" y="1187.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="797.6" y="1198.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.07%)</title><rect x="794.8" y="1251.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="797.8" y="1262.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.02%)</title><rect x="795.4" y="1235.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="798.4" y="1246.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="795.4" y="1219.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="798.4" y="1230.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.05%)</title><rect x="795.7" y="1379.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="798.7" y="1390.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="795.7" y="1363.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="798.7" y="1374.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="795.7" y="1347.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="798.7" y="1358.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="796.2" y="1427.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.2" y="1438.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="796.2" y="1411.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="799.2" y="1422.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="796.2" y="1395.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="799.2" y="1406.0"></text>
</g>
<g>
<title>one/nio/http/Request.isHttp11 (1 samples, 0.02%)</title><rect x="796.5" y="1427.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="799.5" y="1438.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="796.5" y="1411.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="799.5" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (3 samples, 0.07%)</title><rect x="796.8" y="1491.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="799.8" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3 samples, 0.07%)</title><rect x="796.8" y="1475.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="799.8" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.02%)</title><rect x="796.8" y="1459.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.8" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="796.8" y="1443.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="799.8" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="796.8" y="1427.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.8" y="1438.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$176/1817393118.apply (2 samples, 0.05%)</title><rect x="797.0" y="1459.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="800.0" y="1470.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.lambda$schedulePutEntity$8 (2 samples, 0.05%)</title><rect x="797.0" y="1443.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="800.0" y="1454.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.handleResponses (2 samples, 0.05%)</title><rect x="797.0" y="1427.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="800.0" y="1438.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$462/664147513.apply (1 samples, 0.02%)</title><rect x="797.3" y="1411.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="800.3" y="1422.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.lambda$schedulePutEntity$7 (1 samples, 0.02%)</title><rect x="797.3" y="1395.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="800.3" y="1406.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ResponseUtils.emptyResponse (1 samples, 0.02%)</title><rect x="797.3" y="1379.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="800.3" y="1390.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.02%)</title><rect x="797.3" y="1363.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="800.3" y="1374.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="797.3" y="1347.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="800.3" y="1358.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="797.6" y="1491.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="800.6" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeExceptionally (1 samples, 0.02%)</title><rect x="797.9" y="1523.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="800.9" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (1 samples, 0.02%)</title><rect x="797.9" y="1507.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="800.9" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="797.9" y="1491.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="800.9" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="797.9" y="1475.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="800.9" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.12%)</title><rect x="798.1" y="1619.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="801.1" y="1630.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (4 samples, 0.09%)</title><rect x="798.4" y="1603.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="801.4" y="1614.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.09%)</title><rect x="798.4" y="1587.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="801.4" y="1598.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.09%)</title><rect x="798.4" y="1571.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="801.4" y="1582.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="798.4" y="1555.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="801.4" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$159/442073090.accept (3 samples, 0.07%)</title><rect x="798.7" y="1555.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="801.7" y="1566.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.05%)</title><rect x="799.5" y="1683.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="802.5" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.05%)</title><rect x="799.5" y="1667.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="802.5" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.05%)</title><rect x="799.5" y="1651.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="802.5" y="1662.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.05%)</title><rect x="799.5" y="1635.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="802.5" y="1646.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="799.5" y="1619.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="802.5" y="1630.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="799.5" y="1603.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="802.5" y="1614.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="799.5" y="1587.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="802.5" y="1598.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="799.5" y="1571.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="802.5" y="1582.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.05%)</title><rect x="799.5" y="1555.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="802.5" y="1566.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.05%)</title><rect x="799.5" y="1539.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="802.5" y="1550.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.05%)</title><rect x="799.5" y="1523.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="802.5" y="1534.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="799.5" y="1507.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="802.5" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.05%)</title><rect x="800.0" y="1699.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="803.0" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.05%)</title><rect x="800.0" y="1683.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="803.0" y="1694.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="800.0" y="1667.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="803.0" y="1678.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.05%)</title><rect x="800.0" y="1651.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="803.0" y="1662.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="800.3" y="1635.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="803.3" y="1646.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="800.3" y="1619.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="803.3" y="1630.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="800.3" y="1603.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="803.3" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (58 samples, 1.35%)</title><rect x="800.6" y="1699.0" width="15.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="803.6" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (58 samples, 1.35%)</title><rect x="800.6" y="1683.0" width="15.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="803.6" y="1694.0"></text>
</g>
<g>
<title>Unsafe_Park (19 samples, 0.44%)</title><rect x="800.6" y="1667.0" width="5.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="803.6" y="1678.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.09%)</title><rect x="801.1" y="1651.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="804.1" y="1662.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="801.1" y="1635.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="804.1" y="1646.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="801.4" y="1635.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="804.4" y="1646.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.05%)</title><rect x="801.7" y="1635.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="804.7" y="1646.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="801.7" y="1619.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="804.7" y="1630.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="802.0" y="1603.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="805.0" y="1614.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="802.2" y="1651.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="805.2" y="1662.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (11 samples, 0.26%)</title><rect x="802.5" y="1651.0" width="3.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="805.5" y="1662.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.21%)</title><rect x="803.1" y="1635.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="806.1" y="1646.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.21%)</title><rect x="803.1" y="1619.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="806.1" y="1630.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.12%)</title><rect x="803.9" y="1603.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="806.9" y="1614.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.09%)</title><rect x="804.1" y="1587.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="807.1" y="1598.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="804.1" y="1571.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="807.1" y="1582.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.07%)</title><rect x="804.4" y="1571.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="807.4" y="1582.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="804.7" y="1555.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="807.7" y="1566.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="805.0" y="1555.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="808.0" y="1566.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="805.2" y="1603.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="808.2" y="1614.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="805.5" y="1651.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="808.5" y="1662.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.90%)</title><rect x="805.8" y="1667.0" width="10.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="808.8" y="1678.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="805.8" y="1651.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="808.8" y="1662.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.05%)</title><rect x="806.1" y="1651.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="809.1" y="1662.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.05%)</title><rect x="806.6" y="1651.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="809.6" y="1662.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="807.2" y="1651.0" width="0.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="810.2" y="1662.0"></text>
</g>
<g>
<title>_pthread_cleanup_pop (1 samples, 0.02%)</title><rect x="807.4" y="1651.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="810.4" y="1662.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (32 samples, 0.74%)</title><rect x="807.7" y="1651.0" width="8.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="810.7" y="1662.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.35%)</title><rect x="812.4" y="1635.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="815.4" y="1646.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.35%)</title><rect x="812.4" y="1619.0" width="4.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="815.4" y="1630.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.30%)</title><rect x="812.9" y="1603.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="815.9" y="1614.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.28%)</title><rect x="812.9" y="1587.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="815.9" y="1598.0"></text>
</g>
<g>
<title>futex_wait (11 samples, 0.26%)</title><rect x="812.9" y="1571.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="815.9" y="1582.0"></text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 0.16%)</title><rect x="813.2" y="1555.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="816.2" y="1566.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (4 samples, 0.09%)</title><rect x="813.2" y="1539.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="816.2" y="1550.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.09%)</title><rect x="813.2" y="1523.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="816.2" y="1534.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.07%)</title><rect x="814.3" y="1539.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="817.3" y="1550.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.07%)</title><rect x="814.3" y="1523.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="817.3" y="1534.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="814.8" y="1507.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="817.8" y="1518.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.05%)</title><rect x="815.1" y="1555.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="818.1" y="1566.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="815.4" y="1539.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="818.4" y="1550.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.02%)</title><rect x="815.6" y="1555.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="818.6" y="1566.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.02%)</title><rect x="815.6" y="1539.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="818.6" y="1550.0"></text>
</g>
<g>
<title>ktime_add_safe (1 samples, 0.02%)</title><rect x="815.9" y="1571.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="818.9" y="1582.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.02%)</title><rect x="816.2" y="1587.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="819.2" y="1598.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="816.2" y="1571.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="819.2" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (736 samples, 17.07%)</title><rect x="816.5" y="1731.0" width="201.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="819.5" y="1742.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>java/lang/Math.min (1 samples, 0.02%)</title><rect x="817.8" y="1715.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="820.8" y="1726.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (2 samples, 0.05%)</title><rect x="818.1" y="1715.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="821.1" y="1726.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (1 samples, 0.02%)</title><rect x="818.7" y="1715.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="821.7" y="1726.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (2 samples, 0.05%)</title><rect x="818.9" y="1715.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="821.9" y="1726.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1 samples, 0.02%)</title><rect x="819.2" y="1699.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="822.2" y="1710.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.19%)</title><rect x="819.5" y="1715.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="822.5" y="1726.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.19%)</title><rect x="819.5" y="1699.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="822.5" y="1710.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.07%)</title><rect x="820.8" y="1683.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="823.8" y="1694.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.07%)</title><rect x="820.8" y="1667.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="823.8" y="1678.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (2 samples, 0.05%)</title><rect x="820.8" y="1651.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="823.8" y="1662.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="821.4" y="1651.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.4" y="1662.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.02%)</title><rect x="821.7" y="1715.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="824.7" y="1726.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (241 samples, 5.59%)</title><rect x="821.9" y="1715.0" width="66.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="824.9" y="1726.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$466/42157458.accept (235 samples, 5.45%)</title><rect x="822.5" y="1699.0" width="64.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="825.5" y="1710.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (235 samples, 5.45%)</title><rect x="822.5" y="1683.0" width="64.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="825.5" y="1694.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (235 samples, 5.45%)</title><rect x="822.5" y="1667.0" width="64.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="825.5" y="1678.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$ConnectEvent.handle (8 samples, 0.19%)</title><rect x="822.5" y="1651.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="825.5" y="1662.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.finishConnect (8 samples, 0.19%)</title><rect x="822.5" y="1635.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="825.5" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (227 samples, 5.26%)</title><rect x="824.7" y="1651.0" width="62.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="827.7" y="1662.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (227 samples, 5.26%)</title><rect x="824.7" y="1635.0" width="62.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="827.7" y="1646.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.07%)</title><rect x="824.7" y="1619.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="827.7" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.07%)</title><rect x="824.7" y="1603.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="827.7" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.07%)</title><rect x="824.7" y="1587.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="827.7" y="1598.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.07%)</title><rect x="824.7" y="1571.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.7" y="1582.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.07%)</title><rect x="824.7" y="1555.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="827.7" y="1566.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.07%)</title><rect x="824.7" y="1539.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="827.7" y="1550.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.05%)</title><rect x="824.9" y="1523.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="827.9" y="1534.0"></text>
</g>
<g>
<title>java/util/HashMap$Node.&lt;init&gt; (2 samples, 0.05%)</title><rect x="824.9" y="1507.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="827.9" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (224 samples, 5.19%)</title><rect x="825.5" y="1619.0" width="61.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.5" y="1630.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (224 samples, 5.19%)</title><rect x="825.5" y="1603.0" width="61.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="828.5" y="1614.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (224 samples, 5.19%)</title><rect x="825.5" y="1587.0" width="61.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="828.5" y="1598.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (224 samples, 5.19%)</title><rect x="825.5" y="1571.0" width="61.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="828.5" y="1582.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (224 samples, 5.19%)</title><rect x="825.5" y="1555.0" width="61.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="828.5" y="1566.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$240/1948350730.run (221 samples, 5.13%)</title><rect x="826.0" y="1539.0" width="60.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="829.0" y="1550.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (220 samples, 5.10%)</title><rect x="826.0" y="1523.0" width="60.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="829.0" y="1534.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (66 samples, 1.53%)</title><rect x="827.4" y="1507.0" width="18.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="830.4" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (66 samples, 1.53%)</title><rect x="827.4" y="1491.0" width="18.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.4" y="1502.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.02%)</title><rect x="827.4" y="1475.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.4" y="1486.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (1 samples, 0.02%)</title><rect x="827.4" y="1459.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="830.4" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="827.4" y="1443.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.4" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (65 samples, 1.51%)</title><rect x="827.7" y="1475.0" width="17.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="830.7" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (65 samples, 1.51%)</title><rect x="827.7" y="1459.0" width="17.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="830.7" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (65 samples, 1.51%)</title><rect x="827.7" y="1443.0" width="17.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.7" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (65 samples, 1.51%)</title><rect x="827.7" y="1427.0" width="17.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.7" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (64 samples, 1.48%)</title><rect x="828.0" y="1411.0" width="17.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="831.0" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1 samples, 0.02%)</title><rect x="828.2" y="1395.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="831.2" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (61 samples, 1.41%)</title><rect x="828.5" y="1395.0" width="16.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="831.5" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (61 samples, 1.41%)</title><rect x="828.5" y="1379.0" width="16.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="831.5" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (60 samples, 1.39%)</title><rect x="828.8" y="1363.0" width="16.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="831.8" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="828.8" y="1347.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="831.8" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="828.8" y="1331.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="831.8" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (58 samples, 1.35%)</title><rect x="829.0" y="1347.0" width="15.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="832.0" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (58 samples, 1.35%)</title><rect x="829.0" y="1331.0" width="15.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="832.0" y="1342.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.21%)</title><rect x="829.0" y="1315.0" width="2.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="832.0" y="1326.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="830.1" y="1299.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="833.1" y="1310.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="830.4" y="1299.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="833.4" y="1310.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="830.7" y="1299.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="833.7" y="1310.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="831.0" y="1299.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="834.0" y="1310.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="831.2" y="1299.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="834.2" y="1310.0"></text>
</g>
<g>
<title>__pthread_cond_signal (49 samples, 1.14%)</title><rect x="831.5" y="1315.0" width="13.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="834.5" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 1.02%)</title><rect x="832.9" y="1299.0" width="12.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="835.9" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 1.02%)</title><rect x="832.9" y="1283.0" width="12.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="835.9" y="1294.0"></text>
</g>
<g>
<title>__x64_sys_futex (40 samples, 0.93%)</title><rect x="833.7" y="1267.0" width="10.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="836.7" y="1278.0"></text>
</g>
<g>
<title>do_futex (40 samples, 0.93%)</title><rect x="833.7" y="1251.0" width="10.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="836.7" y="1262.0"></text>
</g>
<g>
<title>futex_wake (39 samples, 0.90%)</title><rect x="833.7" y="1235.0" width="10.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="836.7" y="1246.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="834.2" y="1219.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="837.2" y="1230.0"></text>
</g>
<g>
<title>wake_up_q (36 samples, 0.83%)</title><rect x="834.5" y="1219.0" width="9.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="837.5" y="1230.0"></text>
</g>
<g>
<title>try_to_wake_up (36 samples, 0.83%)</title><rect x="834.5" y="1203.0" width="9.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="837.5" y="1214.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (36 samples, 0.83%)</title><rect x="834.5" y="1187.0" width="9.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="837.5" y="1198.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="844.4" y="1235.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="847.4" y="1246.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="844.6" y="1267.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="847.6" y="1278.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="844.6" y="1251.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="847.6" y="1262.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="844.6" y="1235.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="847.6" y="1246.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="844.9" y="1347.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="847.9" y="1358.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="844.9" y="1331.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="847.9" y="1342.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="844.9" y="1315.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="847.9" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (1 samples, 0.02%)</title><rect x="845.2" y="1395.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="848.2" y="1406.0"></text>
</g>
<g>
<title>java/lang/Thread.start (1 samples, 0.02%)</title><rect x="845.2" y="1379.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="848.2" y="1390.0"></text>
</g>
<g>
<title>java/lang/Thread.start0 (1 samples, 0.02%)</title><rect x="845.2" y="1363.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="848.2" y="1374.0"></text>
</g>
<g>
<title>JVM_StartThread (1 samples, 0.02%)</title><rect x="845.2" y="1347.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="848.2" y="1358.0"></text>
</g>
<g>
<title>Monitor::lock() (1 samples, 0.02%)</title><rect x="845.2" y="1331.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="848.2" y="1342.0"></text>
</g>
<g>
<title>Monitor::TrySpin(Thread*) [clone .part.23] (1 samples, 0.02%)</title><rect x="845.2" y="1315.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="848.2" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (5 samples, 0.12%)</title><rect x="845.5" y="1507.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="848.5" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.getAndSet (1 samples, 0.02%)</title><rect x="845.7" y="1491.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="848.7" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_L (1 samples, 0.02%)</title><rect x="845.7" y="1475.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="848.7" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.getAndSet (1 samples, 0.02%)</title><rect x="845.7" y="1459.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="848.7" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (3 samples, 0.07%)</title><rect x="846.0" y="1491.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="849.0" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (2 samples, 0.05%)</title><rect x="846.3" y="1475.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="849.3" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2 samples, 0.05%)</title><rect x="846.3" y="1459.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="849.3" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (2 samples, 0.05%)</title><rect x="846.3" y="1443.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="849.3" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.05%)</title><rect x="846.3" y="1427.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="849.3" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2 samples, 0.05%)</title><rect x="846.3" y="1411.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="849.3" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.02%)</title><rect x="846.6" y="1395.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="849.6" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.02%)</title><rect x="846.6" y="1379.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="849.6" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.02%)</title><rect x="846.6" y="1363.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="849.6" y="1374.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.02%)</title><rect x="846.6" y="1347.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="849.6" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="846.6" y="1331.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="849.6" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.02%)</title><rect x="846.6" y="1315.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="849.6" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.07%)</title><rect x="846.8" y="1507.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="849.8" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (3 samples, 0.07%)</title><rect x="846.8" y="1491.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="849.8" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.02%)</title><rect x="847.1" y="1475.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.1" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.02%)</title><rect x="847.1" y="1459.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="850.1" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.02%)</title><rect x="847.1" y="1443.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="850.1" y="1454.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.02%)</title><rect x="847.1" y="1427.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.1" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="847.1" y="1411.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.1" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.02%)</title><rect x="847.1" y="1395.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.1" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.02%)</title><rect x="847.4" y="1475.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="850.4" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.02%)</title><rect x="847.4" y="1459.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="850.4" y="1470.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="847.4" y="1443.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="850.4" y="1454.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="847.4" y="1427.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="850.4" y="1438.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="847.4" y="1411.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="850.4" y="1422.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="847.4" y="1395.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="850.4" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalCompletion (4 samples, 0.09%)</title><rect x="847.7" y="1507.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="850.7" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onError (2 samples, 0.05%)</title><rect x="847.9" y="1491.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="850.9" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.onReadError (2 samples, 0.05%)</title><rect x="847.9" y="1475.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="850.9" y="1486.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.02%)</title><rect x="848.5" y="1491.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="851.5" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (136 samples, 3.15%)</title><rect x="848.8" y="1507.0" width="37.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="851.8" y="1518.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (4 samples, 0.09%)</title><rect x="848.8" y="1491.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="851.8" y="1502.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (132 samples, 3.06%)</title><rect x="849.8" y="1491.0" width="36.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="852.8" y="1502.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (132 samples, 3.06%)</title><rect x="849.8" y="1475.0" width="36.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="852.8" y="1486.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (132 samples, 3.06%)</title><rect x="849.8" y="1459.0" width="36.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="852.8" y="1470.0">sun..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (7 samples, 0.16%)</title><rect x="850.1" y="1443.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="853.1" y="1454.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (7 samples, 0.16%)</title><rect x="850.1" y="1427.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="853.1" y="1438.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (2 samples, 0.05%)</title><rect x="850.1" y="1411.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="853.1" y="1422.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.12%)</title><rect x="850.7" y="1411.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.7" y="1422.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.12%)</title><rect x="850.7" y="1395.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="853.7" y="1406.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.12%)</title><rect x="850.7" y="1379.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.7" y="1390.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="850.7" y="1363.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="853.7" y="1374.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="850.9" y="1363.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="853.9" y="1374.0"></text>
</g>
<g>
<title>unsafe_arraycopy (2 samples, 0.05%)</title><rect x="851.5" y="1363.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="854.5" y="1374.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (1 samples, 0.02%)</title><rect x="852.0" y="1443.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.0" y="1454.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (1 samples, 0.02%)</title><rect x="852.0" y="1427.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="855.0" y="1438.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (1 samples, 0.02%)</title><rect x="852.0" y="1411.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="855.0" y="1422.0"></text>
</g>
<g>
<title>java/nio/Buffer.flip (1 samples, 0.02%)</title><rect x="852.0" y="1395.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="855.0" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (118 samples, 2.74%)</title><rect x="852.3" y="1443.0" width="32.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="855.3" y="1454.0">su..</text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="852.3" y="1427.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.3" y="1438.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="852.3" y="1411.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="855.3" y="1422.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (117 samples, 2.71%)</title><rect x="852.6" y="1427.0" width="32.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="855.6" y="1438.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (117 samples, 2.71%)</title><rect x="852.6" y="1411.0" width="32.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="855.6" y="1422.0">su..</text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.05%)</title><rect x="853.1" y="1395.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="856.1" y="1406.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.02%)</title><rect x="853.7" y="1395.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="856.7" y="1406.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.02%)</title><rect x="854.0" y="1395.0" width="0.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="857.0" y="1406.0"></text>
</g>
<g>
<title>read (111 samples, 2.57%)</title><rect x="854.2" y="1395.0" width="30.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="857.2" y="1406.0">read</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (101 samples, 2.34%)</title><rect x="857.0" y="1379.0" width="27.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="860.0" y="1390.0">e..</text>
</g>
<g>
<title>do_syscall_64 (101 samples, 2.34%)</title><rect x="857.0" y="1363.0" width="27.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="860.0" y="1374.0">d..</text>
</g>
<g>
<title>__x64_sys_read (94 samples, 2.18%)</title><rect x="858.6" y="1347.0" width="25.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="861.6" y="1358.0">_..</text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="858.6" y="1331.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="861.6" y="1342.0"></text>
</g>
<g>
<title>ksys_read (93 samples, 2.16%)</title><rect x="858.9" y="1331.0" width="25.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="861.9" y="1342.0">k..</text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.05%)</title><rect x="858.9" y="1315.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="861.9" y="1326.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="858.9" y="1299.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="861.9" y="1310.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.05%)</title><rect x="858.9" y="1283.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="861.9" y="1294.0"></text>
</g>
<g>
<title>vfs_read (91 samples, 2.11%)</title><rect x="859.4" y="1315.0" width="24.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="862.4" y="1326.0">v..</text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="859.4" y="1299.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="862.4" y="1310.0"></text>
</g>
<g>
<title>__vfs_read (84 samples, 1.95%)</title><rect x="859.7" y="1299.0" width="23.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="862.7" y="1310.0">_..</text>
</g>
<g>
<title>new_sync_read (83 samples, 1.92%)</title><rect x="859.7" y="1283.0" width="22.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="862.7" y="1294.0">n..</text>
</g>
<g>
<title>sock_read_iter (79 samples, 1.83%)</title><rect x="860.8" y="1267.0" width="21.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="863.8" y="1278.0">s..</text>
</g>
<g>
<title>sock_recvmsg (77 samples, 1.79%)</title><rect x="861.3" y="1251.0" width="21.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="864.3" y="1262.0">s..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="861.6" y="1235.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="864.6" y="1246.0"></text>
</g>
<g>
<title>inet6_recvmsg (74 samples, 1.72%)</title><rect x="861.9" y="1235.0" width="20.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="864.9" y="1246.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="862.2" y="1219.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="865.2" y="1230.0"></text>
</g>
<g>
<title>tcp_recvmsg (72 samples, 1.67%)</title><rect x="862.4" y="1219.0" width="19.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="865.4" y="1230.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.12%)</title><rect x="863.3" y="1203.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="866.3" y="1214.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="863.3" y="1187.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="866.3" y="1198.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="863.3" y="1171.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="866.3" y="1182.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.09%)</title><rect x="863.5" y="1187.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="866.5" y="1198.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.09%)</title><rect x="863.5" y="1171.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="866.5" y="1182.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.09%)</title><rect x="863.5" y="1155.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="866.5" y="1166.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.07%)</title><rect x="863.8" y="1139.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="866.8" y="1150.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (8 samples, 0.19%)</title><rect x="864.6" y="1203.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="867.6" y="1214.0"></text>
</g>
<g>
<title>__skb_datagram_iter (8 samples, 0.19%)</title><rect x="864.6" y="1187.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="867.6" y="1198.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.16%)</title><rect x="864.9" y="1171.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="867.9" y="1182.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.09%)</title><rect x="864.9" y="1155.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="867.9" y="1166.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.05%)</title><rect x="865.4" y="1139.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="868.4" y="1150.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="866.0" y="1155.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="869.0" y="1166.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.05%)</title><rect x="866.3" y="1155.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="869.3" y="1166.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="866.5" y="1139.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="869.5" y="1150.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (55 samples, 1.28%)</title><rect x="866.8" y="1203.0" width="15.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="869.8" y="1214.0"></text>
</g>
<g>
<title>tcp_send_ack (55 samples, 1.28%)</title><rect x="866.8" y="1187.0" width="15.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="869.8" y="1198.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (55 samples, 1.28%)</title><rect x="866.8" y="1171.0" width="15.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="869.8" y="1182.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.21%)</title><rect x="866.8" y="1155.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="869.8" y="1166.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="866.8" y="1139.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="869.8" y="1150.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.07%)</title><rect x="867.1" y="1139.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="870.1" y="1150.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="867.1" y="1123.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="870.1" y="1134.0"></text>
</g>
<g>
<title>memset_erms (2 samples, 0.05%)</title><rect x="867.4" y="1123.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="870.4" y="1134.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.12%)</title><rect x="867.9" y="1139.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="870.9" y="1150.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (46 samples, 1.07%)</title><rect x="869.3" y="1155.0" width="12.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="872.3" y="1166.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="869.8" y="1139.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="872.8" y="1150.0"></text>
</g>
<g>
<title>ip_queue_xmit (42 samples, 0.97%)</title><rect x="870.1" y="1139.0" width="11.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="873.1" y="1150.0"></text>
</g>
<g>
<title>__ip_queue_xmit (42 samples, 0.97%)</title><rect x="870.1" y="1123.0" width="11.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="873.1" y="1134.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="870.4" y="1107.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="873.4" y="1118.0"></text>
</g>
<g>
<title>ip_local_out (40 samples, 0.93%)</title><rect x="870.6" y="1107.0" width="11.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="873.6" y="1118.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="870.6" y="1091.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="873.6" y="1102.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.02%)</title><rect x="870.6" y="1075.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="873.6" y="1086.0"></text>
</g>
<g>
<title>ip_output (39 samples, 0.90%)</title><rect x="870.9" y="1091.0" width="10.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="873.9" y="1102.0"></text>
</g>
<g>
<title>ip_finish_output (39 samples, 0.90%)</title><rect x="870.9" y="1075.0" width="10.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="873.9" y="1086.0"></text>
</g>
<g>
<title>__ip_finish_output (39 samples, 0.90%)</title><rect x="870.9" y="1059.0" width="10.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="873.9" y="1070.0"></text>
</g>
<g>
<title>ip_finish_output2 (38 samples, 0.88%)</title><rect x="870.9" y="1043.0" width="10.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="873.9" y="1054.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (32 samples, 0.74%)</title><rect x="871.5" y="1027.0" width="8.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="874.5" y="1038.0"></text>
</g>
<g>
<title>do_softirq.part.0 (32 samples, 0.74%)</title><rect x="871.5" y="1011.0" width="8.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="874.5" y="1022.0"></text>
</g>
<g>
<title>do_softirq_own_stack (31 samples, 0.72%)</title><rect x="871.7" y="995.0" width="8.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="874.7" y="1006.0"></text>
</g>
<g>
<title>__softirqentry_text_start (30 samples, 0.70%)</title><rect x="871.7" y="979.0" width="8.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="874.7" y="990.0"></text>
</g>
<g>
<title>net_rx_action (30 samples, 0.70%)</title><rect x="871.7" y="963.0" width="8.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="874.7" y="974.0"></text>
</g>
<g>
<title>process_backlog (28 samples, 0.65%)</title><rect x="872.3" y="947.0" width="7.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="875.3" y="958.0"></text>
</g>
<g>
<title>__netif_receive_skb (26 samples, 0.60%)</title><rect x="872.8" y="931.0" width="7.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="875.8" y="942.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (26 samples, 0.60%)</title><rect x="872.8" y="915.0" width="7.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="875.8" y="926.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="872.8" y="899.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="875.8" y="910.0"></text>
</g>
<g>
<title>ip_rcv (25 samples, 0.58%)</title><rect x="873.1" y="899.0" width="6.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="876.1" y="910.0"></text>
</g>
<g>
<title>ip_rcv_finish (25 samples, 0.58%)</title><rect x="873.1" y="883.0" width="6.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="876.1" y="894.0"></text>
</g>
<g>
<title>ip_local_deliver (23 samples, 0.53%)</title><rect x="873.1" y="867.0" width="6.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="876.1" y="878.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (23 samples, 0.53%)</title><rect x="873.1" y="851.0" width="6.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="876.1" y="862.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (23 samples, 0.53%)</title><rect x="873.1" y="835.0" width="6.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="876.1" y="846.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="873.1" y="819.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="876.1" y="830.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="873.4" y="819.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="876.4" y="830.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="873.7" y="819.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="876.7" y="830.0"></text>
</g>
<g>
<title>tcp_v4_rcv (20 samples, 0.46%)</title><rect x="873.9" y="819.0" width="5.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="876.9" y="830.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.12%)</title><rect x="874.2" y="803.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="877.2" y="814.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="875.3" y="787.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="878.3" y="798.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (14 samples, 0.32%)</title><rect x="875.6" y="803.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="878.6" y="814.0"></text>
</g>
<g>
<title>tcp_rcv_established (14 samples, 0.32%)</title><rect x="875.6" y="787.0" width="3.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="878.6" y="798.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.05%)</title><rect x="875.6" y="771.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="878.6" y="782.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="875.6" y="755.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="878.6" y="766.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="875.6" y="739.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="878.6" y="750.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="875.8" y="755.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="878.8" y="766.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="875.8" y="739.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="878.8" y="750.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.02%)</title><rect x="875.8" y="723.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="878.8" y="734.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="875.8" y="707.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="878.8" y="718.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="876.1" y="771.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="879.1" y="782.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.23%)</title><rect x="876.4" y="771.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="879.4" y="782.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="876.9" y="755.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="879.9" y="766.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.05%)</title><rect x="877.2" y="755.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="880.2" y="766.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.09%)</title><rect x="877.8" y="755.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="880.8" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.09%)</title><rect x="877.8" y="739.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="880.8" y="750.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.09%)</title><rect x="877.8" y="723.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="880.8" y="734.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.09%)</title><rect x="877.8" y="707.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="880.8" y="718.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.07%)</title><rect x="878.0" y="691.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="881.0" y="702.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.07%)</title><rect x="878.0" y="675.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="881.0" y="686.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="878.6" y="659.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="881.6" y="670.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="878.9" y="755.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="881.9" y="766.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="879.1" y="771.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="882.1" y="782.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.05%)</title><rect x="879.4" y="867.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="882.4" y="878.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="879.9" y="979.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="882.9" y="990.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.09%)</title><rect x="880.2" y="1027.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="883.2" y="1038.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.09%)</title><rect x="880.2" y="1011.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="883.2" y="1022.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="881.0" y="995.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="884.0" y="1006.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="881.0" y="979.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="884.0" y="990.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.02%)</title><rect x="881.0" y="963.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="884.0" y="974.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="881.0" y="947.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="884.0" y="958.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="881.0" y="931.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="884.0" y="942.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="881.3" y="1043.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="884.3" y="1054.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="881.6" y="1139.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="884.6" y="1150.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.02%)</title><rect x="881.9" y="1203.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="884.9" y="1214.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="881.9" y="1187.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="884.9" y="1198.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.02%)</title><rect x="882.1" y="1235.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="885.1" y="1246.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="882.1" y="1219.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="885.1" y="1230.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="882.1" y="1203.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="885.1" y="1214.0"></text>
</g>
<g>
<title>sock_read_iter (1 samples, 0.02%)</title><rect x="882.4" y="1283.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="885.4" y="1294.0"></text>
</g>
<g>
<title>rw_verify_area (6 samples, 0.14%)</title><rect x="882.7" y="1299.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="885.7" y="1310.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="883.0" y="1283.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="886.0" y="1294.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.09%)</title><rect x="883.2" y="1283.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="886.2" y="1294.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.05%)</title><rect x="883.2" y="1267.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="886.2" y="1278.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.05%)</title><rect x="883.2" y="1251.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="886.2" y="1262.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.02%)</title><rect x="883.5" y="1235.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="886.5" y="1246.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.05%)</title><rect x="883.8" y="1267.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="886.8" y="1278.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.02%)</title><rect x="884.3" y="1347.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="887.3" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.05%)</title><rect x="884.6" y="1443.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="887.6" y="1454.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="884.9" y="1427.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="887.9" y="1438.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.02%)</title><rect x="884.9" y="1411.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="887.9" y="1422.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.07%)</title><rect x="885.1" y="1443.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="888.1" y="1454.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (2 samples, 0.05%)</title><rect x="885.4" y="1427.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="888.4" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.02%)</title><rect x="886.0" y="1507.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="889.0" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.02%)</title><rect x="886.0" y="1491.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="889.0" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.compareAndSet (1 samples, 0.02%)</title><rect x="886.0" y="1475.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="889.0" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.02%)</title><rect x="886.2" y="1523.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="889.2" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1 samples, 0.02%)</title><rect x="886.5" y="1539.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="889.5" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$487/568802140.accept (4 samples, 0.09%)</title><rect x="886.8" y="1699.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="889.8" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (4 samples, 0.09%)</title><rect x="886.8" y="1683.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="889.8" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$465/316465657.run (4 samples, 0.09%)</title><rect x="886.8" y="1667.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.8" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (4 samples, 0.09%)</title><rect x="886.8" y="1651.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="889.8" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (4 samples, 0.09%)</title><rect x="886.8" y="1635.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.8" y="1646.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.remove (1 samples, 0.02%)</title><rect x="887.3" y="1619.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="890.3" y="1630.0"></text>
</g>
<g>
<title>java/util/HashMap.removeNode (1 samples, 0.02%)</title><rect x="887.3" y="1603.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="890.3" y="1614.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.02%)</title><rect x="887.6" y="1619.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.6" y="1630.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.02%)</title><rect x="887.6" y="1603.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.6" y="1614.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (28 samples, 0.65%)</title><rect x="887.9" y="1715.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="890.9" y="1726.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (22 samples, 0.51%)</title><rect x="887.9" y="1699.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="890.9" y="1710.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (3 samples, 0.07%)</title><rect x="887.9" y="1683.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="890.9" y="1694.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (19 samples, 0.44%)</title><rect x="888.7" y="1683.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="891.7" y="1694.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (19 samples, 0.44%)</title><rect x="888.7" y="1667.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="891.7" y="1678.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (18 samples, 0.42%)</title><rect x="889.0" y="1651.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="892.0" y="1662.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (15 samples, 0.35%)</title><rect x="889.3" y="1635.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="892.3" y="1646.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (11 samples, 0.26%)</title><rect x="889.5" y="1619.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="892.5" y="1630.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="890.9" y="1603.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="893.9" y="1614.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3 samples, 0.07%)</title><rect x="891.4" y="1603.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="894.4" y="1614.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (2 samples, 0.05%)</title><rect x="891.4" y="1587.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="894.4" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$464/438529285.accept (1 samples, 0.02%)</title><rect x="891.7" y="1571.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="894.7" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$463/582870490.test (1 samples, 0.02%)</title><rect x="892.0" y="1587.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="895.0" y="1598.0"></text>
</g>
<g>
<title>java/util/stream/Sink.end (1 samples, 0.02%)</title><rect x="892.3" y="1603.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="895.3" y="1614.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.02%)</title><rect x="892.5" y="1619.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="895.5" y="1630.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (1 samples, 0.02%)</title><rect x="892.8" y="1619.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="895.8" y="1630.0"></text>
</g>
<g>
<title>java/util/HashMap$HashMapSpliterator.estimateSize (1 samples, 0.02%)</title><rect x="892.8" y="1603.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="895.8" y="1614.0"></text>
</g>
<g>
<title>java/util/HashMap$HashMapSpliterator.getFence (1 samples, 0.02%)</title><rect x="892.8" y="1587.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="895.8" y="1598.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.getStreamAndOpFlags (1 samples, 0.02%)</title><rect x="893.1" y="1619.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="896.1" y="1630.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.05%)</title><rect x="893.4" y="1635.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="896.4" y="1646.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.05%)</title><rect x="893.4" y="1619.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="896.4" y="1630.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (6 samples, 0.14%)</title><rect x="893.9" y="1699.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="896.9" y="1710.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.&lt;init&gt; (6 samples, 0.14%)</title><rect x="893.9" y="1683.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="896.9" y="1694.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.&lt;init&gt; (1 samples, 0.02%)</title><rect x="895.0" y="1667.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="898.0" y="1678.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="895.0" y="1651.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="898.0" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (1 samples, 0.02%)</title><rect x="895.3" y="1667.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="898.3" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (207 samples, 4.80%)</title><rect x="895.5" y="1715.0" width="56.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="898.5" y="1726.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$247/53036235.run (83 samples, 1.92%)</title><rect x="896.6" y="1699.0" width="22.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="899.6" y="1710.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (83 samples, 1.92%)</title><rect x="896.6" y="1683.0" width="22.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.6" y="1694.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Logger.log (7 samples, 0.16%)</title><rect x="896.6" y="1667.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="899.6" y="1678.0"></text>
</g>
<g>
<title>java/lang/System$Logger.log (7 samples, 0.16%)</title><rect x="896.6" y="1651.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="899.6" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.log (7 samples, 0.16%)</title><rect x="896.6" y="1635.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="899.6" y="1646.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (1 samples, 0.02%)</title><rect x="898.3" y="1619.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="901.3" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (76 samples, 1.76%)</title><rect x="898.6" y="1667.0" width="20.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="901.6" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (76 samples, 1.76%)</title><rect x="898.6" y="1651.0" width="20.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="901.6" y="1662.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.05%)</title><rect x="899.1" y="1635.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="902.1" y="1646.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (1 samples, 0.02%)</title><rect x="899.7" y="1635.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="902.7" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1 samples, 0.02%)</title><rect x="899.9" y="1635.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="902.9" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (70 samples, 1.62%)</title><rect x="900.2" y="1635.0" width="19.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="903.2" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (70 samples, 1.62%)</title><rect x="900.2" y="1619.0" width="19.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="903.2" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$240/1948350730.run (69 samples, 1.60%)</title><rect x="900.5" y="1603.0" width="18.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.5" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (69 samples, 1.60%)</title><rect x="900.5" y="1587.0" width="18.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="903.5" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (65 samples, 1.51%)</title><rect x="900.5" y="1571.0" width="17.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="903.5" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.getAndSet (4 samples, 0.09%)</title><rect x="901.6" y="1555.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="904.6" y="1566.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_L (4 samples, 0.09%)</title><rect x="901.6" y="1539.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="904.6" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.getAndSet (4 samples, 0.09%)</title><rect x="901.6" y="1523.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="904.6" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription (1 samples, 0.02%)</title><rect x="902.7" y="1555.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.7" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (1 samples, 0.02%)</title><rect x="902.7" y="1539.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.7" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (55 samples, 1.28%)</title><rect x="902.9" y="1555.0" width="15.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.9" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (7 samples, 0.16%)</title><rect x="903.2" y="1539.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.2" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (5 samples, 0.12%)</title><rect x="903.8" y="1523.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="906.8" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (5 samples, 0.12%)</title><rect x="903.8" y="1507.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="906.8" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1473981203.linkToTargetMethod (1 samples, 0.02%)</title><rect x="903.8" y="1491.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="906.8" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2129442232.invoke (1 samples, 0.02%)</title><rect x="903.8" y="1475.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="906.8" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="903.8" y="1459.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="906.8" y="1470.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.02%)</title><rect x="903.8" y="1443.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="906.8" y="1454.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="903.8" y="1427.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="906.8" y="1438.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="903.8" y="1411.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="906.8" y="1422.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="903.8" y="1395.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="906.8" y="1406.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="903.8" y="1379.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="906.8" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (4 samples, 0.09%)</title><rect x="904.0" y="1491.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="907.0" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (4 samples, 0.09%)</title><rect x="904.0" y="1475.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="907.0" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.07%)</title><rect x="904.3" y="1459.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="907.3" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.07%)</title><rect x="904.3" y="1443.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.3" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.07%)</title><rect x="904.3" y="1427.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="907.3" y="1438.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.05%)</title><rect x="904.3" y="1411.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.3" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.05%)</title><rect x="904.3" y="1395.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="907.3" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.05%)</title><rect x="904.3" y="1379.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="907.3" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.abortPending (1 samples, 0.02%)</title><rect x="904.9" y="1411.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.9" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (46 samples, 1.07%)</title><rect x="905.1" y="1539.0" width="12.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="908.1" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (45 samples, 1.04%)</title><rect x="905.4" y="1523.0" width="12.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="908.4" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (45 samples, 1.04%)</title><rect x="905.4" y="1507.0" width="12.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="908.4" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (44 samples, 1.02%)</title><rect x="905.7" y="1491.0" width="12.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="908.7" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (44 samples, 1.02%)</title><rect x="905.7" y="1475.0" width="12.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="908.7" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (44 samples, 1.02%)</title><rect x="905.7" y="1459.0" width="12.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="908.7" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (44 samples, 1.02%)</title><rect x="905.7" y="1443.0" width="12.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="908.7" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (41 samples, 0.95%)</title><rect x="905.9" y="1427.0" width="11.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="908.9" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (41 samples, 0.95%)</title><rect x="905.9" y="1411.0" width="11.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="908.9" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (41 samples, 0.95%)</title><rect x="905.9" y="1395.0" width="11.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="908.9" y="1406.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="905.9" y="1379.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="908.9" y="1390.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.12%)</title><rect x="906.2" y="1379.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="909.2" y="1390.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.02%)</title><rect x="906.5" y="1363.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="909.5" y="1374.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="906.8" y="1363.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="909.8" y="1374.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="907.0" y="1363.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="910.0" y="1374.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="907.3" y="1363.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="910.3" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="907.6" y="1379.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="910.6" y="1390.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.30.so (1 samples, 0.02%)</title><rect x="907.6" y="1363.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="910.6" y="1374.0"></text>
</g>
<g>
<title>__pthread_cond_signal (34 samples, 0.79%)</title><rect x="907.9" y="1379.0" width="9.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="910.9" y="1390.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.72%)</title><rect x="908.7" y="1363.0" width="8.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="911.7" y="1374.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.72%)</title><rect x="908.7" y="1347.0" width="8.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="911.7" y="1358.0"></text>
</g>
<g>
<title>__x64_sys_futex (31 samples, 0.72%)</title><rect x="908.7" y="1331.0" width="8.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="911.7" y="1342.0"></text>
</g>
<g>
<title>do_futex (29 samples, 0.67%)</title><rect x="909.0" y="1315.0" width="7.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="912.0" y="1326.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="909.0" y="1299.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="912.0" y="1310.0"></text>
</g>
<g>
<title>futex_wake (28 samples, 0.65%)</title><rect x="909.2" y="1299.0" width="7.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="912.2" y="1310.0"></text>
</g>
<g>
<title>wake_up_q (27 samples, 0.63%)</title><rect x="909.5" y="1283.0" width="7.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="912.5" y="1294.0"></text>
</g>
<g>
<title>try_to_wake_up (27 samples, 0.63%)</title><rect x="909.5" y="1267.0" width="7.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="912.5" y="1278.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (27 samples, 0.63%)</title><rect x="909.5" y="1251.0" width="7.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="912.5" y="1262.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="916.9" y="1315.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="919.9" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (1 samples, 0.02%)</title><rect x="917.2" y="1427.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="920.2" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="917.2" y="1411.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="920.2" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="917.2" y="1395.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="920.2" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.02%)</title><rect x="917.4" y="1427.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="920.4" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.02%)</title><rect x="917.7" y="1539.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="920.7" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (1 samples, 0.02%)</title><rect x="918.0" y="1555.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="921.0" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.02%)</title><rect x="918.3" y="1571.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="921.3" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.02%)</title><rect x="918.3" y="1555.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="921.3" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.02%)</title><rect x="918.3" y="1539.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="921.3" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.02%)</title><rect x="918.3" y="1523.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="921.3" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (3 samples, 0.07%)</title><rect x="918.5" y="1571.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="921.5" y="1582.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (3 samples, 0.07%)</title><rect x="918.5" y="1555.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="921.5" y="1566.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.07%)</title><rect x="918.5" y="1539.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="921.5" y="1550.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.07%)</title><rect x="918.5" y="1523.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="921.5" y="1534.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.07%)</title><rect x="918.5" y="1507.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="921.5" y="1518.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (3 samples, 0.07%)</title><rect x="918.5" y="1491.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="921.5" y="1502.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (3 samples, 0.07%)</title><rect x="918.5" y="1475.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="921.5" y="1486.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.02%)</title><rect x="918.5" y="1459.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="921.5" y="1470.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="918.8" y="1459.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="921.8" y="1470.0"></text>
</g>
<g>
<title>read (1 samples, 0.02%)</title><rect x="919.1" y="1459.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="922.1" y="1470.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="919.1" y="1443.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="922.1" y="1454.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="919.1" y="1427.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="922.1" y="1438.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.02%)</title><rect x="919.1" y="1411.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="922.1" y="1422.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.02%)</title><rect x="919.1" y="1395.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="922.1" y="1406.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.02%)</title><rect x="919.1" y="1379.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="922.1" y="1390.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.02%)</title><rect x="919.1" y="1363.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="922.1" y="1374.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.02%)</title><rect x="919.1" y="1347.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="922.1" y="1358.0"></text>
</g>
<g>
<title>sock_read_iter (1 samples, 0.02%)</title><rect x="919.1" y="1331.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="922.1" y="1342.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.02%)</title><rect x="919.1" y="1315.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="922.1" y="1326.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="919.1" y="1299.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="922.1" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$265/945591197.run (120 samples, 2.78%)</title><rect x="919.4" y="1699.0" width="32.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="922.4" y="1710.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (120 samples, 2.78%)</title><rect x="919.4" y="1683.0" width="32.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="922.4" y="1694.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (117 samples, 2.71%)</title><rect x="920.2" y="1667.0" width="32.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="923.2" y="1678.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (117 samples, 2.71%)</title><rect x="920.2" y="1651.0" width="32.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="923.2" y="1662.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (116 samples, 2.69%)</title><rect x="920.2" y="1635.0" width="31.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="923.2" y="1646.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (116 samples, 2.69%)</title><rect x="920.2" y="1619.0" width="31.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="923.2" y="1630.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (107 samples, 2.48%)</title><rect x="920.7" y="1603.0" width="29.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="923.7" y="1614.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.05%)</title><rect x="921.0" y="1587.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="924.0" y="1598.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.05%)</title><rect x="921.0" y="1571.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="924.0" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (104 samples, 2.41%)</title><rect x="921.5" y="1587.0" width="28.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="924.5" y="1598.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (104 samples, 2.41%)</title><rect x="921.5" y="1571.0" width="28.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="924.5" y="1582.0">jd..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.02%)</title><rect x="921.8" y="1555.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="924.8" y="1566.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="922.1" y="1555.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="925.1" y="1566.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.21%)</title><rect x="922.4" y="1555.0" width="2.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="925.4" y="1566.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="922.4" y="1539.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="925.4" y="1550.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="922.6" y="1539.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="925.6" y="1550.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="922.9" y="1539.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="925.9" y="1550.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.02%)</title><rect x="923.2" y="1539.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="926.2" y="1550.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="923.5" y="1539.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="926.5" y="1550.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.05%)</title><rect x="923.7" y="1539.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="926.7" y="1550.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.05%)</title><rect x="924.3" y="1539.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="927.3" y="1550.0"></text>
</g>
<g>
<title>__pthread_cond_signal (92 samples, 2.13%)</title><rect x="924.8" y="1555.0" width="25.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="927.8" y="1566.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (79 samples, 1.83%)</title><rect x="928.4" y="1539.0" width="21.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="931.4" y="1550.0">e..</text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="928.4" y="1523.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="931.4" y="1534.0"></text>
</g>
<g>
<title>do_syscall_64 (78 samples, 1.81%)</title><rect x="928.7" y="1523.0" width="21.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="931.7" y="1534.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (75 samples, 1.74%)</title><rect x="929.5" y="1507.0" width="20.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="932.5" y="1518.0"></text>
</g>
<g>
<title>do_futex (75 samples, 1.74%)</title><rect x="929.5" y="1491.0" width="20.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="932.5" y="1502.0"></text>
</g>
<g>
<title>futex_wake (74 samples, 1.72%)</title><rect x="929.8" y="1475.0" width="20.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="932.8" y="1486.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.07%)</title><rect x="931.7" y="1459.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="934.7" y="1470.0"></text>
</g>
<g>
<title>wake_up_q (64 samples, 1.48%)</title><rect x="932.5" y="1459.0" width="17.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="935.5" y="1470.0"></text>
</g>
<g>
<title>try_to_wake_up (64 samples, 1.48%)</title><rect x="932.5" y="1443.0" width="17.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="935.5" y="1454.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (64 samples, 1.48%)</title><rect x="932.5" y="1427.0" width="17.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="935.5" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (3 samples, 0.07%)</title><rect x="950.0" y="1603.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="953.0" y="1614.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.07%)</title><rect x="950.0" y="1587.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="953.0" y="1598.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.07%)</title><rect x="950.0" y="1571.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="953.0" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (4 samples, 0.09%)</title><rect x="950.8" y="1603.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="953.8" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (1 samples, 0.02%)</title><rect x="951.6" y="1587.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="954.6" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.isRunning (1 samples, 0.02%)</title><rect x="951.9" y="1635.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.9" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (9 samples, 0.21%)</title><rect x="952.2" y="1715.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="955.2" y="1726.0"></text>
</g>
<g>
<title>java/time/Instant.now (4 samples, 0.09%)</title><rect x="952.5" y="1699.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="955.5" y="1710.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (4 samples, 0.09%)</title><rect x="952.5" y="1683.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="955.5" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (4 samples, 0.09%)</title><rect x="952.5" y="1667.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="955.5" y="1678.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.05%)</title><rect x="953.0" y="1651.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="956.0" y="1662.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.02%)</title><rect x="953.3" y="1635.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="956.3" y="1646.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="953.3" y="1619.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="956.3" y="1630.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="953.3" y="1603.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="956.3" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (4 samples, 0.09%)</title><rect x="953.6" y="1699.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="956.6" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (2 samples, 0.05%)</title><rect x="954.1" y="1683.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.1" y="1694.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.isEmpty (1 samples, 0.02%)</title><rect x="954.1" y="1667.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="957.1" y="1678.0"></text>
</g>
<g>
<title>java/util/LinkedList.size (1 samples, 0.02%)</title><rect x="954.1" y="1651.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="957.1" y="1662.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.next (1 samples, 0.02%)</title><rect x="954.4" y="1667.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="957.4" y="1678.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.previous (1 samples, 0.02%)</title><rect x="954.4" y="1651.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="957.4" y="1662.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="954.4" y="1635.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="957.4" y="1646.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="954.4" y="1619.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="957.4" y="1630.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.02%)</title><rect x="954.4" y="1603.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="957.4" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.&lt;init&gt; (3 samples, 0.07%)</title><rect x="954.7" y="1715.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="957.7" y="1726.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (3 samples, 0.07%)</title><rect x="954.7" y="1699.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="957.7" y="1710.0"></text>
</g>
<g>
<title>java/util/AbstractSet.&lt;init&gt; (1 samples, 0.02%)</title><rect x="955.2" y="1683.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="958.2" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (9 samples, 0.21%)</title><rect x="955.5" y="1715.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="958.5" y="1726.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="955.5" y="1699.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="958.5" y="1710.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="955.5" y="1683.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="958.5" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$463/582870490.get$Lambda (2 samples, 0.05%)</title><rect x="955.5" y="1667.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="958.5" y="1678.0"></text>
</g>
<g>
<title>java/util/Collection.stream (5 samples, 0.12%)</title><rect x="956.0" y="1699.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="959.0" y="1710.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.12%)</title><rect x="956.0" y="1683.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="959.0" y="1694.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (5 samples, 0.12%)</title><rect x="956.0" y="1667.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="959.0" y="1678.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (4 samples, 0.09%)</title><rect x="956.3" y="1651.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="959.3" y="1662.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (4 samples, 0.09%)</title><rect x="956.3" y="1635.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="959.3" y="1646.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.02%)</title><rect x="957.1" y="1619.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="960.1" y="1630.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (2 samples, 0.05%)</title><rect x="957.4" y="1699.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="960.4" y="1710.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (2 samples, 0.05%)</title><rect x="957.4" y="1683.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="960.4" y="1694.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (2 samples, 0.05%)</title><rect x="957.4" y="1667.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="960.4" y="1678.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (2 samples, 0.05%)</title><rect x="957.4" y="1651.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="960.4" y="1662.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.02%)</title><rect x="957.4" y="1635.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="960.4" y="1646.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.02%)</title><rect x="957.7" y="1635.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="960.7" y="1646.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.combineOpFlags (1 samples, 0.02%)</title><rect x="957.7" y="1619.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="960.7" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (2 samples, 0.05%)</title><rect x="957.9" y="1715.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="960.9" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (15 samples, 0.35%)</title><rect x="958.5" y="1715.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="961.5" y="1726.0"></text>
</g>
<g>
<title>java/time/Instant.now (6 samples, 0.14%)</title><rect x="959.6" y="1699.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="962.6" y="1710.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (6 samples, 0.14%)</title><rect x="959.6" y="1683.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="962.6" y="1694.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.02%)</title><rect x="959.6" y="1667.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="962.6" y="1678.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.02%)</title><rect x="959.6" y="1651.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="962.6" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (5 samples, 0.12%)</title><rect x="959.9" y="1667.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="962.9" y="1678.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (5 samples, 0.12%)</title><rect x="959.9" y="1651.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="962.9" y="1662.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="959.9" y="1635.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="962.9" y="1646.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (4 samples, 0.09%)</title><rect x="960.1" y="1635.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="963.1" y="1646.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="960.1" y="1619.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="963.1" y="1630.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.07%)</title><rect x="960.4" y="1619.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="963.4" y="1630.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.07%)</title><rect x="960.4" y="1603.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="963.4" y="1614.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.remove (4 samples, 0.09%)</title><rect x="961.2" y="1699.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="964.2" y="1710.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (4 samples, 0.09%)</title><rect x="961.2" y="1683.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="964.2" y="1694.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1 samples, 0.02%)</title><rect x="962.3" y="1699.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="965.3" y="1710.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1 samples, 0.02%)</title><rect x="962.3" y="1683.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="965.3" y="1694.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1 samples, 0.02%)</title><rect x="962.3" y="1667.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="965.3" y="1678.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="962.3" y="1651.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="965.3" y="1662.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="962.3" y="1635.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="965.3" y="1646.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (164 samples, 3.80%)</title><rect x="962.6" y="1715.0" width="44.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="965.6" y="1726.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (164 samples, 3.80%)</title><rect x="962.6" y="1699.0" width="44.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="965.6" y="1710.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (160 samples, 3.71%)</title><rect x="963.4" y="1683.0" width="43.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="966.4" y="1694.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (89 samples, 2.06%)</title><rect x="963.4" y="1667.0" width="24.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="966.4" y="1678.0">s..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (2 samples, 0.05%)</title><rect x="963.7" y="1651.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="966.7" y="1662.0"></text>
</g>
<g>
<title>epoll_wait (86 samples, 1.99%)</title><rect x="964.2" y="1651.0" width="23.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="967.2" y="1662.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (68 samples, 1.58%)</title><rect x="969.2" y="1635.0" width="18.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="972.2" y="1646.0"></text>
</g>
<g>
<title>do_syscall_64 (68 samples, 1.58%)</title><rect x="969.2" y="1619.0" width="18.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="972.2" y="1630.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (62 samples, 1.44%)</title><rect x="970.8" y="1603.0" width="17.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="973.8" y="1614.0"></text>
</g>
<g>
<title>do_epoll_wait (62 samples, 1.44%)</title><rect x="970.8" y="1587.0" width="17.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="973.8" y="1598.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.05%)</title><rect x="970.8" y="1571.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="973.8" y="1582.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="970.8" y="1555.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="973.8" y="1566.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.05%)</title><rect x="970.8" y="1539.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="973.8" y="1550.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="971.3" y="1571.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="974.3" y="1582.0"></text>
</g>
<g>
<title>_raw_spin_lock_irq (2 samples, 0.05%)</title><rect x="971.6" y="1571.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="974.6" y="1582.0"></text>
</g>
<g>
<title>ep_poll (55 samples, 1.28%)</title><rect x="972.2" y="1571.0" width="15.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="975.2" y="1582.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (34 samples, 0.79%)</title><rect x="972.7" y="1555.0" width="9.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="975.7" y="1566.0"></text>
</g>
<g>
<title>ep_send_events_proc (29 samples, 0.67%)</title><rect x="974.1" y="1539.0" width="7.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="977.1" y="1550.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="976.0" y="1523.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="979.0" y="1534.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (17 samples, 0.39%)</title><rect x="976.3" y="1523.0" width="4.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="979.3" y="1534.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="977.1" y="1507.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="980.1" y="1518.0"></text>
</g>
<g>
<title>pipe_poll (3 samples, 0.07%)</title><rect x="977.4" y="1507.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="980.4" y="1518.0"></text>
</g>
<g>
<title>sock_poll (10 samples, 0.23%)</title><rect x="978.2" y="1507.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="981.2" y="1518.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.02%)</title><rect x="980.4" y="1491.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="983.4" y="1502.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="980.7" y="1491.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="983.7" y="1502.0"></text>
</g>
<g>
<title>pipe_poll (2 samples, 0.05%)</title><rect x="980.9" y="1523.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="983.9" y="1534.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.05%)</title><rect x="981.5" y="1523.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="984.5" y="1534.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.02%)</title><rect x="982.0" y="1555.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="985.0" y="1566.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="982.3" y="1555.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="985.3" y="1566.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (13 samples, 0.30%)</title><rect x="982.8" y="1555.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="985.8" y="1566.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (13 samples, 0.30%)</title><rect x="982.8" y="1539.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="985.8" y="1550.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (10 samples, 0.23%)</title><rect x="983.1" y="1523.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="986.1" y="1534.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.21%)</title><rect x="983.1" y="1507.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="986.1" y="1518.0"></text>
</g>
<g>
<title>lock_hrtimer_base.isra.0 (1 samples, 0.02%)</title><rect x="985.6" y="1507.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="988.6" y="1518.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (1 samples, 0.02%)</title><rect x="985.9" y="1523.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="988.9" y="1534.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="985.9" y="1507.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="988.9" y="1518.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="986.1" y="1523.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="989.1" y="1534.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="986.1" y="1507.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="989.1" y="1518.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="986.1" y="1491.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="989.1" y="1502.0"></text>
</g>
<g>
<title>select_estimate_accuracy (3 samples, 0.07%)</title><rect x="986.4" y="1555.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="989.4" y="1566.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (1 samples, 0.02%)</title><rect x="987.2" y="1571.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="990.2" y="1582.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="987.5" y="1571.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="990.5" y="1582.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (57 samples, 1.32%)</title><rect x="987.8" y="1667.0" width="15.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="990.8" y="1678.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.02%)</title><rect x="987.8" y="1651.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="990.8" y="1662.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.07%)</title><rect x="988.0" y="1651.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="991.0" y="1662.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.07%)</title><rect x="988.0" y="1635.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="991.0" y="1646.0"></text>
</g>
<g>
<title>java/lang/Integer.equals (1 samples, 0.02%)</title><rect x="988.6" y="1619.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="991.6" y="1630.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (48 samples, 1.11%)</title><rect x="988.9" y="1651.0" width="13.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="991.9" y="1662.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (48 samples, 1.11%)</title><rect x="988.9" y="1635.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="991.9" y="1646.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_drain (1 samples, 0.02%)</title><rect x="989.4" y="1619.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="992.4" y="1630.0"></text>
</g>
<g>
<title>read (45 samples, 1.04%)</title><rect x="989.7" y="1619.0" width="12.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="992.7" y="1630.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.81%)</title><rect x="992.4" y="1603.0" width="9.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="995.4" y="1614.0"></text>
</g>
<g>
<title>do_syscall_64 (35 samples, 0.81%)</title><rect x="992.4" y="1587.0" width="9.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="995.4" y="1598.0"></text>
</g>
<g>
<title>__x64_sys_read (31 samples, 0.72%)</title><rect x="993.5" y="1571.0" width="8.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="996.5" y="1582.0"></text>
</g>
<g>
<title>ksys_read (31 samples, 0.72%)</title><rect x="993.5" y="1555.0" width="8.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="996.5" y="1566.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.02%)</title><rect x="994.1" y="1539.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="997.1" y="1550.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="994.1" y="1523.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="997.1" y="1534.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="994.1" y="1507.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="997.1" y="1518.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="994.3" y="1539.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="997.3" y="1550.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="994.6" y="1539.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="997.6" y="1550.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.02%)</title><rect x="994.9" y="1539.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="997.9" y="1550.0"></text>
</g>
<g>
<title>vfs_read (25 samples, 0.58%)</title><rect x="995.2" y="1539.0" width="6.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="998.2" y="1550.0"></text>
</g>
<g>
<title>__vfs_read (19 samples, 0.44%)</title><rect x="995.2" y="1523.0" width="5.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="998.2" y="1534.0"></text>
</g>
<g>
<title>new_sync_read (18 samples, 0.42%)</title><rect x="995.2" y="1507.0" width="4.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="998.2" y="1518.0"></text>
</g>
<g>
<title>anon_pipe_buf_release (2 samples, 0.05%)</title><rect x="995.7" y="1491.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="998.7" y="1502.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="996.3" y="1491.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="999.3" y="1502.0"></text>
</g>
<g>
<title>pipe_read (13 samples, 0.30%)</title><rect x="996.5" y="1491.0" width="3.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="999.5" y="1502.0"></text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 0.09%)</title><rect x="997.1" y="1475.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1000.1" y="1486.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.09%)</title><rect x="997.1" y="1459.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1000.1" y="1470.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.09%)</title><rect x="997.1" y="1443.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1000.1" y="1454.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="998.2" y="1475.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1001.2" y="1486.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.02%)</title><rect x="998.4" y="1475.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1001.4" y="1486.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.05%)</title><rect x="998.7" y="1475.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1001.7" y="1486.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="999.3" y="1475.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1002.3" y="1486.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.05%)</title><rect x="999.5" y="1475.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1002.5" y="1486.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.02%)</title><rect x="999.8" y="1459.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1002.8" y="1470.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.02%)</title><rect x="1000.1" y="1507.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1003.1" y="1518.0"></text>
</g>
<g>
<title>rw_verify_area (6 samples, 0.14%)</title><rect x="1000.4" y="1523.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1003.4" y="1534.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="1000.6" y="1507.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1003.6" y="1518.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.09%)</title><rect x="1000.9" y="1507.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1003.9" y="1518.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.05%)</title><rect x="1000.9" y="1491.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1003.9" y="1502.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.05%)</title><rect x="1000.9" y="1475.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1003.9" y="1486.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.02%)</title><rect x="1001.5" y="1491.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1004.5" y="1502.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="1001.7" y="1491.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1004.7" y="1502.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (5 samples, 0.12%)</title><rect x="1002.0" y="1651.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1005.0" y="1662.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.09%)</title><rect x="1002.0" y="1635.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1005.0" y="1646.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.09%)</title><rect x="1002.0" y="1619.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1005.0" y="1630.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.09%)</title><rect x="1002.0" y="1603.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1005.0" y="1614.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 0.07%)</title><rect x="1002.3" y="1587.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1005.3" y="1598.0"></text>
</g>
<g>
<title>java/util/HashMap$Node.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1002.5" y="1571.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1005.5" y="1582.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndUpdateReadyOps (1 samples, 0.02%)</title><rect x="1003.1" y="1635.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1006.1" y="1646.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndUpdateReadyOps (1 samples, 0.02%)</title><rect x="1003.1" y="1619.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1006.1" y="1630.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (1 samples, 0.02%)</title><rect x="1003.1" y="1603.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1006.1" y="1614.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (12 samples, 0.28%)</title><rect x="1003.4" y="1667.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1006.4" y="1678.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (2 samples, 0.05%)</title><rect x="1004.5" y="1651.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1007.5" y="1662.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.elementAt (2 samples, 0.05%)</title><rect x="1004.5" y="1635.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1007.5" y="1646.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.ctl (6 samples, 0.14%)</title><rect x="1005.0" y="1651.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1008.0" y="1662.0"></text>
</g>
<g>
<title>epoll_ctl (6 samples, 0.14%)</title><rect x="1005.0" y="1635.0" width="1.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1008.0" y="1646.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.14%)</title><rect x="1005.0" y="1619.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1008.0" y="1630.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.14%)</title><rect x="1005.0" y="1603.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1008.0" y="1614.0"></text>
</g>
<g>
<title>__x64_sys_epoll_ctl (5 samples, 0.12%)</title><rect x="1005.3" y="1587.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1008.3" y="1598.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="1005.6" y="1571.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1008.6" y="1582.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="1005.6" y="1555.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1008.6" y="1566.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="1005.6" y="1539.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1008.6" y="1550.0"></text>
</g>
<g>
<title>ep_insert (1 samples, 0.02%)</title><rect x="1005.8" y="1571.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1008.8" y="1582.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="1005.8" y="1555.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1008.8" y="1566.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (1 samples, 0.02%)</title><rect x="1005.8" y="1539.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1008.8" y="1550.0"></text>
</g>
<g>
<title>ep_remove (1 samples, 0.02%)</title><rect x="1006.1" y="1571.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1009.1" y="1582.0"></text>
</g>
<g>
<title>ep_unregister_pollwait.isra.0 (1 samples, 0.02%)</title><rect x="1006.1" y="1555.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1009.1" y="1566.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="1006.4" y="1571.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1009.4" y="1582.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (1 samples, 0.02%)</title><rect x="1006.7" y="1667.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1009.7" y="1678.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (1 samples, 0.02%)</title><rect x="1006.7" y="1651.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1009.7" y="1662.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.02%)</title><rect x="1006.7" y="1635.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1009.7" y="1646.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.02%)</title><rect x="1006.7" y="1619.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1009.7" y="1630.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.02%)</title><rect x="1006.7" y="1603.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1009.7" y="1614.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.02%)</title><rect x="1006.9" y="1667.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1009.9" y="1678.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.02%)</title><rect x="1006.9" y="1651.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1009.9" y="1662.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.02%)</title><rect x="1006.9" y="1635.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1009.9" y="1646.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.ensureOpen (1 samples, 0.02%)</title><rect x="1007.2" y="1683.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1010.2" y="1694.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.isOpen (1 samples, 0.02%)</title><rect x="1007.2" y="1667.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1010.2" y="1678.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (18 samples, 0.42%)</title><rect x="1007.5" y="1715.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1010.5" y="1726.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (18 samples, 0.42%)</title><rect x="1007.5" y="1699.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1010.5" y="1710.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (17 samples, 0.39%)</title><rect x="1007.7" y="1683.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1010.7" y="1694.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (12 samples, 0.28%)</title><rect x="1007.7" y="1667.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1010.7" y="1678.0"></text>
</g>
<g>
<title>epoll_wait (12 samples, 0.28%)</title><rect x="1007.7" y="1651.0" width="3.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1010.7" y="1662.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.16%)</title><rect x="1009.1" y="1635.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1012.1" y="1646.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.16%)</title><rect x="1009.1" y="1619.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1012.1" y="1630.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (6 samples, 0.14%)</title><rect x="1009.4" y="1603.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1012.4" y="1614.0"></text>
</g>
<g>
<title>do_epoll_wait (6 samples, 0.14%)</title><rect x="1009.4" y="1587.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1012.4" y="1598.0"></text>
</g>
<g>
<title>ep_poll (6 samples, 0.14%)</title><rect x="1009.4" y="1571.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1012.4" y="1582.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (6 samples, 0.14%)</title><rect x="1009.4" y="1555.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1012.4" y="1566.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.09%)</title><rect x="1009.7" y="1539.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1012.7" y="1550.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (3 samples, 0.07%)</title><rect x="1009.9" y="1523.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1012.9" y="1534.0"></text>
</g>
<g>
<title>pipe_poll (1 samples, 0.02%)</title><rect x="1010.2" y="1507.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1013.2" y="1518.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.02%)</title><rect x="1010.5" y="1507.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1013.5" y="1518.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="1010.8" y="1539.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1013.8" y="1550.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (4 samples, 0.09%)</title><rect x="1011.0" y="1667.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1014.0" y="1678.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.02%)</title><rect x="1011.3" y="1651.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1014.3" y="1662.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="1011.6" y="1651.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1014.6" y="1662.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="1011.6" y="1635.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1014.6" y="1646.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.02%)</title><rect x="1011.9" y="1651.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1014.9" y="1662.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndUpdateReadyOps (1 samples, 0.02%)</title><rect x="1011.9" y="1635.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1014.9" y="1646.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndUpdateReadyOps (1 samples, 0.02%)</title><rect x="1011.9" y="1619.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1014.9" y="1630.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (1 samples, 0.02%)</title><rect x="1012.1" y="1667.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1015.1" y="1678.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (6 samples, 0.14%)</title><rect x="1012.4" y="1715.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1015.4" y="1726.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (5 samples, 0.12%)</title><rect x="1012.4" y="1699.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1015.4" y="1710.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (5 samples, 0.12%)</title><rect x="1012.4" y="1683.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1015.4" y="1694.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1 samples, 0.02%)</title><rect x="1013.8" y="1699.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1016.8" y="1710.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (14 samples, 0.32%)</title><rect x="1014.0" y="1715.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1017.0" y="1726.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (14 samples, 0.32%)</title><rect x="1014.0" y="1699.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1017.0" y="1710.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (13 samples, 0.30%)</title><rect x="1014.0" y="1683.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1017.0" y="1694.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (12 samples, 0.28%)</title><rect x="1014.3" y="1667.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1017.3" y="1678.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (12 samples, 0.28%)</title><rect x="1014.3" y="1651.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1017.3" y="1662.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.02%)</title><rect x="1017.6" y="1683.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1020.6" y="1694.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (413 samples, 9.58%)</title><rect x="1017.9" y="1731.0" width="113.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1020.9" y="1742.0">one/nio/server..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (38 samples, 0.88%)</title><rect x="1018.4" y="1715.0" width="10.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1021.4" y="1726.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1018.4" y="1699.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1021.4" y="1710.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.02%)</title><rect x="1018.4" y="1683.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1021.4" y="1694.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (37 samples, 0.86%)</title><rect x="1018.7" y="1699.0" width="10.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1021.7" y="1710.0"></text>
</g>
<g>
<title>JavaThread::check_special_condition_for_native_trans(JavaThread*) (1 samples, 0.02%)</title><rect x="1019.2" y="1683.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1022.2" y="1694.0"></text>
</g>
<g>
<title>JavaThread::check_safepoint_and_suspend_for_native_trans(JavaThread*) (1 samples, 0.02%)</title><rect x="1019.2" y="1667.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1022.2" y="1678.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.02%)</title><rect x="1019.2" y="1651.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1022.2" y="1662.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="1019.2" y="1635.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1022.2" y="1646.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1019.2" y="1619.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1022.2" y="1630.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.02%)</title><rect x="1019.5" y="1683.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1022.5" y="1694.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.12%)</title><rect x="1019.8" y="1683.0" width="1.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1022.8" y="1694.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="1020.6" y="1667.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1023.6" y="1678.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="1020.9" y="1651.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1023.9" y="1662.0"></text>
</g>
<g>
<title>epoll_wait (28 samples, 0.65%)</title><rect x="1021.2" y="1683.0" width="7.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1024.2" y="1694.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.63%)</title><rect x="1021.4" y="1667.0" width="7.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1024.4" y="1678.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.63%)</title><rect x="1021.4" y="1651.0" width="7.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1024.4" y="1662.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (25 samples, 0.58%)</title><rect x="1022.0" y="1635.0" width="6.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1025.0" y="1646.0"></text>
</g>
<g>
<title>do_epoll_wait (25 samples, 0.58%)</title><rect x="1022.0" y="1619.0" width="6.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1025.0" y="1630.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="1022.0" y="1603.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1025.0" y="1614.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="1022.0" y="1587.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1025.0" y="1598.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="1022.0" y="1571.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1025.0" y="1582.0"></text>
</g>
<g>
<title>ep_poll (22 samples, 0.51%)</title><rect x="1022.2" y="1603.0" width="6.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1025.2" y="1614.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (16 samples, 0.37%)</title><rect x="1023.1" y="1587.0" width="4.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1026.1" y="1598.0"></text>
</g>
<g>
<title>ep_send_events_proc (13 samples, 0.30%)</title><rect x="1023.3" y="1571.0" width="3.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1026.3" y="1582.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (8 samples, 0.19%)</title><rect x="1024.4" y="1555.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1027.4" y="1566.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.12%)</title><rect x="1025.0" y="1539.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1028.0" y="1550.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.02%)</title><rect x="1026.1" y="1523.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1029.1" y="1534.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.02%)</title><rect x="1026.4" y="1539.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1029.4" y="1550.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.02%)</title><rect x="1026.6" y="1555.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1029.6" y="1566.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.05%)</title><rect x="1026.9" y="1571.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1029.9" y="1582.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.02%)</title><rect x="1027.4" y="1587.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1030.4" y="1598.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="1027.7" y="1587.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1030.7" y="1598.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.02%)</title><rect x="1028.0" y="1587.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1031.0" y="1598.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.02%)</title><rect x="1028.0" y="1571.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1031.0" y="1582.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="1028.3" y="1603.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1031.3" y="1614.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.02%)</title><rect x="1028.5" y="1603.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1031.5" y="1614.0"></text>
</g>
<g>
<title>one/nio/net/Session.handleException (1 samples, 0.02%)</title><rect x="1028.8" y="1715.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1031.8" y="1726.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (1 samples, 0.02%)</title><rect x="1028.8" y="1699.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1031.8" y="1710.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (1 samples, 0.02%)</title><rect x="1028.8" y="1683.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1031.8" y="1694.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1028.8" y="1667.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1031.8" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1028.8" y="1651.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1031.8" y="1662.0"></text>
</g>
<g>
<title>shutdown (1 samples, 0.02%)</title><rect x="1028.8" y="1635.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1031.8" y="1646.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (372 samples, 8.63%)</title><rect x="1029.1" y="1715.0" width="101.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1032.1" y="1726.0">one/nio/net/..</text>
</g>
<g>
<title>java/lang/System.currentTimeMillis (1 samples, 0.02%)</title><rect x="1030.2" y="1699.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1033.2" y="1710.0"></text>
</g>
<g>
<title>JVM_CurrentTimeMillis (1 samples, 0.02%)</title><rect x="1030.2" y="1683.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1033.2" y="1694.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (366 samples, 8.49%)</title><rect x="1030.5" y="1699.0" width="100.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1033.5" y="1710.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (333 samples, 7.72%)</title><rect x="1030.5" y="1683.0" width="91.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1033.5" y="1694.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (317 samples, 7.35%)</title><rect x="1031.0" y="1667.0" width="86.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1034.0" y="1678.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (317 samples, 7.35%)</title><rect x="1031.0" y="1651.0" width="86.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1034.0" y="1662.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (315 samples, 7.31%)</title><rect x="1031.0" y="1635.0" width="86.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1034.0" y="1646.0">RequestHan..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.14%)</title><rect x="1031.0" y="1619.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1034.0" y="1630.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="1031.3" y="1603.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1034.3" y="1614.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="1031.3" y="1587.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1034.3" y="1598.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1031.6" y="1571.0" width="0.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1034.6" y="1582.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.07%)</title><rect x="1031.8" y="1603.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1034.8" y="1614.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="1032.4" y="1587.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1035.4" y="1598.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="1032.4" y="1571.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1035.4" y="1582.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="1032.4" y="1555.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1035.4" y="1566.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.entity (308 samples, 7.14%)</title><rect x="1032.6" y="1619.0" width="84.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1035.6" y="1630.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.schedulePutEntity (307 samples, 7.12%)</title><rect x="1032.6" y="1603.0" width="84.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1035.6" y="1614.0">ru/mail/po..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (2 samples, 0.05%)</title><rect x="1032.6" y="1587.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1035.6" y="1598.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (2 samples, 0.05%)</title><rect x="1032.6" y="1571.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1035.6" y="1582.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (1 samples, 0.02%)</title><rect x="1032.9" y="1555.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1035.9" y="1566.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (285 samples, 6.61%)</title><rect x="1033.2" y="1587.0" width="78.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1036.2" y="1598.0">java/util..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (285 samples, 6.61%)</title><rect x="1033.2" y="1571.0" width="78.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1036.2" y="1582.0">java/util..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.getOpFlags (2 samples, 0.05%)</title><rect x="1033.2" y="1555.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1036.2" y="1566.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.05%)</title><rect x="1033.2" y="1539.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1036.2" y="1550.0"></text>
</g>
<g>
<title>java/util/RegularEnumSet.contains (2 samples, 0.05%)</title><rect x="1033.2" y="1523.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1036.2" y="1534.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (283 samples, 6.56%)</title><rect x="1033.7" y="1555.0" width="77.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1036.7" y="1566.0">java/util..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (282 samples, 6.54%)</title><rect x="1034.0" y="1539.0" width="77.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1037.0" y="1550.0">java/util..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (277 samples, 6.42%)</title><rect x="1034.6" y="1523.0" width="75.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1037.6" y="1534.0">java/uti..</text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (277 samples, 6.42%)</title><rect x="1034.6" y="1507.0" width="75.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1037.6" y="1518.0">java/uti..</text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="1034.6" y="1491.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1037.6" y="1502.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (274 samples, 6.35%)</title><rect x="1035.1" y="1491.0" width="75.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1038.1" y="1502.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (272 samples, 6.31%)</title><rect x="1035.1" y="1475.0" width="74.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1038.1" y="1486.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (2 samples, 0.05%)</title><rect x="1035.1" y="1459.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1038.1" y="1470.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$27/1043208434.accept (1 samples, 0.02%)</title><rect x="1035.4" y="1443.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1038.4" y="1454.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="1035.4" y="1427.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1038.4" y="1438.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="1035.4" y="1411.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1038.4" y="1422.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="1035.4" y="1395.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1038.4" y="1406.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="1035.4" y="1379.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1038.4" y="1390.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.02%)</title><rect x="1035.4" y="1363.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1038.4" y="1374.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$126/156629683.apply (270 samples, 6.26%)</title><rect x="1035.7" y="1459.0" width="73.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1038.7" y="1470.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.lambda$schedulePutEntity$6 (269 samples, 6.24%)</title><rect x="1035.9" y="1443.0" width="73.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1038.9" y="1454.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$LocalServiceClient.putAsync (45 samples, 1.04%)</title><rect x="1035.9" y="1427.0" width="12.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1038.9" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="1035.9" y="1411.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1038.9" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="1035.9" y="1395.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1038.9" y="1406.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$LocalServiceClient$$Lambda$131/1534001839.get$Lambda (3 samples, 0.07%)</title><rect x="1035.9" y="1379.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1038.9" y="1390.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$LocalServiceClient$$Lambda$131/1534001839.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1035.9" y="1363.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1038.9" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1036.5" y="1347.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1039.5" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (41 samples, 0.95%)</title><rect x="1036.8" y="1411.0" width="11.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1039.8" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (40 samples, 0.93%)</title><rect x="1036.8" y="1395.0" width="10.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1039.8" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (40 samples, 0.93%)</title><rect x="1036.8" y="1379.0" width="10.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1039.8" y="1390.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (39 samples, 0.90%)</title><rect x="1037.0" y="1363.0" width="10.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1040.0" y="1374.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (39 samples, 0.90%)</title><rect x="1037.0" y="1347.0" width="10.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1040.0" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (39 samples, 0.90%)</title><rect x="1037.0" y="1331.0" width="10.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1040.0" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (39 samples, 0.90%)</title><rect x="1037.0" y="1315.0" width="10.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1040.0" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (39 samples, 0.90%)</title><rect x="1037.0" y="1299.0" width="10.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1040.0" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (39 samples, 0.90%)</title><rect x="1037.0" y="1283.0" width="10.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1040.0" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (39 samples, 0.90%)</title><rect x="1037.0" y="1267.0" width="10.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1040.0" y="1278.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="1037.0" y="1251.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1040.0" y="1262.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.05%)</title><rect x="1037.3" y="1251.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1040.3" y="1262.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="1037.3" y="1235.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1040.3" y="1246.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1037.6" y="1235.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1040.6" y="1246.0"></text>
</g>
<g>
<title>__pthread_cond_signal (34 samples, 0.79%)</title><rect x="1037.8" y="1251.0" width="9.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1040.8" y="1262.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.74%)</title><rect x="1038.4" y="1235.0" width="8.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1041.4" y="1246.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1038.4" y="1219.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1041.4" y="1230.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.72%)</title><rect x="1038.7" y="1219.0" width="8.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1041.7" y="1230.0"></text>
</g>
<g>
<title>__x64_sys_futex (29 samples, 0.67%)</title><rect x="1039.2" y="1203.0" width="8.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1042.2" y="1214.0"></text>
</g>
<g>
<title>do_futex (28 samples, 0.65%)</title><rect x="1039.5" y="1187.0" width="7.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1042.5" y="1198.0"></text>
</g>
<g>
<title>futex_wake (28 samples, 0.65%)</title><rect x="1039.5" y="1171.0" width="7.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1042.5" y="1182.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="1040.3" y="1155.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1043.3" y="1166.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="1040.6" y="1155.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1043.6" y="1166.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.05%)</title><rect x="1040.9" y="1155.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1043.9" y="1166.0"></text>
</g>
<g>
<title>wake_up_q (21 samples, 0.49%)</title><rect x="1041.4" y="1155.0" width="5.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1044.4" y="1166.0"></text>
</g>
<g>
<title>try_to_wake_up (21 samples, 0.49%)</title><rect x="1041.4" y="1139.0" width="5.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1044.4" y="1150.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.46%)</title><rect x="1041.7" y="1123.0" width="5.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1044.7" y="1134.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="1047.2" y="1251.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1050.2" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.screenExecutor (1 samples, 0.02%)</title><rect x="1047.7" y="1395.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1050.7" y="1406.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1047.7" y="1379.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1050.7" y="1390.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1048.0" y="1411.0" width="0.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1051.0" y="1422.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpServiceClient.putAsync (224 samples, 5.19%)</title><rect x="1048.2" y="1427.0" width="61.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1051.2" y="1438.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1 samples, 0.02%)</title><rect x="1048.2" y="1411.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1051.2" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.02%)</title><rect x="1048.2" y="1395.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1051.2" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="1048.2" y="1379.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.2" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="1048.2" y="1363.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1051.2" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (156 samples, 3.62%)</title><rect x="1048.5" y="1411.0" width="42.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1051.5" y="1422.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (156 samples, 3.62%)</title><rect x="1048.5" y="1395.0" width="42.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.5" y="1406.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (156 samples, 3.62%)</title><rect x="1048.5" y="1379.0" width="42.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1051.5" y="1390.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (155 samples, 3.59%)</title><rect x="1048.8" y="1363.0" width="42.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1051.8" y="1374.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.07%)</title><rect x="1049.3" y="1347.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1052.3" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.07%)</title><rect x="1049.3" y="1331.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1052.3" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1049.3" y="1315.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1052.3" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1049.3" y="1299.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1052.3" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="1049.6" y="1315.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1052.6" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.05%)</title><rect x="1049.6" y="1299.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1052.6" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1049.9" y="1283.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1052.9" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.02%)</title><rect x="1049.9" y="1267.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1052.9" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.reference (1 samples, 0.02%)</title><rect x="1050.2" y="1347.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1053.2" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (68 samples, 1.58%)</title><rect x="1050.4" y="1347.0" width="18.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1053.4" y="1358.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (7 samples, 0.16%)</title><rect x="1050.4" y="1331.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1053.4" y="1342.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.02%)</title><rect x="1050.4" y="1315.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1053.4" y="1326.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.02%)</title><rect x="1050.4" y="1299.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1053.4" y="1310.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1050.4" y="1283.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1053.4" y="1294.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1050.4" y="1267.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1053.4" y="1278.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1050.4" y="1251.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1053.4" y="1262.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (6 samples, 0.14%)</title><rect x="1050.7" y="1315.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1053.7" y="1326.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6 samples, 0.14%)</title><rect x="1050.7" y="1299.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1053.7" y="1310.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (6 samples, 0.14%)</title><rect x="1050.7" y="1283.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1053.7" y="1294.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.09%)</title><rect x="1050.7" y="1267.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1053.7" y="1278.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.07%)</title><rect x="1050.7" y="1251.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1053.7" y="1262.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (3 samples, 0.07%)</title><rect x="1050.7" y="1235.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1053.7" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (3 samples, 0.07%)</title><rect x="1050.7" y="1219.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1053.7" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.02%)</title><rect x="1051.5" y="1251.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1054.5" y="1262.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.02%)</title><rect x="1051.8" y="1267.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1054.8" y="1278.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.02%)</title><rect x="1051.8" y="1251.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1054.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/Long.longValue (1 samples, 0.02%)</title><rect x="1051.8" y="1235.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1054.8" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$67/2082781203.get (1 samples, 0.02%)</title><rect x="1052.1" y="1267.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1055.1" y="1278.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1052.1" y="1251.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1055.1" y="1262.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1052.1" y="1235.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1055.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1052.1" y="1219.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1055.1" y="1230.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (8 samples, 0.19%)</title><rect x="1052.4" y="1331.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1055.4" y="1342.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (8 samples, 0.19%)</title><rect x="1052.4" y="1315.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1055.4" y="1326.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (4 samples, 0.09%)</title><rect x="1052.4" y="1299.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1055.4" y="1310.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (4 samples, 0.09%)</title><rect x="1052.4" y="1283.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1055.4" y="1294.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="1052.4" y="1267.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1055.4" y="1278.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (2 samples, 0.05%)</title><rect x="1052.9" y="1267.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1055.9" y="1278.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (2 samples, 0.05%)</title><rect x="1053.4" y="1299.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1056.4" y="1310.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2 samples, 0.05%)</title><rect x="1053.4" y="1283.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1056.4" y="1294.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.accept (2 samples, 0.05%)</title><rect x="1053.4" y="1267.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1056.4" y="1278.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.05%)</title><rect x="1053.4" y="1251.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1056.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.02%)</title><rect x="1053.4" y="1235.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1056.4" y="1246.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.accept (1 samples, 0.02%)</title><rect x="1053.4" y="1219.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1056.4" y="1230.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.02%)</title><rect x="1053.4" y="1203.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1056.4" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$81/352083716.test (1 samples, 0.02%)</title><rect x="1053.4" y="1187.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1056.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (1 samples, 0.02%)</title><rect x="1053.4" y="1171.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1056.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/871160466.test (1 samples, 0.02%)</title><rect x="1053.4" y="1155.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1056.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.02%)</title><rect x="1053.4" y="1139.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1056.4" y="1150.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.02%)</title><rect x="1053.4" y="1123.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1056.4" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.02%)</title><rect x="1053.4" y="1107.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1056.4" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.02%)</title><rect x="1053.4" y="1091.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1056.4" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.02%)</title><rect x="1053.4" y="1075.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1056.4" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.02%)</title><rect x="1053.4" y="1059.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1056.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="1053.4" y="1043.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1056.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="1053.4" y="1027.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1056.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="1053.4" y="1011.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1056.4" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.02%)</title><rect x="1053.7" y="1235.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1056.7" y="1246.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.accept (1 samples, 0.02%)</title><rect x="1053.7" y="1219.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1056.7" y="1230.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.02%)</title><rect x="1053.7" y="1203.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1056.7" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="1053.7" y="1187.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1056.7" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="1053.7" y="1171.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1056.7" y="1182.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1 samples, 0.02%)</title><rect x="1054.0" y="1299.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1057.0" y="1310.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1054.3" y="1299.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1057.3" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (1 samples, 0.02%)</title><rect x="1054.5" y="1331.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1057.5" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.02%)</title><rect x="1054.5" y="1315.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1057.5" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="1054.5" y="1299.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1057.5" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (48 samples, 1.11%)</title><rect x="1054.8" y="1331.0" width="13.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1057.8" y="1342.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (48 samples, 1.11%)</title><rect x="1054.8" y="1315.0" width="13.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1057.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.02%)</title><rect x="1054.8" y="1299.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1057.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="1054.8" y="1283.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1057.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="1054.8" y="1267.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1057.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (4 samples, 0.09%)</title><rect x="1055.1" y="1299.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1058.1" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.05%)</title><rect x="1055.1" y="1283.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1058.1" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="1055.1" y="1267.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1058.1" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="1055.4" y="1267.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1058.4" y="1278.0"></text>
</g>
<g>
<title>java/util/Locale.getDefault (2 samples, 0.05%)</title><rect x="1055.6" y="1283.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1058.6" y="1294.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (43 samples, 1.00%)</title><rect x="1056.2" y="1299.0" width="11.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1059.2" y="1310.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.02%)</title><rect x="1056.7" y="1283.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1059.7" y="1294.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (28 samples, 0.65%)</title><rect x="1057.0" y="1283.0" width="7.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1060.0" y="1294.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.02%)</title><rect x="1057.6" y="1267.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1060.6" y="1278.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.02%)</title><rect x="1057.8" y="1267.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1060.8" y="1278.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (1 samples, 0.02%)</title><rect x="1058.1" y="1267.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1061.1" y="1278.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.07%)</title><rect x="1058.4" y="1267.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1061.4" y="1278.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (3 samples, 0.07%)</title><rect x="1058.4" y="1251.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1061.4" y="1262.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.02%)</title><rect x="1059.2" y="1267.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1062.2" y="1278.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 0.12%)</title><rect x="1059.5" y="1267.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1062.5" y="1278.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.02%)</title><rect x="1059.5" y="1251.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1062.5" y="1262.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="1059.7" y="1251.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1062.7" y="1262.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (3 samples, 0.07%)</title><rect x="1060.0" y="1251.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1063.0" y="1262.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.02%)</title><rect x="1060.6" y="1235.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1063.6" y="1246.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.02%)</title><rect x="1060.8" y="1267.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1063.8" y="1278.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="1061.1" y="1267.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1064.1" y="1278.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="1061.4" y="1267.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1064.4" y="1278.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (1 samples, 0.02%)</title><rect x="1061.7" y="1267.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1064.7" y="1278.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.02%)</title><rect x="1061.9" y="1267.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1064.9" y="1278.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.02%)</title><rect x="1062.2" y="1267.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1065.2" y="1278.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (4 samples, 0.09%)</title><rect x="1062.5" y="1267.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1065.5" y="1278.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.05%)</title><rect x="1062.5" y="1251.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1065.5" y="1262.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.05%)</title><rect x="1062.5" y="1235.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1065.5" y="1246.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.05%)</title><rect x="1063.0" y="1251.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1066.0" y="1262.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (4 samples, 0.09%)</title><rect x="1063.6" y="1267.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1066.6" y="1278.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.02%)</title><rect x="1063.8" y="1251.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1066.8" y="1262.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.02%)</title><rect x="1063.8" y="1235.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1066.8" y="1246.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.05%)</title><rect x="1064.1" y="1251.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1067.1" y="1262.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (2 samples, 0.05%)</title><rect x="1064.1" y="1235.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1067.1" y="1246.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.02%)</title><rect x="1064.7" y="1283.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1067.7" y="1294.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (11 samples, 0.26%)</title><rect x="1064.9" y="1283.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1067.9" y="1294.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (11 samples, 0.26%)</title><rect x="1064.9" y="1267.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1067.9" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.12%)</title><rect x="1065.5" y="1251.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1068.5" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.09%)</title><rect x="1065.5" y="1235.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1068.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="1066.0" y="1219.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1069.0" y="1230.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="1066.3" y="1203.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1069.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="1066.3" y="1187.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1069.3" y="1198.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.02%)</title><rect x="1066.6" y="1235.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1069.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.02%)</title><rect x="1066.9" y="1251.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1069.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="1066.9" y="1235.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.9" y="1246.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="1066.9" y="1219.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1069.9" y="1230.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (3 samples, 0.07%)</title><rect x="1067.1" y="1251.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1070.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (1 samples, 0.02%)</title><rect x="1067.1" y="1235.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1070.1" y="1246.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.02%)</title><rect x="1067.1" y="1219.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1070.1" y="1230.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.02%)</title><rect x="1067.1" y="1203.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1070.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="1067.1" y="1187.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1070.1" y="1198.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.05%)</title><rect x="1067.4" y="1235.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1070.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.05%)</title><rect x="1067.4" y="1219.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1070.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.05%)</title><rect x="1067.4" y="1203.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1070.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.05%)</title><rect x="1067.4" y="1187.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1070.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (4 samples, 0.09%)</title><rect x="1067.9" y="1331.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1070.9" y="1342.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (4 samples, 0.09%)</title><rect x="1067.9" y="1315.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1070.9" y="1326.0"></text>
</g>
<g>
<title>java/util/AbstractMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1068.8" y="1299.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1071.8" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (10 samples, 0.23%)</title><rect x="1069.0" y="1347.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1072.0" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (4 samples, 0.09%)</title><rect x="1070.4" y="1331.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1073.4" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (4 samples, 0.09%)</title><rect x="1070.4" y="1315.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1073.4" y="1326.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (1 samples, 0.02%)</title><rect x="1070.7" y="1299.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1073.7" y="1310.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (2 samples, 0.05%)</title><rect x="1071.0" y="1299.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1074.0" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (1 samples, 0.02%)</title><rect x="1071.5" y="1331.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1074.5" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (71 samples, 1.65%)</title><rect x="1071.8" y="1347.0" width="19.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1074.8" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (70 samples, 1.62%)</title><rect x="1071.8" y="1331.0" width="19.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1074.8" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (70 samples, 1.62%)</title><rect x="1071.8" y="1315.0" width="19.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1074.8" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (69 samples, 1.60%)</title><rect x="1071.8" y="1299.0" width="18.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1074.8" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (69 samples, 1.60%)</title><rect x="1071.8" y="1283.0" width="18.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1074.8" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (67 samples, 1.55%)</title><rect x="1072.1" y="1267.0" width="18.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1075.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (67 samples, 1.55%)</title><rect x="1072.1" y="1251.0" width="18.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1075.1" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (67 samples, 1.55%)</title><rect x="1072.1" y="1235.0" width="18.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1075.1" y="1246.0"></text>
</g>
<g>
<title>Unsafe_Unpark (11 samples, 0.26%)</title><rect x="1072.1" y="1219.0" width="3.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1075.1" y="1230.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.02%)</title><rect x="1072.6" y="1203.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1075.6" y="1214.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="1072.9" y="1203.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1075.9" y="1214.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="1073.1" y="1203.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1076.1" y="1214.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="1073.4" y="1203.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1076.4" y="1214.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.07%)</title><rect x="1073.7" y="1203.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1076.7" y="1214.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.05%)</title><rect x="1074.5" y="1203.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1077.5" y="1214.0"></text>
</g>
<g>
<title>__pthread_cond_signal (56 samples, 1.30%)</title><rect x="1075.1" y="1219.0" width="15.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1078.1" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 1.11%)</title><rect x="1077.3" y="1203.0" width="13.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1080.3" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (48 samples, 1.11%)</title><rect x="1077.3" y="1187.0" width="13.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1080.3" y="1198.0"></text>
</g>
<g>
<title>__x64_sys_futex (42 samples, 0.97%)</title><rect x="1078.9" y="1171.0" width="11.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1081.9" y="1182.0"></text>
</g>
<g>
<title>do_futex (42 samples, 0.97%)</title><rect x="1078.9" y="1155.0" width="11.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1081.9" y="1166.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1078.9" y="1139.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1081.9" y="1150.0"></text>
</g>
<g>
<title>futex_wake (40 samples, 0.93%)</title><rect x="1079.2" y="1139.0" width="10.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1082.2" y="1150.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.07%)</title><rect x="1080.3" y="1123.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1083.3" y="1134.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.05%)</title><rect x="1081.1" y="1123.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1084.1" y="1134.0"></text>
</g>
<g>
<title>wake_up_q (31 samples, 0.72%)</title><rect x="1081.6" y="1123.0" width="8.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1084.6" y="1134.0"></text>
</g>
<g>
<title>try_to_wake_up (31 samples, 0.72%)</title><rect x="1081.6" y="1107.0" width="8.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1084.6" y="1118.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (31 samples, 0.72%)</title><rect x="1081.6" y="1091.0" width="8.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1084.6" y="1102.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="1090.1" y="1139.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1093.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (1 samples, 0.02%)</title><rect x="1090.4" y="1267.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1093.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="1090.4" y="1251.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1093.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="1090.4" y="1235.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1093.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (1 samples, 0.02%)</title><rect x="1090.7" y="1299.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1093.7" y="1310.0"></text>
</g>
<g>
<title>java/lang/Thread.start (1 samples, 0.02%)</title><rect x="1090.7" y="1283.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1093.7" y="1294.0"></text>
</g>
<g>
<title>java/lang/Thread.start0 (1 samples, 0.02%)</title><rect x="1090.7" y="1267.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1093.7" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1090.7" y="1251.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1093.7" y="1262.0"></text>
</g>
<g>
<title>__clone (1 samples, 0.02%)</title><rect x="1090.7" y="1235.0" width="0.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1093.7" y="1246.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1090.7" y="1219.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1093.7" y="1230.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1090.7" y="1203.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1093.7" y="1214.0"></text>
</g>
<g>
<title>__x64_sys_clone (1 samples, 0.02%)</title><rect x="1090.7" y="1187.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1093.7" y="1198.0"></text>
</g>
<g>
<title>_do_fork (1 samples, 0.02%)</title><rect x="1090.7" y="1171.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1093.7" y="1182.0"></text>
</g>
<g>
<title>copy_process (1 samples, 0.02%)</title><rect x="1090.7" y="1155.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1093.7" y="1166.0"></text>
</g>
<g>
<title>__vmalloc_node_range (1 samples, 0.02%)</title><rect x="1090.7" y="1139.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1093.7" y="1150.0"></text>
</g>
<g>
<title>__get_vm_area_node (1 samples, 0.02%)</title><rect x="1090.7" y="1123.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1093.7" y="1134.0"></text>
</g>
<g>
<title>alloc_vmap_area (1 samples, 0.02%)</title><rect x="1090.7" y="1107.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1093.7" y="1118.0"></text>
</g>
<g>
<title>insert_vmap_area_augment.constprop.0 (1 samples, 0.02%)</title><rect x="1090.7" y="1091.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1093.7" y="1102.0"></text>
</g>
<g>
<title>__rb_insert_augmented (1 samples, 0.02%)</title><rect x="1090.7" y="1075.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1093.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (1 samples, 0.02%)</title><rect x="1090.9" y="1331.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1093.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="1090.9" y="1315.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1093.9" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="1090.9" y="1299.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1093.9" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$151/1373859138.get$Lambda (1 samples, 0.02%)</title><rect x="1090.9" y="1283.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1093.9" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (7 samples, 0.16%)</title><rect x="1091.2" y="1411.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1094.2" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (7 samples, 0.16%)</title><rect x="1091.2" y="1395.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1094.2" y="1406.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6 samples, 0.14%)</title><rect x="1091.5" y="1379.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1094.5" y="1390.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6 samples, 0.14%)</title><rect x="1091.5" y="1363.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1094.5" y="1374.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (3 samples, 0.07%)</title><rect x="1091.5" y="1347.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1094.5" y="1358.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (3 samples, 0.07%)</title><rect x="1091.5" y="1331.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1094.5" y="1342.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="1091.5" y="1315.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1094.5" y="1326.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.02%)</title><rect x="1092.0" y="1315.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1095.0" y="1326.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1092.3" y="1347.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1095.3" y="1358.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2 samples, 0.05%)</title><rect x="1092.6" y="1347.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1095.6" y="1358.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.accept (2 samples, 0.05%)</title><rect x="1092.6" y="1331.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1095.6" y="1342.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.05%)</title><rect x="1092.6" y="1315.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1095.6" y="1326.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.02%)</title><rect x="1092.6" y="1299.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1095.6" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.02%)</title><rect x="1092.6" y="1283.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1095.6" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.02%)</title><rect x="1092.6" y="1267.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1095.6" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="1092.9" y="1299.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1095.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="1092.9" y="1283.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1095.9" y="1294.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.get$Lambda (1 samples, 0.02%)</title><rect x="1092.9" y="1267.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1095.9" y="1278.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1092.9" y="1251.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1095.9" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/871160466.test (1 samples, 0.02%)</title><rect x="1092.9" y="1235.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1095.9" y="1246.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpServiceClient.request (60 samples, 1.39%)</title><rect x="1093.1" y="1411.0" width="16.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1096.1" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.16%)</title><rect x="1093.1" y="1395.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.1" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (7 samples, 0.16%)</title><rect x="1093.1" y="1379.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1096.1" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1806431167.invoke (7 samples, 0.16%)</title><rect x="1093.1" y="1363.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1096.1" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="1093.1" y="1347.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1096.1" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="1093.7" y="1331.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1096.7" y="1342.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.02%)</title><rect x="1093.9" y="1331.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1096.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.02%)</title><rect x="1094.2" y="1331.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1097.2" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/701141022.invoke (2 samples, 0.05%)</title><rect x="1094.5" y="1347.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1097.5" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="1094.5" y="1331.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1097.5" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="1094.5" y="1315.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1097.5" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.02%)</title><rect x="1094.8" y="1315.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1097.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="1094.8" y="1299.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1097.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="1094.8" y="1283.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1097.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.02%)</title><rect x="1094.8" y="1267.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1097.8" y="1278.0"></text>
</g>
<g>
<title>java/net/URI.create (41 samples, 0.95%)</title><rect x="1095.0" y="1395.0" width="11.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1098.0" y="1406.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (41 samples, 0.95%)</title><rect x="1095.0" y="1379.0" width="11.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1098.0" y="1390.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (41 samples, 0.95%)</title><rect x="1095.0" y="1363.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1098.0" y="1374.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (4 samples, 0.09%)</title><rect x="1095.0" y="1347.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1098.0" y="1358.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (1 samples, 0.02%)</title><rect x="1096.1" y="1347.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1099.1" y="1358.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.02%)</title><rect x="1096.1" y="1331.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1099.1" y="1342.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.02%)</title><rect x="1096.1" y="1315.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1099.1" y="1326.0"></text>
</g>
<g>
<title>java/net/URI.match (1 samples, 0.02%)</title><rect x="1096.1" y="1299.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1099.1" y="1310.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (6 samples, 0.14%)</title><rect x="1096.4" y="1347.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1099.4" y="1358.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (6 samples, 0.14%)</title><rect x="1096.4" y="1331.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1099.4" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.07%)</title><rect x="1096.4" y="1315.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1099.4" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="1097.0" y="1299.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1100.0" y="1310.0"></text>
</g>
<g>
<title>java/net/URI.match (3 samples, 0.07%)</title><rect x="1097.2" y="1315.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1100.2" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.05%)</title><rect x="1097.5" y="1299.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1100.5" y="1310.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (29 samples, 0.67%)</title><rect x="1098.1" y="1347.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1101.1" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.14%)</title><rect x="1098.1" y="1331.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1101.1" y="1342.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.14%)</title><rect x="1098.1" y="1315.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1101.1" y="1326.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.14%)</title><rect x="1098.1" y="1299.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1101.1" y="1310.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="1099.1" y="1283.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1102.1" y="1294.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (1 samples, 0.02%)</title><rect x="1099.7" y="1331.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1102.7" y="1342.0"></text>
</g>
<g>
<title>java/net/URI.match (1 samples, 0.02%)</title><rect x="1099.7" y="1315.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1102.7" y="1326.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (2 samples, 0.05%)</title><rect x="1100.0" y="1331.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1103.0" y="1342.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.05%)</title><rect x="1100.0" y="1315.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1103.0" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="1100.0" y="1299.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1103.0" y="1310.0"></text>
</g>
<g>
<title>java/net/URI.match (1 samples, 0.02%)</title><rect x="1100.2" y="1299.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1103.2" y="1310.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (10 samples, 0.23%)</title><rect x="1100.5" y="1331.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1103.5" y="1342.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (5 samples, 0.12%)</title><rect x="1100.5" y="1315.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1103.5" y="1326.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (1 samples, 0.02%)</title><rect x="1100.8" y="1299.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1103.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="1100.8" y="1283.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1103.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.02%)</title><rect x="1100.8" y="1267.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1103.8" y="1278.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (2 samples, 0.05%)</title><rect x="1101.1" y="1299.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1104.1" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="1101.1" y="1283.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1104.1" y="1294.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="1101.1" y="1267.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1104.1" y="1278.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="1101.1" y="1251.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1104.1" y="1262.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.02%)</title><rect x="1101.3" y="1283.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1104.3" y="1294.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.02%)</title><rect x="1101.6" y="1299.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1104.6" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="1101.6" y="1283.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1104.6" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="1101.6" y="1267.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1104.6" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="1101.6" y="1251.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1104.6" y="1262.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (5 samples, 0.12%)</title><rect x="1101.9" y="1315.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1104.9" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.05%)</title><rect x="1102.4" y="1299.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1105.4" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="1103.0" y="1299.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1106.0" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="1103.0" y="1283.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1106.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="1103.0" y="1267.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1106.0" y="1278.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (9 samples, 0.21%)</title><rect x="1103.3" y="1331.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1106.3" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.05%)</title><rect x="1103.3" y="1315.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1106.3" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.02%)</title><rect x="1103.5" y="1299.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1106.5" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.16%)</title><rect x="1103.8" y="1315.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1106.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.12%)</title><rect x="1104.3" y="1299.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1107.3" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.12%)</title><rect x="1104.3" y="1283.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1107.3" y="1294.0"></text>
</g>
<g>
<title>java/net/URI.match (1 samples, 0.02%)</title><rect x="1105.7" y="1331.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1108.7" y="1342.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.02%)</title><rect x="1106.0" y="1347.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1109.0" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="1106.0" y="1331.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1109.0" y="1342.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (4 samples, 0.09%)</title><rect x="1106.3" y="1395.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1109.3" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (4 samples, 0.09%)</title><rect x="1106.3" y="1379.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1109.3" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1107.1" y="1363.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1110.1" y="1374.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1107.1" y="1347.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1110.1" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (5 samples, 0.12%)</title><rect x="1107.4" y="1395.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1110.4" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (5 samples, 0.12%)</title><rect x="1107.4" y="1379.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1110.4" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (5 samples, 0.12%)</title><rect x="1107.4" y="1363.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1110.4" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/871160466.test (4 samples, 0.09%)</title><rect x="1107.4" y="1347.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1110.4" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (4 samples, 0.09%)</title><rect x="1107.4" y="1331.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1110.4" y="1342.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (4 samples, 0.09%)</title><rect x="1107.4" y="1315.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1110.4" y="1326.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (4 samples, 0.09%)</title><rect x="1107.4" y="1299.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1110.4" y="1310.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (3 samples, 0.07%)</title><rect x="1107.6" y="1283.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1110.6" y="1294.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.02%)</title><rect x="1108.2" y="1267.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1111.2" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.02%)</title><rect x="1108.2" y="1251.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1111.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="1108.2" y="1235.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1111.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="1108.2" y="1219.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1111.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="1108.2" y="1203.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1111.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.getChar (1 samples, 0.02%)</title><rect x="1108.2" y="1187.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1111.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (1 samples, 0.02%)</title><rect x="1108.5" y="1347.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1111.5" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.timeout (1 samples, 0.02%)</title><rect x="1108.7" y="1395.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1111.7" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (2 samples, 0.05%)</title><rect x="1109.0" y="1395.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1112.0" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (2 samples, 0.05%)</title><rect x="1109.0" y="1379.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1112.0" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (2 samples, 0.05%)</title><rect x="1109.0" y="1363.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1112.0" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.05%)</title><rect x="1109.0" y="1347.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1112.0" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.05%)</title><rect x="1109.0" y="1331.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1112.0" y="1342.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$126/156629683.apply (2 samples, 0.05%)</title><rect x="1109.5" y="1475.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1112.5" y="1486.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.lambda$schedulePutEntity$6 (2 samples, 0.05%)</title><rect x="1109.5" y="1459.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1112.5" y="1470.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpServiceClient.putAsync (2 samples, 0.05%)</title><rect x="1109.5" y="1443.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1112.5" y="1454.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpServiceClient.request (2 samples, 0.05%)</title><rect x="1109.5" y="1427.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1112.5" y="1438.0"></text>
</g>
<g>
<title>java/net/URI.create (2 samples, 0.05%)</title><rect x="1109.5" y="1411.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1112.5" y="1422.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1109.5" y="1395.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1112.5" y="1406.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (2 samples, 0.05%)</title><rect x="1109.5" y="1379.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1112.5" y="1390.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="1109.5" y="1363.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1112.5" y="1374.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="1109.5" y="1347.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1112.5" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1109.5" y="1331.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1112.5" y="1342.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.02%)</title><rect x="1110.1" y="1491.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1113.1" y="1502.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.07%)</title><rect x="1110.4" y="1523.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1113.4" y="1534.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.05%)</title><rect x="1110.6" y="1507.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1113.6" y="1518.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (1 samples, 0.02%)</title><rect x="1111.2" y="1587.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1114.2" y="1598.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils.firstN (2 samples, 0.05%)</title><rect x="1111.5" y="1587.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1114.5" y="1598.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.05%)</title><rect x="1111.5" y="1571.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1114.5" y="1582.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils$$Lambda$175/1236692729.accept (2 samples, 0.05%)</title><rect x="1111.5" y="1555.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1114.5" y="1566.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils.lambda$firstN$1 (2 samples, 0.05%)</title><rect x="1111.5" y="1539.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1114.5" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.05%)</title><rect x="1111.5" y="1523.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1114.5" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="1111.5" y="1507.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1114.5" y="1518.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1111.5" y="1491.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1114.5" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1111.5" y="1475.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1114.5" y="1486.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.02%)</title><rect x="1111.7" y="1491.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1114.7" y="1502.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils$$Lambda$170/1308121008.accept (1 samples, 0.02%)</title><rect x="1111.7" y="1475.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1114.7" y="1486.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils.lambda$firstN$0 (1 samples, 0.02%)</title><rect x="1111.7" y="1459.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1114.7" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeExceptionally (1 samples, 0.02%)</title><rect x="1111.7" y="1443.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1114.7" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (1 samples, 0.02%)</title><rect x="1111.7" y="1427.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1114.7" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="1111.7" y="1411.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1114.7" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="1111.7" y="1395.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1114.7" y="1406.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/topology/ConsistentHashingTopology.primaryFor (17 samples, 0.39%)</title><rect x="1112.0" y="1587.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1115.0" y="1598.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (3 samples, 0.07%)</title><rect x="1112.3" y="1571.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1115.3" y="1582.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1112.3" y="1555.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1115.3" y="1566.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (3 samples, 0.07%)</title><rect x="1112.3" y="1539.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1115.3" y="1550.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (3 samples, 0.07%)</title><rect x="1112.3" y="1523.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1115.3" y="1534.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (3 samples, 0.07%)</title><rect x="1112.3" y="1507.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1115.3" y="1518.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (3 samples, 0.07%)</title><rect x="1112.3" y="1491.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1115.3" y="1502.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="1112.8" y="1475.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1115.8" y="1486.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="1112.8" y="1459.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1115.8" y="1470.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="1112.8" y="1443.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1115.8" y="1454.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.09%)</title><rect x="1113.1" y="1571.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1116.1" y="1582.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.09%)</title><rect x="1113.1" y="1555.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1116.1" y="1566.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.09%)</title><rect x="1113.1" y="1539.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1116.1" y="1550.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.05%)</title><rect x="1113.7" y="1523.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1116.7" y="1534.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/topology/ConsistentHashingTopology.hash (9 samples, 0.21%)</title><rect x="1114.2" y="1571.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1117.2" y="1582.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashString (9 samples, 0.21%)</title><rect x="1114.2" y="1555.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1117.2" y="1566.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHasher.putString (2 samples, 0.05%)</title><rect x="1114.2" y="1539.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1117.2" y="1550.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHasher.putBytes (2 samples, 0.05%)</title><rect x="1114.2" y="1523.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1117.2" y="1534.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytes (2 samples, 0.05%)</title><rect x="1114.2" y="1507.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1117.2" y="1518.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytesInternal (1 samples, 0.02%)</title><rect x="1114.2" y="1491.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1117.2" y="1502.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.02%)</title><rect x="1114.2" y="1475.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1117.2" y="1486.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="1114.5" y="1491.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1117.5" y="1502.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1114.5" y="1475.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1117.5" y="1486.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1114.5" y="1459.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1117.5" y="1470.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (5 samples, 0.12%)</title><rect x="1114.7" y="1539.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1117.7" y="1550.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.munch (3 samples, 0.07%)</title><rect x="1115.0" y="1523.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1118.0" y="1534.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.compact (3 samples, 0.07%)</title><rect x="1115.0" y="1507.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1118.0" y="1518.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="1115.6" y="1491.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1118.6" y="1502.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.processRemaining (1 samples, 0.02%)</title><rect x="1115.8" y="1523.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1118.8" y="1534.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.mixK2 (1 samples, 0.02%)</title><rect x="1115.8" y="1507.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1118.8" y="1518.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (2 samples, 0.05%)</title><rect x="1116.1" y="1539.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1119.1" y="1550.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1116.1" y="1523.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1119.1" y="1534.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1116.1" y="1507.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1119.1" y="1518.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1116.1" y="1491.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1119.1" y="1502.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.02%)</title><rect x="1116.4" y="1475.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1119.4" y="1486.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1116.4" y="1459.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1119.4" y="1470.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1116.4" y="1443.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1119.4" y="1454.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ResponseUtils.isProxied (1 samples, 0.02%)</title><rect x="1116.7" y="1603.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1119.7" y="1614.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="1116.7" y="1587.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1119.7" y="1598.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="1116.7" y="1571.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1119.7" y="1582.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="1116.7" y="1555.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1119.7" y="1566.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="1116.7" y="1539.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1119.7" y="1550.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.schedulePutEntity (1 samples, 0.02%)</title><rect x="1116.9" y="1619.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1119.9" y="1630.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.02%)</title><rect x="1117.2" y="1635.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1120.2" y="1646.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="1117.2" y="1619.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1120.2" y="1630.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="1117.2" y="1603.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1120.2" y="1614.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="1117.2" y="1587.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1120.2" y="1598.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="1117.2" y="1571.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1120.2" y="1582.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.02%)</title><rect x="1117.5" y="1635.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1120.5" y="1646.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="1117.5" y="1619.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1120.5" y="1630.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.16%)</title><rect x="1117.8" y="1667.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1120.8" y="1678.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1118.0" y="1651.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1121.0" y="1662.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.07%)</title><rect x="1118.8" y="1651.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1121.8" y="1662.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.05%)</title><rect x="1119.1" y="1635.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1122.1" y="1646.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.05%)</title><rect x="1119.7" y="1667.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1122.7" y="1678.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="1119.7" y="1651.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1122.7" y="1662.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="1119.7" y="1635.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1122.7" y="1646.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.02%)</title><rect x="1119.7" y="1619.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1122.7" y="1630.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="1119.9" y="1635.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1122.9" y="1646.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="1119.9" y="1619.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1122.9" y="1630.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="1119.9" y="1603.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1122.9" y="1614.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.12%)</title><rect x="1120.2" y="1667.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1123.2" y="1678.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1 samples, 0.02%)</title><rect x="1120.8" y="1651.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1123.8" y="1662.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.05%)</title><rect x="1121.0" y="1651.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1124.0" y="1662.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (33 samples, 0.77%)</title><rect x="1121.6" y="1683.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1124.6" y="1694.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (33 samples, 0.77%)</title><rect x="1121.6" y="1667.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1124.6" y="1678.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.02%)</title><rect x="1121.9" y="1651.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1124.9" y="1662.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.16%)</title><rect x="1122.1" y="1651.0" width="1.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1125.1" y="1662.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.16%)</title><rect x="1122.1" y="1635.0" width="1.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1125.1" y="1646.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.12%)</title><rect x="1122.1" y="1619.0" width="1.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1125.1" y="1630.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (1 samples, 0.02%)</title><rect x="1122.1" y="1603.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1125.1" y="1614.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="1122.4" y="1603.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1125.4" y="1614.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.07%)</title><rect x="1122.7" y="1603.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1125.7" y="1614.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.02%)</title><rect x="1123.2" y="1587.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1126.2" y="1598.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="1123.5" y="1619.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1126.5" y="1630.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.02%)</title><rect x="1123.8" y="1619.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1126.8" y="1630.0"></text>
</g>
<g>
<title>__libc_recv (24 samples, 0.56%)</title><rect x="1124.0" y="1651.0" width="6.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1127.0" y="1662.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.46%)</title><rect x="1125.1" y="1635.0" width="5.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1128.1" y="1646.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.05%)</title><rect x="1125.1" y="1619.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1128.1" y="1630.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.42%)</title><rect x="1125.7" y="1619.0" width="4.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1128.7" y="1630.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (13 samples, 0.30%)</title><rect x="1127.1" y="1603.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1130.1" y="1614.0"></text>
</g>
<g>
<title>__sys_recvfrom (13 samples, 0.30%)</title><rect x="1127.1" y="1587.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1130.1" y="1598.0"></text>
</g>
<g>
<title>sock_recvmsg (10 samples, 0.23%)</title><rect x="1127.1" y="1571.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1130.1" y="1582.0"></text>
</g>
<g>
<title>inet6_recvmsg (9 samples, 0.21%)</title><rect x="1127.1" y="1555.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1130.1" y="1566.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.02%)</title><rect x="1127.1" y="1539.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1130.1" y="1550.0"></text>
</g>
<g>
<title>tcp_recvmsg (8 samples, 0.19%)</title><rect x="1127.3" y="1539.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1130.3" y="1550.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1128.2" y="1523.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1131.2" y="1534.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="1128.2" y="1507.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1131.2" y="1518.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="1128.2" y="1491.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1131.2" y="1502.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="1128.2" y="1475.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1131.2" y="1486.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.05%)</title><rect x="1128.4" y="1523.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1131.4" y="1534.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.05%)</title><rect x="1128.4" y="1507.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1131.4" y="1518.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.05%)</title><rect x="1128.4" y="1491.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1131.4" y="1502.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.05%)</title><rect x="1128.4" y="1475.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1131.4" y="1486.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="1128.7" y="1459.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1131.7" y="1470.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.05%)</title><rect x="1129.0" y="1523.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1132.0" y="1534.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="1129.0" y="1507.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1132.0" y="1518.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="1129.2" y="1507.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1132.2" y="1518.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="1129.2" y="1491.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1132.2" y="1502.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.02%)</title><rect x="1129.5" y="1555.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1132.5" y="1566.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="1129.5" y="1539.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1132.5" y="1550.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="1129.5" y="1523.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1132.5" y="1534.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.07%)</title><rect x="1129.8" y="1571.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1132.8" y="1582.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.05%)</title><rect x="1129.8" y="1555.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1132.8" y="1566.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="1129.8" y="1539.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1132.8" y="1550.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="1130.1" y="1523.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1133.1" y="1534.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="1130.3" y="1555.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1133.3" y="1566.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1130.6" y="1699.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1133.6" y="1710.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1130.6" y="1683.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1133.6" y="1694.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1130.6" y="1667.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1133.6" y="1678.0"></text>
</g>
<g>
<title>start_thread (215 samples, 4.99%)</title><rect x="1130.9" y="1731.0" width="58.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1133.9" y="1742.0">start_..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (215 samples, 4.99%)</title><rect x="1130.9" y="1715.0" width="58.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1133.9" y="1726.0">thread..</text>
</g>
<g>
<title>Thread::call_run() (215 samples, 4.99%)</title><rect x="1130.9" y="1699.0" width="58.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1133.9" y="1710.0">Thread..</text>
</g>
<g>
<title>GangWorker::loop() (146 samples, 3.39%)</title><rect x="1130.9" y="1683.0" width="39.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1133.9" y="1694.0">Gan..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (4 samples, 0.09%)</title><rect x="1130.9" y="1667.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1133.9" y="1678.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (4 samples, 0.09%)</title><rect x="1130.9" y="1651.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1133.9" y="1662.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (4 samples, 0.09%)</title><rect x="1130.9" y="1635.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1133.9" y="1646.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.154] (2 samples, 0.05%)</title><rect x="1130.9" y="1619.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1133.9" y="1630.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (1 samples, 0.02%)</title><rect x="1131.2" y="1603.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1134.2" y="1614.0"></text>
</g>
<g>
<title>G1CMObjArrayProcessor::process_obj(oopDesc*) (1 samples, 0.02%)</title><rect x="1131.2" y="1587.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1134.2" y="1598.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*, MemRegion) (1 samples, 0.02%)</title><rect x="1131.2" y="1571.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1134.2" y="1582.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (2 samples, 0.05%)</title><rect x="1131.4" y="1619.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1134.4" y="1630.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1131.4" y="1603.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1134.4" y="1614.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (1 samples, 0.02%)</title><rect x="1131.4" y="1587.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1134.4" y="1598.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1131.7" y="1603.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1134.7" y="1614.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (1 samples, 0.02%)</title><rect x="1131.7" y="1587.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1134.7" y="1598.0"></text>
</g>
<g>
<title>G1CMRemarkTask::work(unsigned int) (2 samples, 0.05%)</title><rect x="1132.0" y="1667.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1135.0" y="1678.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (1 samples, 0.02%)</title><rect x="1132.0" y="1651.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1135.0" y="1662.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="1132.0" y="1635.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1135.0" y="1646.0"></text>
</g>
<g>
<title>Threads::threads_do(ThreadClosure*) (1 samples, 0.02%)</title><rect x="1132.3" y="1651.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1135.3" y="1662.0"></text>
</g>
<g>
<title>G1RemarkThreadsClosure::do_thread(Thread*) (1 samples, 0.02%)</title><rect x="1132.3" y="1635.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1135.3" y="1646.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.64] (1 samples, 0.02%)</title><rect x="1132.3" y="1619.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1135.3" y="1630.0"></text>
</g>
<g>
<title>MarkingCodeBlobClosure::do_code_blob(CodeBlob*) (1 samples, 0.02%)</title><rect x="1132.3" y="1603.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1135.3" y="1614.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.02%)</title><rect x="1132.3" y="1587.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1135.3" y="1598.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (136 samples, 3.15%)</title><rect x="1132.5" y="1667.0" width="37.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1135.5" y="1678.0">G1P..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (61 samples, 1.41%)</title><rect x="1132.5" y="1651.0" width="16.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1135.5" y="1662.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (4 samples, 0.09%)</title><rect x="1132.5" y="1635.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1135.5" y="1646.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.07%)</title><rect x="1132.8" y="1619.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1135.8" y="1630.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1133.4" y="1603.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1136.4" y="1614.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (1 samples, 0.02%)</title><rect x="1133.6" y="1635.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1136.6" y="1646.0"></text>
</g>
<g>
<title>SpinPause (56 samples, 1.30%)</title><rect x="1133.9" y="1635.0" width="15.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1136.9" y="1646.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (70 samples, 1.62%)</title><rect x="1149.2" y="1651.0" width="19.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1152.2" y="1662.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (70 samples, 1.62%)</title><rect x="1149.2" y="1635.0" width="19.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1152.2" y="1646.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (70 samples, 1.62%)</title><rect x="1149.2" y="1619.0" width="19.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1152.2" y="1630.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (70 samples, 1.62%)</title><rect x="1149.2" y="1603.0" width="19.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1152.2" y="1614.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.02%)</title><rect x="1149.2" y="1587.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1152.2" y="1598.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (68 samples, 1.58%)</title><rect x="1149.5" y="1587.0" width="18.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1152.5" y="1598.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (45 samples, 1.04%)</title><rect x="1149.5" y="1571.0" width="12.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1152.5" y="1582.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (1 samples, 0.02%)</title><rect x="1153.6" y="1555.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1156.6" y="1566.0"></text>
</g>
<g>
<title>G1CardTable::mark_card_deferred(unsigned long) (2 samples, 0.05%)</title><rect x="1153.9" y="1555.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.9" y="1566.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (26 samples, 0.60%)</title><rect x="1154.4" y="1555.0" width="7.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1157.4" y="1566.0"></text>
</g>
<g>
<title>G1PLABAllocator::allocate_direct_or_new_plab(InCSetState, unsigned long, bool*) (1 samples, 0.02%)</title><rect x="1158.8" y="1539.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1161.8" y="1550.0"></text>
</g>
<g>
<title>G1Allocator::survivor_attempt_allocation(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="1158.8" y="1523.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1161.8" y="1534.0"></text>
</g>
<g>
<title>G1GCAllocRegion::retire(bool) (1 samples, 0.02%)</title><rect x="1158.8" y="1507.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1161.8" y="1518.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_gc_alloc_region(HeapRegion*, unsigned long, InCSetState) (1 samples, 0.02%)</title><rect x="1158.8" y="1491.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1161.8" y="1502.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1159.1" y="1539.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1162.1" y="1550.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1159.1" y="1523.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1162.1" y="1534.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1159.1" y="1507.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1162.1" y="1518.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (8 samples, 0.19%)</title><rect x="1159.4" y="1539.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1162.4" y="1550.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1161.5" y="1555.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1164.5" y="1566.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (23 samples, 0.53%)</title><rect x="1161.8" y="1571.0" width="6.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1164.8" y="1582.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (21 samples, 0.49%)</title><rect x="1161.8" y="1555.0" width="5.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1164.8" y="1566.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.02%)</title><rect x="1164.6" y="1539.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1167.6" y="1550.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.02%)</title><rect x="1164.6" y="1523.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1167.6" y="1534.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.02%)</title><rect x="1164.8" y="1539.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1167.8" y="1550.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (6 samples, 0.14%)</title><rect x="1165.1" y="1539.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1168.1" y="1550.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (3 samples, 0.07%)</title><rect x="1166.7" y="1539.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1169.7" y="1550.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (1 samples, 0.02%)</title><rect x="1167.3" y="1523.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1170.3" y="1534.0"></text>
</g>
<g>
<title>SparsePRT::add_card(int, int) (1 samples, 0.02%)</title><rect x="1167.3" y="1507.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1170.3" y="1518.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.02%)</title><rect x="1167.6" y="1555.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1170.6" y="1566.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1167.8" y="1555.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1170.8" y="1566.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (1 samples, 0.02%)</title><rect x="1168.1" y="1587.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1171.1" y="1598.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="1168.4" y="1651.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1171.4" y="1662.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.02%)</title><rect x="1168.4" y="1635.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1171.4" y="1646.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="1168.4" y="1619.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1171.4" y="1630.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (1 samples, 0.02%)</title><rect x="1168.4" y="1603.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1171.4" y="1614.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.02%)</title><rect x="1168.4" y="1587.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1171.4" y="1598.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (4 samples, 0.09%)</title><rect x="1168.7" y="1651.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1171.7" y="1662.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (3 samples, 0.07%)</title><rect x="1168.7" y="1635.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1171.7" y="1646.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (3 samples, 0.07%)</title><rect x="1168.7" y="1619.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1171.7" y="1630.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (2 samples, 0.05%)</title><rect x="1168.7" y="1603.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.7" y="1614.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.02%)</title><rect x="1168.7" y="1587.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1171.7" y="1598.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="1168.9" y="1587.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1171.9" y="1598.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.02%)</title><rect x="1168.9" y="1571.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.9" y="1582.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="1168.9" y="1555.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1171.9" y="1566.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="1168.9" y="1539.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.9" y="1550.0"></text>
</g>
<g>
<title>frame::entry_frame_is_first() const (1 samples, 0.02%)</title><rect x="1169.2" y="1603.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1172.2" y="1614.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (1 samples, 0.02%)</title><rect x="1169.5" y="1635.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.5" y="1646.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.02%)</title><rect x="1169.5" y="1619.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1172.5" y="1630.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (2 samples, 0.05%)</title><rect x="1169.7" y="1667.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1172.7" y="1678.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (2 samples, 0.05%)</title><rect x="1169.7" y="1651.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.7" y="1662.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.05%)</title><rect x="1169.7" y="1635.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1172.7" y="1646.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1169.7" y="1619.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1172.7" y="1630.0"></text>
</g>
<g>
<title>void G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.234] (1 samples, 0.02%)</title><rect x="1169.7" y="1603.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.7" y="1614.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1170.0" y="1619.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1173.0" y="1630.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (1 samples, 0.02%)</title><rect x="1170.0" y="1603.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1173.0" y="1614.0"></text>
</g>
<g>
<title>G1RedirtyLoggedCardsTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="1170.3" y="1667.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1173.3" y="1678.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::par_apply_closure_to_all_completed_buffers(CardTableEntryClosure*) (1 samples, 0.02%)</title><rect x="1170.3" y="1651.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.3" y="1662.0"></text>
</g>
<g>
<title>RedirtyLoggedCardTableEntryClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.02%)</title><rect x="1170.3" y="1635.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1173.3" y="1646.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="1170.6" y="1667.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.6" y="1678.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.02%)</title><rect x="1170.6" y="1651.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.6" y="1662.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.64] (1 samples, 0.02%)</title><rect x="1170.6" y="1635.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.6" y="1646.0"></text>
</g>
<g>
<title>StackFrameStream::StackFrameStream(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="1170.6" y="1619.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1173.6" y="1630.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="1170.6" y="1603.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.6" y="1614.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="1170.6" y="1587.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.6" y="1598.0"></text>
</g>
<g>
<title>JavaThread::run() (65 samples, 1.51%)</title><rect x="1170.8" y="1683.0" width="17.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.8" y="1694.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (65 samples, 1.51%)</title><rect x="1170.8" y="1667.0" width="17.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.8" y="1678.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (65 samples, 1.51%)</title><rect x="1170.8" y="1651.0" width="17.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1173.8" y="1662.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (64 samples, 1.48%)</title><rect x="1170.8" y="1635.0" width="17.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1173.8" y="1646.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (63 samples, 1.46%)</title><rect x="1170.8" y="1619.0" width="17.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1173.8" y="1630.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (63 samples, 1.46%)</title><rect x="1170.8" y="1603.0" width="17.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.8" y="1614.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (38 samples, 0.88%)</title><rect x="1170.8" y="1587.0" width="10.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1173.8" y="1598.0"></text>
</g>
<g>
<title>Compile::Output() (3 samples, 0.07%)</title><rect x="1170.8" y="1571.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.8" y="1582.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.30.so (1 samples, 0.02%)</title><rect x="1170.8" y="1555.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1173.8" y="1566.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (2 samples, 0.05%)</title><rect x="1171.1" y="1555.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.1" y="1566.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (2 samples, 0.05%)</title><rect x="1171.1" y="1539.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.1" y="1550.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (2 samples, 0.05%)</title><rect x="1171.1" y="1523.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1174.1" y="1534.0"></text>
</g>
<g>
<title>Matcher::match() (3 samples, 0.07%)</title><rect x="1171.7" y="1571.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.7" y="1582.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (3 samples, 0.07%)</title><rect x="1171.7" y="1555.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.7" y="1566.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.02%)</title><rect x="1171.7" y="1539.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.7" y="1550.0"></text>
</g>
<g>
<title>Matcher::collect_null_checks(Node*, Node*) (1 samples, 0.02%)</title><rect x="1171.9" y="1539.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1174.9" y="1550.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.02%)</title><rect x="1172.2" y="1539.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.2" y="1550.0"></text>
</g>
<g>
<title>Chunk::next_chop() (1 samples, 0.02%)</title><rect x="1172.2" y="1523.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1175.2" y="1534.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1172.2" y="1507.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1175.2" y="1518.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (1 samples, 0.02%)</title><rect x="1172.5" y="1571.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1175.5" y="1582.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (1 samples, 0.02%)</title><rect x="1172.5" y="1555.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.5" y="1566.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (3 samples, 0.07%)</title><rect x="1172.8" y="1571.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1175.8" y="1582.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (3 samples, 0.07%)</title><rect x="1172.8" y="1555.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.8" y="1566.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.02%)</title><rect x="1172.8" y="1539.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.8" y="1550.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (1 samples, 0.02%)</title><rect x="1173.0" y="1539.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.0" y="1550.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.02%)</title><rect x="1173.3" y="1539.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.3" y="1550.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (28 samples, 0.65%)</title><rect x="1173.6" y="1571.0" width="7.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.6" y="1582.0"></text>
</g>
<g>
<title>MachNode::bottom_type() const (1 samples, 0.02%)</title><rect x="1173.6" y="1555.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1176.6" y="1566.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.02%)</title><rect x="1173.9" y="1555.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1176.9" y="1566.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (2 samples, 0.05%)</title><rect x="1174.1" y="1555.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1177.1" y="1566.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1174.1" y="1539.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1177.1" y="1550.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (1 samples, 0.02%)</title><rect x="1174.4" y="1539.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1177.4" y="1550.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1174.4" y="1523.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.4" y="1534.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.02%)</title><rect x="1174.7" y="1555.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1177.7" y="1566.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (6 samples, 0.14%)</title><rect x="1174.9" y="1555.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1177.9" y="1566.0"></text>
</g>
<g>
<title>PhaseChaitin::check_for_high_pressure_transition_at_fatproj(unsigned int&amp;, unsigned int, LRG&amp;, PhaseChaitin::Pressure&amp;, int) (1 samples, 0.02%)</title><rect x="1175.5" y="1539.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1178.5" y="1550.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (3 samples, 0.07%)</title><rect x="1175.8" y="1539.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.8" y="1550.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (4 samples, 0.09%)</title><rect x="1176.6" y="1555.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1179.6" y="1566.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.02%)</title><rect x="1177.1" y="1539.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1180.1" y="1550.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.02%)</title><rect x="1177.4" y="1539.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.4" y="1550.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.87] (1 samples, 0.02%)</title><rect x="1177.7" y="1555.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.7" y="1566.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (1 samples, 0.02%)</title><rect x="1178.0" y="1555.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.0" y="1566.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (5 samples, 0.12%)</title><rect x="1178.2" y="1555.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.2" y="1566.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (5 samples, 0.12%)</title><rect x="1178.2" y="1539.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.2" y="1550.0"></text>
</g>
<g>
<title>MachCallJavaNode::in_RegMask(unsigned int) const (1 samples, 0.02%)</title><rect x="1179.1" y="1523.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1182.1" y="1534.0"></text>
</g>
<g>
<title>PhaseChaitin::yank_if_dead_recurse(Node*, Node*, Block*, Node_List*, Node_List*) [clone .part.44] (1 samples, 0.02%)</title><rect x="1179.3" y="1523.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.3" y="1534.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (3 samples, 0.07%)</title><rect x="1179.6" y="1555.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1182.6" y="1566.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (1 samples, 0.02%)</title><rect x="1179.6" y="1539.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.6" y="1550.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (1 samples, 0.02%)</title><rect x="1179.9" y="1539.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.9" y="1550.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (1 samples, 0.02%)</title><rect x="1180.1" y="1539.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.1" y="1550.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (1 samples, 0.02%)</title><rect x="1180.1" y="1523.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.1" y="1534.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.02%)</title><rect x="1180.4" y="1555.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.4" y="1566.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1180.4" y="1539.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.4" y="1550.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.05%)</title><rect x="1180.7" y="1555.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1183.7" y="1566.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (2 samples, 0.05%)</title><rect x="1180.7" y="1539.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.7" y="1550.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1181.0" y="1523.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.0" y="1534.0"></text>
</g>
<g>
<title>Compile::Optimize() (18 samples, 0.42%)</title><rect x="1181.2" y="1587.0" width="5.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.2" y="1598.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.256] (1 samples, 0.02%)</title><rect x="1181.2" y="1571.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.2" y="1582.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.02%)</title><rect x="1181.2" y="1555.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.2" y="1566.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.02%)</title><rect x="1181.2" y="1539.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.2" y="1550.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1181.2" y="1523.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.2" y="1534.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.138] (1 samples, 0.02%)</title><rect x="1181.2" y="1507.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.2" y="1518.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.2" y="1491.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.2" y="1502.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.2" y="1475.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.2" y="1486.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.2" y="1459.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.2" y="1470.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.2" y="1443.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.2" y="1454.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.2" y="1427.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.2" y="1438.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.2" y="1411.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.2" y="1422.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.2" y="1395.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.2" y="1406.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.2" y="1379.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.2" y="1390.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.2" y="1363.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.2" y="1374.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.2" y="1347.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.2" y="1358.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.2" y="1331.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.2" y="1342.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.2" y="1315.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.2" y="1326.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.2" y="1299.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.2" y="1310.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.131] (1 samples, 0.02%)</title><rect x="1181.2" y="1283.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.2" y="1294.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1181.2" y="1267.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.2" y="1278.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (12 samples, 0.28%)</title><rect x="1181.5" y="1571.0" width="3.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.5" y="1582.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.02%)</title><rect x="1181.5" y="1555.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.5" y="1566.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.02%)</title><rect x="1181.5" y="1539.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.5" y="1550.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (9 samples, 0.21%)</title><rect x="1181.8" y="1555.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.8" y="1566.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (6 samples, 0.14%)</title><rect x="1182.6" y="1539.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.6" y="1550.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (6 samples, 0.14%)</title><rect x="1182.6" y="1523.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.6" y="1534.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (2 samples, 0.05%)</title><rect x="1182.6" y="1507.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.6" y="1518.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.02%)</title><rect x="1182.9" y="1491.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.9" y="1502.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (4 samples, 0.09%)</title><rect x="1183.2" y="1507.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.2" y="1518.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.05%)</title><rect x="1184.3" y="1555.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.3" y="1566.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.05%)</title><rect x="1184.3" y="1539.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.3" y="1550.0"></text>
</g>
<g>
<title>ConvI2LNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1184.3" y="1523.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.3" y="1534.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.02%)</title><rect x="1184.3" y="1507.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.3" y="1518.0"></text>
</g>
<g>
<title>Node::destruct() (1 samples, 0.02%)</title><rect x="1184.3" y="1491.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.3" y="1502.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1184.5" y="1523.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.5" y="1534.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.07%)</title><rect x="1184.8" y="1571.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.8" y="1582.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.07%)</title><rect x="1184.8" y="1555.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.8" y="1566.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="1184.8" y="1539.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.8" y="1550.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (2 samples, 0.05%)</title><rect x="1185.1" y="1539.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.1" y="1550.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.138] (2 samples, 0.05%)</title><rect x="1185.1" y="1523.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.1" y="1534.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.05%)</title><rect x="1185.1" y="1507.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.1" y="1518.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.05%)</title><rect x="1185.1" y="1491.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.1" y="1502.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1185.1" y="1475.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.1" y="1486.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1185.1" y="1459.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.1" y="1470.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1185.1" y="1443.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.1" y="1454.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1185.1" y="1427.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.1" y="1438.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1185.1" y="1411.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.1" y="1422.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1185.1" y="1395.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.1" y="1406.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1185.1" y="1379.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.1" y="1390.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.131] (1 samples, 0.02%)</title><rect x="1185.1" y="1363.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.1" y="1374.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1185.1" y="1347.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.1" y="1358.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.131] (1 samples, 0.02%)</title><rect x="1185.3" y="1475.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.3" y="1486.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1185.3" y="1459.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.3" y="1470.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (2 samples, 0.05%)</title><rect x="1185.6" y="1571.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.6" y="1582.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.05%)</title><rect x="1185.6" y="1555.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.6" y="1566.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.05%)</title><rect x="1185.6" y="1539.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.6" y="1550.0"></text>
</g>
<g>
<title>StoreNode::hash() const (1 samples, 0.02%)</title><rect x="1185.6" y="1523.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.6" y="1534.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1185.9" y="1523.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.9" y="1534.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.16%)</title><rect x="1186.2" y="1587.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.2" y="1598.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.16%)</title><rect x="1186.2" y="1571.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.2" y="1582.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.16%)</title><rect x="1186.2" y="1555.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.2" y="1566.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.16%)</title><rect x="1186.2" y="1539.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.2" y="1550.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.16%)</title><rect x="1186.2" y="1523.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.2" y="1534.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.14%)</title><rect x="1186.2" y="1507.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.2" y="1518.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.12%)</title><rect x="1186.2" y="1491.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.2" y="1502.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.12%)</title><rect x="1186.2" y="1475.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.2" y="1486.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.12%)</title><rect x="1186.2" y="1459.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.2" y="1470.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.12%)</title><rect x="1186.2" y="1443.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.2" y="1454.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.12%)</title><rect x="1186.2" y="1427.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.2" y="1438.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.12%)</title><rect x="1186.2" y="1411.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.2" y="1422.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.09%)</title><rect x="1186.2" y="1395.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.2" y="1406.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.09%)</title><rect x="1186.2" y="1379.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.2" y="1390.0"></text>
</g>
<g>
<title>MergeMemNode::set_base_memory(Node*) (1 samples, 0.02%)</title><rect x="1186.2" y="1363.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.2" y="1374.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.07%)</title><rect x="1186.4" y="1363.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.4" y="1374.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.07%)</title><rect x="1186.4" y="1347.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.4" y="1358.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.07%)</title><rect x="1186.4" y="1331.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.4" y="1342.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.07%)</title><rect x="1186.4" y="1315.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.4" y="1326.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1186.4" y="1299.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.4" y="1310.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1186.4" y="1283.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.4" y="1294.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1186.4" y="1267.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.4" y="1278.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1186.4" y="1251.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.4" y="1262.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1186.4" y="1235.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.4" y="1246.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1186.4" y="1219.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.4" y="1230.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1186.4" y="1203.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.4" y="1214.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1186.4" y="1187.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.4" y="1198.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.02%)</title><rect x="1186.4" y="1171.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.4" y="1182.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1186.4" y="1155.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.4" y="1166.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1186.4" y="1139.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.4" y="1150.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1186.4" y="1123.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.4" y="1134.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1186.4" y="1107.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.4" y="1118.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1186.4" y="1091.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.4" y="1102.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1186.4" y="1075.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.4" y="1086.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.02%)</title><rect x="1186.4" y="1059.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.4" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.30.so (1 samples, 0.02%)</title><rect x="1186.4" y="1043.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1189.4" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.7" y="1299.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.7" y="1310.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.7" y="1283.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.7" y="1294.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.7" y="1267.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.7" y="1278.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.7" y="1251.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.7" y="1262.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.7" y="1235.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.7" y="1246.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.7" y="1219.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.7" y="1230.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.7" y="1203.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.7" y="1214.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.7" y="1187.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.7" y="1198.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.7" y="1171.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.7" y="1182.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.7" y="1155.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.7" y="1166.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.7" y="1139.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.7" y="1150.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.7" y="1123.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.7" y="1134.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.7" y="1107.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.7" y="1118.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.7" y="1091.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.7" y="1102.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.7" y="1075.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.7" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.7" y="1059.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.7" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.7" y="1043.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.7" y="1054.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.7" y="1027.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.7" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.7" y="1011.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.7" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.7" y="995.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.7" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.7" y="979.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.7" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.7" y="963.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.7" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.7" y="947.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.7" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.7" y="931.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.7" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.7" y="915.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.7" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.7" y="899.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.7" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.7" y="883.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.7" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.7" y="867.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.7" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.7" y="851.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.7" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.7" y="835.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.7" y="846.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.7" y="819.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.7" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.7" y="803.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.7" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.7" y="787.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.7" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.7" y="771.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.7" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.7" y="755.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.7" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.7" y="739.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.7" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.7" y="723.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.7" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.7" y="707.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.7" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.7" y="691.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.7" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.7" y="675.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.7" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.7" y="659.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.7" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.7" y="643.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.7" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.7" y="627.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.7" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.7" y="611.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.7" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.7" y="595.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.7" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.7" y="579.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.7" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.7" y="563.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.7" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.7" y="547.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.7" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.7" y="531.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.7" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.7" y="515.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.7" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.7" y="499.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.7" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.7" y="483.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.7" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.7" y="467.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.7" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.7" y="451.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.7" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.7" y="435.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.7" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.7" y="419.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.7" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.7" y="403.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.7" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.7" y="387.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.7" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.7" y="371.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.7" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.7" y="355.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.7" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.7" y="339.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.7" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.7" y="323.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.7" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.7" y="307.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.7" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.7" y="291.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.7" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.7" y="275.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.7" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.7" y="259.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.7" y="270.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.7" y="243.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.7" y="254.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.7" y="227.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.7" y="238.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.7" y="211.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.7" y="222.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.7" y="195.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.7" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.7" y="179.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.7" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.7" y="163.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.7" y="174.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.02%)</title><rect x="1186.7" y="147.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.7" y="158.0"></text>
</g>
<g>
<title>Parse::adjust_map_after_if(BoolTest::mask, Node*, float, Parse::Block*, Parse::Block*) (1 samples, 0.02%)</title><rect x="1186.7" y="131.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.7" y="142.0"></text>
</g>
<g>
<title>GraphKit::add_predicate(int) (1 samples, 0.02%)</title><rect x="1186.7" y="115.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.7" y="126.0"></text>
</g>
<g>
<title>GraphKit::add_predicate_impl(Deoptimization::DeoptReason, int) [clone .part.186] (1 samples, 0.02%)</title><rect x="1186.7" y="99.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.7" y="110.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.02%)</title><rect x="1186.7" y="83.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.7" y="94.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.02%)</title><rect x="1186.7" y="67.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.7" y="78.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.02%)</title><rect x="1186.7" y="51.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.7" y="62.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.02%)</title><rect x="1186.7" y="35.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.7" y="46.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.0" y="1299.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.0" y="1310.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.0" y="1283.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.0" y="1294.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.0" y="1267.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.0" y="1278.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.0" y="1251.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.0" y="1262.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.0" y="1235.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.0" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.0" y="1219.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.0" y="1230.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1187.0" y="1203.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.0" y="1214.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.0" y="1187.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.0" y="1198.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.0" y="1171.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.0" y="1182.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.0" y="1155.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.0" y="1166.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.0" y="1139.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.0" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.0" y="1123.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.0" y="1134.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1187.0" y="1107.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.0" y="1118.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.0" y="1091.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.0" y="1102.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.0" y="1075.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.0" y="1086.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.0" y="1059.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.0" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.0" y="1043.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.0" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.0" y="1027.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.0" y="1038.0"></text>
</g>
<g>
<title>Parse::do_ifnull(BoolTest::mask, Node*) (1 samples, 0.02%)</title><rect x="1187.0" y="1011.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.0" y="1022.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.02%)</title><rect x="1187.0" y="995.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.0" y="1006.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.02%)</title><rect x="1187.0" y="979.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.0" y="990.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.02%)</title><rect x="1187.0" y="963.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.0" y="974.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.02%)</title><rect x="1187.0" y="947.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.0" y="958.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (1 samples, 0.02%)</title><rect x="1187.0" y="931.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.0" y="942.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::BasicBlock(MethodLiveness*, int, int) (1 samples, 0.02%)</title><rect x="1187.0" y="915.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.0" y="926.0"></text>
</g>
<g>
<title>ArenaBitMap::ArenaBitMap(Arena*, unsigned long) (1 samples, 0.02%)</title><rect x="1187.0" y="899.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.0" y="910.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.3" y="1395.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.3" y="1406.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.3" y="1379.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.3" y="1390.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.3" y="1363.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.3" y="1374.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.3" y="1347.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.3" y="1358.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.3" y="1331.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.3" y="1342.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.3" y="1315.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.3" y="1326.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1187.3" y="1299.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.3" y="1310.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.3" y="1283.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.3" y="1294.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.3" y="1267.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.3" y="1278.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.3" y="1251.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.3" y="1262.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.3" y="1235.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.3" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.3" y="1219.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.3" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.3" y="1203.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.3" y="1214.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1187.3" y="1187.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.3" y="1198.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.3" y="1171.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.3" y="1182.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.3" y="1155.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.3" y="1166.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.3" y="1139.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.3" y="1150.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.3" y="1123.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.3" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.3" y="1107.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.3" y="1118.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1187.3" y="1091.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.3" y="1102.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.3" y="1075.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.3" y="1086.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.3" y="1059.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.3" y="1070.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.3" y="1043.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.3" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.3" y="1027.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.3" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.3" y="1011.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.3" y="1022.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1187.3" y="995.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.3" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.3" y="979.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.3" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.3" y="963.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.3" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.3" y="947.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.3" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.3" y="931.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.3" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.3" y="915.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.3" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1187.3" y="899.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.3" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.3" y="883.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.3" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.3" y="867.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.3" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.3" y="851.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.3" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.3" y="835.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.3" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.3" y="819.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.3" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1187.3" y="803.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.3" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.3" y="787.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.3" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.3" y="771.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.3" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.3" y="755.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.3" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.3" y="739.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.3" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.3" y="723.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.3" y="734.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1187.3" y="707.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.3" y="718.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1187.3" y="691.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.3" y="702.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1187.3" y="675.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.3" y="686.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1187.3" y="659.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.3" y="670.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1187.3" y="643.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.3" y="654.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1187.3" y="627.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.3" y="638.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool) (1 samples, 0.02%)</title><rect x="1187.3" y="611.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.3" y="622.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1187.3" y="595.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.3" y="606.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1187.3" y="579.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.3" y="590.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.5" y="1491.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.5" y="1502.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.5" y="1475.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.5" y="1486.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.5" y="1459.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.5" y="1470.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.5" y="1443.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.5" y="1454.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.5" y="1427.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.5" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.5" y="1411.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.5" y="1422.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1187.5" y="1395.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.5" y="1406.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.5" y="1379.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.5" y="1390.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.5" y="1363.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.5" y="1374.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.5" y="1347.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.5" y="1358.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.5" y="1331.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.5" y="1342.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.5" y="1315.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.5" y="1326.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1187.5" y="1299.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.5" y="1310.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1187.5" y="1283.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.5" y="1294.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1187.5" y="1267.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.5" y="1278.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1187.5" y="1251.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.5" y="1262.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1187.5" y="1235.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.5" y="1246.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1187.5" y="1219.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.5" y="1230.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1187.5" y="1203.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.5" y="1214.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1187.5" y="1187.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.5" y="1198.0"></text>
</g>
<g>
<title>PhaseValues::uncached_makecon(Type const*) (1 samples, 0.02%)</title><rect x="1187.5" y="1171.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.5" y="1182.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1187.8" y="1507.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.8" y="1518.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1187.8" y="1491.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.8" y="1502.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1187.8" y="1475.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.8" y="1486.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.02%)</title><rect x="1187.8" y="1459.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.8" y="1470.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.02%)</title><rect x="1187.8" y="1443.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.8" y="1454.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.02%)</title><rect x="1187.8" y="1427.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.8" y="1438.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.02%)</title><rect x="1187.8" y="1411.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.8" y="1422.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool) (1 samples, 0.02%)</title><rect x="1187.8" y="1395.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.8" y="1406.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1187.8" y="1379.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.8" y="1390.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1187.8" y="1363.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.8" y="1374.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.02%)</title><rect x="1187.8" y="1347.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.8" y="1358.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.02%)</title><rect x="1187.8" y="1331.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.8" y="1342.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.02%)</title><rect x="1188.1" y="1619.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.1" y="1630.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (1 samples, 0.02%)</title><rect x="1188.1" y="1603.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.1" y="1614.0"></text>
</g>
<g>
<title>Compilation::compile_method() (1 samples, 0.02%)</title><rect x="1188.1" y="1587.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.1" y="1598.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.02%)</title><rect x="1188.1" y="1571.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.1" y="1582.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (1 samples, 0.02%)</title><rect x="1188.1" y="1555.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.1" y="1566.0"></text>
</g>
<g>
<title>RangeCheckElimination::eliminate(IR*) (1 samples, 0.02%)</title><rect x="1188.1" y="1539.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.1" y="1550.0"></text>
</g>
<g>
<title>RangeCheckEliminator::RangeCheckEliminator(IR*) (1 samples, 0.02%)</title><rect x="1188.1" y="1523.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.1" y="1534.0"></text>
</g>
<g>
<title>RangeCheckEliminator::set_process_block_flags(BlockBegin*) (1 samples, 0.02%)</title><rect x="1188.1" y="1507.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.1" y="1518.0"></text>
</g>
<g>
<title>Instruction::as_AccessIndexed() (1 samples, 0.02%)</title><rect x="1188.1" y="1491.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.1" y="1502.0"></text>
</g>
<g>
<title>CompileBroker::possibly_add_compiler_threads() (1 samples, 0.02%)</title><rect x="1188.4" y="1635.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.4" y="1646.0"></text>
</g>
<g>
<title>sysinfo (1 samples, 0.02%)</title><rect x="1188.4" y="1619.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1191.4" y="1630.0"></text>
</g>
<g>
<title>VMThread::run() (4 samples, 0.09%)</title><rect x="1188.6" y="1683.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.6" y="1694.0"></text>
</g>
<g>
<title>VMThread::loop() (4 samples, 0.09%)</title><rect x="1188.6" y="1667.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.6" y="1678.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="1188.6" y="1651.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.6" y="1662.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.02%)</title><rect x="1188.9" y="1651.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.9" y="1662.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (2 samples, 0.05%)</title><rect x="1189.2" y="1651.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.2" y="1662.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.05%)</title><rect x="1189.2" y="1635.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.2" y="1646.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.05%)</title><rect x="1189.2" y="1619.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.2" y="1630.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.05%)</title><rect x="1189.2" y="1603.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.2" y="1614.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (2 samples, 0.05%)</title><rect x="1189.2" y="1587.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.2" y="1598.0"></text>
</g>
<g>
<title>DerivedPointerTable::update_pointers() (1 samples, 0.02%)</title><rect x="1189.2" y="1571.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.2" y="1582.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*) (1 samples, 0.02%)</title><rect x="1189.5" y="1571.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.5" y="1582.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.02%)</title><rect x="1189.5" y="1555.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.5" y="1566.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="1189.5" y="1539.0" width="0.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1192.5" y="1550.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1189.5" y="1523.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1192.5" y="1534.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1189.5" y="1507.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1192.5" y="1518.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1189.5" y="1491.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1192.5" y="1502.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1189.5" y="1475.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1192.5" y="1486.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="1189.5" y="1459.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1192.5" y="1470.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="1189.5" y="1443.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1192.5" y="1454.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1189.5" y="1427.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1192.5" y="1438.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1189.5" y="1411.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1192.5" y="1422.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1189.7" y="1731.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1192.7" y="1742.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1189.7" y="1715.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1192.7" y="1726.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1189.7" y="1699.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1192.7" y="1710.0"></text>
</g>
</g>
</svg>
