<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (259,906 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (219,441 samples, 84.43%)</title><rect x="10.0" y="947.0" width="996.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="958.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (219,410 samples, 84.42%)</title><rect x="10.1" y="931.0" width="996.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.1" y="942.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (219,410 samples, 84.42%)</title><rect x="10.1" y="915.0" width="996.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.1" y="926.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (131,172 samples, 50.47%)</title><rect x="10.1" y="899.0" width="595.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.1" y="910.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (121,330 samples, 46.68%)</title><rect x="10.1" y="883.0" width="550.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.1" y="894.0">java/util/concurrent/CompletableFuture.postComplete</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (121,287 samples, 46.67%)</title><rect x="10.1" y="867.0" width="550.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.1" y="878.0">java/util/concurrent/CompletableFuture$UniCompose.tryFire</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (437 samples, 0.17%)</title><rect x="10.1" y="851.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="13.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$427/237799779.apply (105 samples, 0.04%)</title><rect x="12.1" y="851.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (105 samples, 0.04%)</title><rect x="12.1" y="835.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="15.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (94 samples, 0.04%)</title><rect x="12.2" y="819.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="15.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$150/1603050069.apply (120,620 samples, 46.41%)</title><rect x="12.6" y="851.0" width="547.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.6" y="862.0">jdk/internal/net/http/MultiExchange$$Lambda$150/1603050069.apply</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (120,620 samples, 46.41%)</title><rect x="12.6" y="835.0" width="547.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.6" y="846.0">jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (120,620 samples, 46.41%)</title><rect x="12.6" y="819.0" width="547.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="15.6" y="830.0">jdk/internal/net/http/MultiExchange.responseAsyncImpl</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (763 samples, 0.29%)</title><rect x="12.6" y="803.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="15.6" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (763 samples, 0.29%)</title><rect x="12.6" y="787.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$446/989563096.get$Lambda (402 samples, 0.15%)</title><rect x="12.6" y="771.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.6" y="782.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$446 (402 samples, 0.15%)</title><rect x="12.6" y="755.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="15.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$449/843290145.get$Lambda (361 samples, 0.14%)</title><rect x="14.4" y="771.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.4" y="782.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$449 (361 samples, 0.14%)</title><rect x="14.4" y="755.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="17.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,192 samples, 0.46%)</title><rect x="16.1" y="803.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,192 samples, 0.46%)</title><rect x="16.1" y="787.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.1" y="798.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (675 samples, 0.26%)</title><rect x="16.1" y="771.0" width="3.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="19.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (516 samples, 0.20%)</title><rect x="19.1" y="771.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (516 samples, 0.20%)</title><rect x="19.1" y="755.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.1" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (516 samples, 0.20%)</title><rect x="19.1" y="739.0" width="2.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="22.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2,219 samples, 0.85%)</title><rect x="21.5" y="803.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="24.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2,219 samples, 0.85%)</title><rect x="21.5" y="787.0" width="10.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="24.5" y="798.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1,217 samples, 0.47%)</title><rect x="21.5" y="771.0" width="5.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="24.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,002 samples, 0.39%)</title><rect x="27.0" y="771.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,002 samples, 0.39%)</title><rect x="27.0" y="755.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.0" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,002 samples, 0.39%)</title><rect x="27.0" y="739.0" width="4.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="30.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (112,908 samples, 43.44%)</title><rect x="31.6" y="803.0" width="512.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="34.6" y="814.0">jdk/internal/net/http/Exchange.responseAsync</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (112,908 samples, 43.44%)</title><rect x="31.6" y="787.0" width="512.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.6" y="798.0">jdk/internal/net/http/Exchange.responseAsyncImpl</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (112,908 samples, 43.44%)</title><rect x="31.6" y="771.0" width="512.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.6" y="782.0">jdk/internal/net/http/Exchange.responseAsyncImpl0</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (943 samples, 0.36%)</title><rect x="31.6" y="755.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="34.6" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (943 samples, 0.36%)</title><rect x="31.6" y="739.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="34.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$158/1087713702.get$Lambda (264 samples, 0.10%)</title><rect x="31.6" y="723.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.6" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$158 (264 samples, 0.10%)</title><rect x="31.6" y="707.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="34.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$163/1625023506.get$Lambda (353 samples, 0.14%)</title><rect x="32.8" y="723.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="35.8" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$163 (353 samples, 0.14%)</title><rect x="32.8" y="707.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="35.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$352/1505209664.get$Lambda (326 samples, 0.13%)</title><rect x="34.4" y="723.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.4" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$352 (326 samples, 0.13%)</title><rect x="34.4" y="707.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="37.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (74,239 samples, 28.56%)</title><rect x="35.8" y="755.0" width="337.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="38.8" y="766.0">java/util/concurrent/CompletableFuture.handle</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (74,239 samples, 28.56%)</title><rect x="35.8" y="739.0" width="337.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="38.8" y="750.0">java/util/concurrent/CompletableFuture.uniHand..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (73,836 samples, 28.41%)</title><rect x="35.8" y="723.0" width="335.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="38.8" y="734.0">java/util/concurrent/CompletableFuture.uniHan..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$352/1505209664.apply (73,836 samples, 28.41%)</title><rect x="35.8" y="707.0" width="335.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="38.8" y="718.0">jdk/internal/net/http/Exchange$$Lambda$352/15..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (73,836 samples, 28.41%)</title><rect x="35.8" y="691.0" width="335.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="38.8" y="702.0">jdk/internal/net/http/Exchange.lambda$respons..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (73,836 samples, 28.41%)</title><rect x="35.8" y="675.0" width="335.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="38.8" y="686.0">jdk/internal/net/http/Exchange.checkFor407</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$163/1625023506.apply (73,836 samples, 28.41%)</title><rect x="35.8" y="659.0" width="335.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="38.8" y="670.0">jdk/internal/net/http/Exchange$$Lambda$163/16..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (73,836 samples, 28.41%)</title><rect x="35.8" y="643.0" width="335.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="38.8" y="654.0">jdk/internal/net/http/Exchange.lambda$respons..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (897 samples, 0.35%)</title><rect x="35.8" y="627.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="38.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (897 samples, 0.35%)</title><rect x="35.8" y="611.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="38.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$443/90862708.get$Lambda (897 samples, 0.35%)</title><rect x="35.8" y="595.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="38.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$443 (897 samples, 0.35%)</title><rect x="35.8" y="579.0" width="4.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="38.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3,221 samples, 1.24%)</title><rect x="39.9" y="627.0" width="14.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="42.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3,221 samples, 1.24%)</title><rect x="39.9" y="611.0" width="14.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="42.9" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (671 samples, 0.26%)</title><rect x="39.9" y="595.0" width="3.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="42.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,448 samples, 0.56%)</title><rect x="43.0" y="595.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$443/90862708.apply (1,448 samples, 0.56%)</title><rect x="43.0" y="579.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1,448 samples, 0.56%)</title><rect x="43.0" y="563.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="46.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,448 samples, 0.56%)</title><rect x="43.0" y="547.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$158/1087713702.apply (1,448 samples, 0.56%)</title><rect x="43.0" y="531.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1,448 samples, 0.56%)</title><rect x="43.0" y="515.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="46.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (157 samples, 0.06%)</title><rect x="43.1" y="499.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="46.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (157 samples, 0.06%)</title><rect x="43.1" y="483.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="46.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$527/52661102.apply (129 samples, 0.05%)</title><rect x="43.1" y="467.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="46.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (129 samples, 0.05%)</title><rect x="43.1" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="46.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (129 samples, 0.05%)</title><rect x="43.1" y="435.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="46.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (108 samples, 0.04%)</title><rect x="43.2" y="419.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (97 samples, 0.04%)</title><rect x="43.3" y="403.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (97 samples, 0.04%)</title><rect x="43.3" y="387.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="46.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (74 samples, 0.03%)</title><rect x="43.3" y="371.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="46.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (195 samples, 0.08%)</title><rect x="43.8" y="499.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="46.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (180 samples, 0.07%)</title><rect x="43.8" y="483.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (180 samples, 0.07%)</title><rect x="43.8" y="467.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (93 samples, 0.04%)</title><rect x="43.8" y="451.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="46.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (85 samples, 0.03%)</title><rect x="44.3" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (85 samples, 0.03%)</title><rect x="44.3" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (85 samples, 0.03%)</title><rect x="44.3" y="419.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="47.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1,072 samples, 0.41%)</title><rect x="44.7" y="499.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (496 samples, 0.19%)</title><rect x="44.8" y="483.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (496 samples, 0.19%)</title><rect x="44.8" y="467.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (496 samples, 0.19%)</title><rect x="44.8" y="451.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$507/1060480628.accept (71 samples, 0.03%)</title><rect x="44.8" y="435.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (71 samples, 0.03%)</title><rect x="44.8" y="419.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="47.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (71 samples, 0.03%)</title><rect x="44.8" y="403.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$522/1925782679.accept (307 samples, 0.12%)</title><rect x="45.1" y="435.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (307 samples, 0.12%)</title><rect x="45.1" y="419.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (307 samples, 0.12%)</title><rect x="45.1" y="403.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (307 samples, 0.12%)</title><rect x="45.1" y="387.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (307 samples, 0.12%)</title><rect x="45.1" y="371.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (307 samples, 0.12%)</title><rect x="45.1" y="355.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (307 samples, 0.12%)</title><rect x="45.1" y="339.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (307 samples, 0.12%)</title><rect x="45.1" y="323.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="48.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (307 samples, 0.12%)</title><rect x="45.1" y="307.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="48.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (307 samples, 0.12%)</title><rect x="45.1" y="291.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (65 samples, 0.03%)</title><rect x="45.1" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (65 samples, 0.03%)</title><rect x="45.1" y="259.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (242 samples, 0.09%)</title><rect x="45.4" y="275.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (242 samples, 0.09%)</title><rect x="45.4" y="259.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (230 samples, 0.09%)</title><rect x="45.5" y="243.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="48.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (126 samples, 0.05%)</title><rect x="45.5" y="227.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="48.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (104 samples, 0.04%)</title><rect x="46.1" y="227.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (75 samples, 0.03%)</title><rect x="46.2" y="211.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="49.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (75 samples, 0.03%)</title><rect x="46.2" y="195.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (75 samples, 0.03%)</title><rect x="46.2" y="179.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="49.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (75 samples, 0.03%)</title><rect x="46.2" y="163.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="49.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (75 samples, 0.03%)</title><rect x="46.2" y="147.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (75 samples, 0.03%)</title><rect x="46.2" y="131.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (59 samples, 0.02%)</title><rect x="46.3" y="115.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (59 samples, 0.02%)</title><rect x="46.3" y="99.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.3" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (59 samples, 0.02%)</title><rect x="46.3" y="83.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.3" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (59 samples, 0.02%)</title><rect x="46.3" y="67.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.3" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (59 samples, 0.02%)</title><rect x="46.3" y="51.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.3" y="62.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (59 samples, 0.02%)</title><rect x="46.3" y="35.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.3" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (118 samples, 0.05%)</title><rect x="46.5" y="435.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="49.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (118 samples, 0.05%)</title><rect x="46.5" y="419.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="49.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (118 samples, 0.05%)</title><rect x="46.5" y="403.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="49.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (543 samples, 0.21%)</title><rect x="47.1" y="483.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="50.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (448 samples, 0.17%)</title><rect x="47.5" y="467.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="50.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (265 samples, 0.10%)</title><rect x="47.6" y="451.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="50.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (97 samples, 0.04%)</title><rect x="47.8" y="435.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="50.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (138 samples, 0.05%)</title><rect x="48.2" y="435.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (154 samples, 0.06%)</title><rect x="48.8" y="451.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.8" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (63 samples, 0.02%)</title><rect x="49.0" y="435.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (62 samples, 0.02%)</title><rect x="49.2" y="435.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (62 samples, 0.02%)</title><rect x="49.2" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="52.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (62 samples, 0.02%)</title><rect x="49.2" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="52.2" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (62 samples, 0.02%)</title><rect x="49.2" y="387.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="52.2" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (62 samples, 0.02%)</title><rect x="49.2" y="371.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,099 samples, 0.42%)</title><rect x="49.5" y="595.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,099 samples, 0.42%)</title><rect x="49.5" y="579.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="52.5" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,099 samples, 0.42%)</title><rect x="49.5" y="563.0" width="5.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="52.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,350 samples, 0.52%)</title><rect x="54.5" y="627.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="57.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,350 samples, 0.52%)</title><rect x="54.5" y="611.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="57.5" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (651 samples, 0.25%)</title><rect x="54.5" y="595.0" width="3.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="57.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (656 samples, 0.25%)</title><rect x="57.7" y="595.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (656 samples, 0.25%)</title><rect x="57.7" y="579.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="60.7" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (656 samples, 0.25%)</title><rect x="57.7" y="563.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="60.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (68,368 samples, 26.30%)</title><rect x="60.7" y="627.0" width="310.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.7" y="638.0">jdk/internal/net/http/Http1Exchange.sendHe..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (797 samples, 0.31%)</title><rect x="60.7" y="611.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (797 samples, 0.31%)</title><rect x="60.7" y="595.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="63.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$427/237799779.get$Lambda (324 samples, 0.12%)</title><rect x="60.7" y="579.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.7" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$427 (324 samples, 0.12%)</title><rect x="60.7" y="563.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="63.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$438/1122744859.get$Lambda (473 samples, 0.18%)</title><rect x="62.1" y="579.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$438 (473 samples, 0.18%)</title><rect x="62.1" y="563.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="65.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (58,901 samples, 22.66%)</title><rect x="64.3" y="611.0" width="267.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.3" y="622.0">java/util/concurrent/CompletableFutu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (58,901 samples, 22.66%)</title><rect x="64.3" y="595.0" width="267.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="67.3" y="606.0">java/util/concurrent/CompletableFutu..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1,062 samples, 0.41%)</title><rect x="64.3" y="579.0" width="4.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="67.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$427/237799779.apply (56,116 samples, 21.59%)</title><rect x="69.1" y="579.0" width="254.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="72.1" y="590.0">jdk/internal/net/http/Http1Exchang..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (56,116 samples, 21.59%)</title><rect x="69.1" y="563.0" width="254.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.1" y="574.0">jdk/internal/net/http/Http1Exchang..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (203 samples, 0.08%)</title><rect x="69.1" y="547.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (203 samples, 0.08%)</title><rect x="69.1" y="531.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="72.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$469/399554666.get$Lambda (203 samples, 0.08%)</title><rect x="69.1" y="515.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="72.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$469 (203 samples, 0.08%)</title><rect x="69.1" y="499.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="72.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,085 samples, 0.42%)</title><rect x="70.1" y="547.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="73.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,085 samples, 0.42%)</title><rect x="70.1" y="531.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (586 samples, 0.23%)</title><rect x="70.1" y="515.0" width="2.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="73.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (499 samples, 0.19%)</title><rect x="72.7" y="515.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="75.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (499 samples, 0.19%)</title><rect x="72.7" y="499.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="75.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (499 samples, 0.19%)</title><rect x="72.7" y="483.0" width="2.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="75.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (501 samples, 0.19%)</title><rect x="75.0" y="547.0" width="2.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="78.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2,043 samples, 0.79%)</title><rect x="77.3" y="547.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (539 samples, 0.21%)</title><rect x="77.3" y="531.0" width="2.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="80.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1,504 samples, 0.58%)</title><rect x="79.7" y="531.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (931 samples, 0.36%)</title><rect x="79.7" y="515.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="82.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (931 samples, 0.36%)</title><rect x="79.7" y="499.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="82.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (931 samples, 0.36%)</title><rect x="79.7" y="483.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (931 samples, 0.36%)</title><rect x="79.7" y="467.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.7" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (931 samples, 0.36%)</title><rect x="79.7" y="451.0" width="4.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="82.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (573 samples, 0.22%)</title><rect x="83.9" y="515.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="86.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (573 samples, 0.22%)</title><rect x="83.9" y="499.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (573 samples, 0.22%)</title><rect x="83.9" y="483.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="86.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (573 samples, 0.22%)</title><rect x="83.9" y="467.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="86.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (573 samples, 0.22%)</title><rect x="83.9" y="451.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="86.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (573 samples, 0.22%)</title><rect x="83.9" y="435.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="86.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (238 samples, 0.09%)</title><rect x="83.9" y="419.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="86.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (58 samples, 0.02%)</title><rect x="83.9" y="403.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="86.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (58 samples, 0.02%)</title><rect x="83.9" y="387.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$499/1958732976.get$Lambda (58 samples, 0.02%)</title><rect x="83.9" y="371.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$499 (58 samples, 0.02%)</title><rect x="83.9" y="355.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="86.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (180 samples, 0.07%)</title><rect x="84.2" y="403.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.2" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (180 samples, 0.07%)</title><rect x="84.2" y="387.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="87.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (335 samples, 0.13%)</title><rect x="85.0" y="419.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="88.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (335 samples, 0.13%)</title><rect x="85.0" y="403.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (335 samples, 0.13%)</title><rect x="85.0" y="387.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (335 samples, 0.13%)</title><rect x="85.0" y="371.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="88.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (335 samples, 0.13%)</title><rect x="85.0" y="355.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="88.0" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (335 samples, 0.13%)</title><rect x="85.0" y="339.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="88.0" y="350.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (122 samples, 0.05%)</title><rect x="85.0" y="323.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="88.0" y="334.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (122 samples, 0.05%)</title><rect x="85.0" y="307.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="88.0" y="318.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (213 samples, 0.08%)</title><rect x="85.6" y="323.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="88.6" y="334.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (213 samples, 0.08%)</title><rect x="85.6" y="307.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="88.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (1,309 samples, 0.50%)</title><rect x="86.5" y="547.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="89.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1,309 samples, 0.50%)</title><rect x="86.5" y="531.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="89.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (387 samples, 0.15%)</title><rect x="86.5" y="515.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="89.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (387 samples, 0.15%)</title><rect x="86.5" y="499.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="89.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (387 samples, 0.15%)</title><rect x="86.5" y="483.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="89.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (387 samples, 0.15%)</title><rect x="86.5" y="467.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="89.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (922 samples, 0.35%)</title><rect x="88.3" y="515.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="91.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (922 samples, 0.35%)</title><rect x="88.3" y="499.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (667 samples, 0.26%)</title><rect x="88.3" y="483.0" width="3.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="91.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (254 samples, 0.10%)</title><rect x="91.3" y="483.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="94.3" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (254 samples, 0.10%)</title><rect x="91.3" y="467.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="94.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (50,975 samples, 19.61%)</title><rect x="92.5" y="547.0" width="231.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="95.5" y="558.0">jdk/internal/net/http/Http1Requ..</text>
</g>
<g>
<title>java.lang.StringBuilder (342 samples, 0.13%)</title><rect x="92.5" y="531.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="95.5" y="542.0"></text>
</g>
<g>
<title>java/lang/Long.toString (861 samples, 0.33%)</title><rect x="94.0" y="531.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.0" y="542.0"></text>
</g>
<g>
<title>byte[] (459 samples, 0.18%)</title><rect x="94.0" y="515.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="97.0" y="526.0"></text>
</g>
<g>
<title>java.lang.String (402 samples, 0.15%)</title><rect x="96.1" y="515.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="99.1" y="526.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (6,941 samples, 2.67%)</title><rect x="97.9" y="531.0" width="31.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="100.9" y="542.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (6,941 samples, 2.67%)</title><rect x="97.9" y="515.0" width="31.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="100.9" y="526.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (6,941 samples, 2.67%)</title><rect x="97.9" y="499.0" width="31.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.9" y="510.0">ja..</text>
</g>
<g>
<title>byte[] (2,819 samples, 1.08%)</title><rect x="97.9" y="483.0" width="12.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="100.9" y="494.0"></text>
</g>
<g>
<title>byte[] (4,122 samples, 1.59%)</title><rect x="110.7" y="483.0" width="18.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="113.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1,403 samples, 0.54%)</title><rect x="129.4" y="531.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="132.4" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1,403 samples, 0.54%)</title><rect x="129.4" y="515.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.4" y="526.0"></text>
</g>
<g>
<title>byte[] (1,243 samples, 0.48%)</title><rect x="129.4" y="499.0" width="5.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="132.4" y="510.0"></text>
</g>
<g>
<title>byte[] (160 samples, 0.06%)</title><rect x="135.1" y="499.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="138.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (5,471 samples, 2.10%)</title><rect x="135.8" y="531.0" width="24.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.8" y="542.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5,471 samples, 2.10%)</title><rect x="135.8" y="515.0" width="24.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.8" y="526.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5,471 samples, 2.10%)</title><rect x="135.8" y="499.0" width="24.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.8" y="510.0">j..</text>
</g>
<g>
<title>byte[] (3,066 samples, 1.18%)</title><rect x="135.8" y="483.0" width="13.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="138.8" y="494.0"></text>
</g>
<g>
<title>byte[] (2,405 samples, 0.93%)</title><rect x="149.7" y="483.0" width="11.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="152.7" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (844 samples, 0.32%)</title><rect x="160.7" y="531.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="163.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (844 samples, 0.32%)</title><rect x="160.7" y="515.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="163.7" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (844 samples, 0.32%)</title><rect x="160.7" y="499.0" width="3.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="163.7" y="510.0"></text>
</g>
<g>
<title>java/util/List.of (514 samples, 0.20%)</title><rect x="164.5" y="531.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="167.5" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (514 samples, 0.20%)</title><rect x="164.5" y="515.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="167.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (29,140 samples, 11.21%)</title><rect x="166.8" y="531.0" width="132.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="169.8" y="542.0">jdk/internal/net..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (440 samples, 0.17%)</title><rect x="166.8" y="515.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="169.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (440 samples, 0.17%)</title><rect x="166.8" y="499.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="169.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (440 samples, 0.17%)</title><rect x="166.8" y="483.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="169.8" y="494.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$479/1948513388.get$Lambda (440 samples, 0.17%)</title><rect x="166.8" y="467.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="169.8" y="478.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$479 (440 samples, 0.17%)</title><rect x="166.8" y="451.0" width="2.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="169.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (15,767 samples, 6.07%)</title><rect x="168.8" y="515.0" width="71.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.8" y="526.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (7,555 samples, 2.91%)</title><rect x="168.8" y="499.0" width="34.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="171.8" y="510.0">ja..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7,555 samples, 2.91%)</title><rect x="168.8" y="483.0" width="34.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="171.8" y="494.0">ja..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (7,555 samples, 2.91%)</title><rect x="168.8" y="467.0" width="34.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="171.8" y="478.0">ja..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (7,555 samples, 2.91%)</title><rect x="168.8" y="451.0" width="34.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="171.8" y="462.0">ja..</text>
</g>
<g>
<title>byte[] (4,394 samples, 1.69%)</title><rect x="168.8" y="435.0" width="20.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="171.8" y="446.0"></text>
</g>
<g>
<title>byte[] (3,161 samples, 1.22%)</title><rect x="188.8" y="435.0" width="14.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="191.8" y="446.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (1,307 samples, 0.50%)</title><rect x="203.1" y="499.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="206.1" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (1,307 samples, 0.50%)</title><rect x="203.1" y="483.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.1" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1,307 samples, 0.50%)</title><rect x="203.1" y="467.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="206.1" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (1,307 samples, 0.50%)</title><rect x="203.1" y="451.0" width="6.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="206.1" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (1,119 samples, 0.43%)</title><rect x="209.1" y="499.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="212.1" y="510.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (550 samples, 0.21%)</title><rect x="209.1" y="483.0" width="2.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="212.1" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (569 samples, 0.22%)</title><rect x="211.5" y="483.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="214.5" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (569 samples, 0.22%)</title><rect x="211.5" y="467.0" width="2.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="214.5" y="478.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$479/1948513388.test (5,786 samples, 2.23%)</title><rect x="214.1" y="499.0" width="26.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="217.1" y="510.0">j..</text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (5,786 samples, 2.23%)</title><rect x="214.1" y="483.0" width="26.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="217.1" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$94/2068598972.test (5,786 samples, 2.23%)</title><rect x="214.1" y="467.0" width="26.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="217.1" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (5,786 samples, 2.23%)</title><rect x="214.1" y="451.0" width="26.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="217.1" y="462.0">j..</text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$83/477376212.test (5,786 samples, 2.23%)</title><rect x="214.1" y="435.0" width="26.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="217.1" y="446.0">j..</text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (5,786 samples, 2.23%)</title><rect x="214.1" y="419.0" width="26.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="217.1" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1072377306.test (5,786 samples, 2.23%)</title><rect x="214.1" y="403.0" width="26.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="217.1" y="414.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (5,786 samples, 2.23%)</title><rect x="214.1" y="387.0" width="26.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="217.1" y="398.0">j..</text>
</g>
<g>
<title>java/lang/String.substring (5,786 samples, 2.23%)</title><rect x="214.1" y="371.0" width="26.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="217.1" y="382.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5,786 samples, 2.23%)</title><rect x="214.1" y="355.0" width="26.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="217.1" y="366.0">j..</text>
</g>
<g>
<title>java.lang.String (2,968 samples, 1.14%)</title><rect x="214.1" y="339.0" width="13.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="217.1" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,818 samples, 1.08%)</title><rect x="227.6" y="339.0" width="12.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.6" y="350.0"></text>
</g>
<g>
<title>byte[] (2,818 samples, 1.08%)</title><rect x="227.6" y="323.0" width="12.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="230.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (12,933 samples, 4.98%)</title><rect x="240.4" y="515.0" width="58.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="243.4" y="526.0">jdk/in..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (12,933 samples, 4.98%)</title><rect x="240.4" y="499.0" width="58.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="243.4" y="510.0">java/n..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (12,933 samples, 4.98%)</title><rect x="240.4" y="483.0" width="58.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="243.4" y="494.0">java/n..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (220 samples, 0.08%)</title><rect x="240.4" y="467.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="243.4" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (396 samples, 0.15%)</title><rect x="241.4" y="467.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="244.4" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (716 samples, 0.28%)</title><rect x="243.2" y="467.0" width="3.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="246.2" y="478.0"></text>
</g>
<g>
<title>java.util.TreeSet (362 samples, 0.14%)</title><rect x="246.4" y="467.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="249.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (517 samples, 0.20%)</title><rect x="248.1" y="467.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="251.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (517 samples, 0.20%)</title><rect x="248.1" y="451.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.1" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.get$Lambda (517 samples, 0.20%)</title><rect x="248.1" y="435.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="251.1" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$139 (517 samples, 0.20%)</title><rect x="248.1" y="419.0" width="2.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="251.1" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (424 samples, 0.16%)</title><rect x="250.4" y="467.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="253.4" y="478.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (424 samples, 0.16%)</title><rect x="250.4" y="451.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="253.4" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (9,529 samples, 3.67%)</title><rect x="252.4" y="467.0" width="43.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="255.4" y="478.0">java..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.accept (9,529 samples, 3.67%)</title><rect x="252.4" y="451.0" width="43.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="255.4" y="462.0">java..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (9,529 samples, 3.67%)</title><rect x="252.4" y="435.0" width="43.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="255.4" y="446.0">java..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (961 samples, 0.37%)</title><rect x="252.4" y="419.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="255.4" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.accept (961 samples, 0.37%)</title><rect x="252.4" y="403.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="255.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (961 samples, 0.37%)</title><rect x="252.4" y="387.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="255.4" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (961 samples, 0.37%)</title><rect x="252.4" y="371.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="255.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (961 samples, 0.37%)</title><rect x="252.4" y="355.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="255.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (961 samples, 0.37%)</title><rect x="252.4" y="339.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="255.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (961 samples, 0.37%)</title><rect x="252.4" y="323.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="255.4" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (961 samples, 0.37%)</title><rect x="252.4" y="307.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="255.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (956 samples, 0.37%)</title><rect x="252.4" y="291.0" width="4.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="255.4" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (4,617 samples, 1.78%)</title><rect x="256.7" y="419.0" width="21.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="259.7" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (4,617 samples, 1.78%)</title><rect x="256.7" y="403.0" width="21.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="259.7" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2,304 samples, 0.89%)</title><rect x="256.7" y="387.0" width="10.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="259.7" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,304 samples, 0.89%)</title><rect x="256.7" y="371.0" width="10.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="259.7" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,304 samples, 0.89%)</title><rect x="256.7" y="355.0" width="10.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="259.7" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (2,313 samples, 0.89%)</title><rect x="267.2" y="387.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="270.2" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2,313 samples, 0.89%)</title><rect x="267.2" y="371.0" width="10.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="270.2" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3,951 samples, 1.52%)</title><rect x="277.7" y="419.0" width="17.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="280.7" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3,951 samples, 1.52%)</title><rect x="277.7" y="403.0" width="17.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="280.7" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (769 samples, 0.30%)</title><rect x="295.6" y="467.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="298.6" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (769 samples, 0.30%)</title><rect x="295.6" y="451.0" width="3.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="298.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (1,494 samples, 0.57%)</title><rect x="299.1" y="531.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="302.1" y="542.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (438 samples, 0.17%)</title><rect x="299.1" y="515.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="302.1" y="526.0"></text>
</g>
<g>
<title>byte[] (438 samples, 0.17%)</title><rect x="299.1" y="499.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="302.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,056 samples, 0.41%)</title><rect x="301.1" y="515.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="304.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1,056 samples, 0.41%)</title><rect x="301.1" y="499.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="304.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1806431167.invoke (1,056 samples, 0.41%)</title><rect x="301.1" y="483.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="304.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,056 samples, 0.41%)</title><rect x="301.1" y="467.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="304.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (557 samples, 0.21%)</title><rect x="301.1" y="451.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="304.1" y="462.0"></text>
</g>
<g>
<title>java.lang.String (557 samples, 0.21%)</title><rect x="301.1" y="435.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="304.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (499 samples, 0.19%)</title><rect x="303.6" y="451.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="306.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (499 samples, 0.19%)</title><rect x="303.6" y="435.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="306.6" y="446.0"></text>
</g>
<g>
<title>byte[] (499 samples, 0.19%)</title><rect x="303.6" y="419.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="306.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (1,009 samples, 0.39%)</title><rect x="305.9" y="531.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="308.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (1,009 samples, 0.39%)</title><rect x="305.9" y="515.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,009 samples, 0.39%)</title><rect x="305.9" y="499.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1,009 samples, 0.39%)</title><rect x="305.9" y="483.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1806431167.invoke (1,009 samples, 0.39%)</title><rect x="305.9" y="467.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="308.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,009 samples, 0.39%)</title><rect x="305.9" y="451.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (353 samples, 0.14%)</title><rect x="305.9" y="435.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="308.9" y="446.0"></text>
</g>
<g>
<title>java.lang.String (353 samples, 0.14%)</title><rect x="305.9" y="419.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="308.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (656 samples, 0.25%)</title><rect x="307.5" y="435.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="310.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (656 samples, 0.25%)</title><rect x="307.5" y="419.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="310.5" y="430.0"></text>
</g>
<g>
<title>byte[] (656 samples, 0.25%)</title><rect x="307.5" y="403.0" width="3.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="310.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2,956 samples, 1.14%)</title><rect x="310.5" y="531.0" width="13.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="313.5" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (899 samples, 0.35%)</title><rect x="310.5" y="515.0" width="4.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="313.5" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (799 samples, 0.31%)</title><rect x="314.6" y="515.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="317.6" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (799 samples, 0.31%)</title><rect x="314.6" y="499.0" width="3.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="317.6" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,258 samples, 0.48%)</title><rect x="318.2" y="515.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="321.2" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,258 samples, 0.48%)</title><rect x="318.2" y="499.0" width="5.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="321.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,717 samples, 0.66%)</title><rect x="323.9" y="579.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="326.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1,717 samples, 0.66%)</title><rect x="323.9" y="563.0" width="7.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="326.9" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,717 samples, 0.66%)</title><rect x="323.9" y="547.0" width="7.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="326.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (1,234 samples, 0.47%)</title><rect x="331.7" y="611.0" width="5.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="334.7" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (296 samples, 0.11%)</title><rect x="337.3" y="611.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="340.3" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (540 samples, 0.21%)</title><rect x="338.6" y="611.0" width="2.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="341.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (6,598 samples, 2.54%)</title><rect x="341.1" y="611.0" width="30.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="344.1" y="622.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (569 samples, 0.22%)</title><rect x="341.1" y="595.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="344.1" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (569 samples, 0.22%)</title><rect x="341.1" y="579.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="344.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$376/1981716426.get$Lambda (285 samples, 0.11%)</title><rect x="341.1" y="563.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="344.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$376 (285 samples, 0.11%)</title><rect x="341.1" y="547.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="344.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$381/199945677.get$Lambda (284 samples, 0.11%)</title><rect x="342.4" y="563.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="345.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$381 (284 samples, 0.11%)</title><rect x="342.4" y="547.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="345.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (659 samples, 0.25%)</title><rect x="343.7" y="595.0" width="3.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="346.7" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (783 samples, 0.30%)</title><rect x="346.7" y="595.0" width="3.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="349.7" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (648 samples, 0.25%)</title><rect x="350.2" y="595.0" width="3.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="353.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1,844 samples, 0.71%)</title><rect x="353.2" y="595.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="356.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,844 samples, 0.71%)</title><rect x="353.2" y="579.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="356.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,844 samples, 0.71%)</title><rect x="353.2" y="563.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="356.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,844 samples, 0.71%)</title><rect x="353.2" y="547.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="356.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,844 samples, 0.71%)</title><rect x="353.2" y="531.0" width="8.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="356.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,844 samples, 0.71%)</title><rect x="353.2" y="515.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="356.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.run (1,844 samples, 0.71%)</title><rect x="353.2" y="499.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="356.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,844 samples, 0.71%)</title><rect x="353.2" y="483.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="356.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1,844 samples, 0.71%)</title><rect x="353.2" y="467.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="356.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (680 samples, 0.26%)</title><rect x="353.2" y="451.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="356.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (680 samples, 0.26%)</title><rect x="353.2" y="435.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="356.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$386/1151365282.get$Lambda (352 samples, 0.14%)</title><rect x="353.2" y="419.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="356.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$386 (352 samples, 0.14%)</title><rect x="353.2" y="403.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="356.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$394/574621129.get$Lambda (328 samples, 0.13%)</title><rect x="354.8" y="419.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="357.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$394 (328 samples, 0.13%)</title><rect x="354.8" y="403.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="357.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (529 samples, 0.20%)</title><rect x="356.3" y="451.0" width="2.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="359.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (635 samples, 0.24%)</title><rect x="358.7" y="451.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="361.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (635 samples, 0.24%)</title><rect x="358.7" y="435.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="361.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (246 samples, 0.09%)</title><rect x="358.7" y="419.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="361.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (389 samples, 0.15%)</title><rect x="359.8" y="419.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="362.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (389 samples, 0.15%)</title><rect x="359.8" y="403.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="362.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (1,609 samples, 0.62%)</title><rect x="361.5" y="595.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="364.5" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (344 samples, 0.13%)</title><rect x="361.5" y="579.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="364.5" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap (689 samples, 0.27%)</title><rect x="363.1" y="579.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="366.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (576 samples, 0.22%)</title><rect x="366.2" y="579.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="369.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (576 samples, 0.22%)</title><rect x="366.2" y="563.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="369.2" y="574.0"></text>
</g>
<g>
<title>byte[] (576 samples, 0.22%)</title><rect x="366.2" y="547.0" width="2.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="369.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (486 samples, 0.19%)</title><rect x="368.8" y="595.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="371.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (486 samples, 0.19%)</title><rect x="368.8" y="579.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="371.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (403 samples, 0.16%)</title><rect x="371.1" y="723.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="374.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (403 samples, 0.16%)</title><rect x="371.1" y="707.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="374.1" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (403 samples, 0.16%)</title><rect x="371.1" y="691.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="374.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,007 samples, 0.39%)</title><rect x="372.9" y="755.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="375.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,007 samples, 0.39%)</title><rect x="372.9" y="739.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="375.9" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (506 samples, 0.19%)</title><rect x="372.9" y="723.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="375.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (501 samples, 0.19%)</title><rect x="375.2" y="723.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="378.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (501 samples, 0.19%)</title><rect x="375.2" y="707.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="378.2" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (501 samples, 0.19%)</title><rect x="375.2" y="691.0" width="2.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="378.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (36,719 samples, 14.13%)</title><rect x="377.5" y="755.0" width="166.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="380.5" y="766.0">jdk/internal/net/http..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (627 samples, 0.24%)</title><rect x="377.5" y="739.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="380.5" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (627 samples, 0.24%)</title><rect x="377.5" y="723.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="380.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$293/1705122973.get$Lambda (370 samples, 0.14%)</title><rect x="377.5" y="707.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="380.5" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$293 (370 samples, 0.14%)</title><rect x="377.5" y="691.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="380.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$350/1291528467.get$Lambda (257 samples, 0.10%)</title><rect x="379.1" y="707.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.1" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$350 (257 samples, 0.10%)</title><rect x="379.1" y="691.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="382.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,123 samples, 0.43%)</title><rect x="380.3" y="739.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="383.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,123 samples, 0.43%)</title><rect x="380.3" y="723.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="383.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$350/1291528467.apply (535 samples, 0.21%)</title><rect x="380.3" y="707.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (535 samples, 0.21%)</title><rect x="380.3" y="691.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="383.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (535 samples, 0.21%)</title><rect x="380.3" y="675.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="383.3" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (535 samples, 0.21%)</title><rect x="380.3" y="659.0" width="2.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="383.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (588 samples, 0.23%)</title><rect x="382.7" y="707.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="385.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (588 samples, 0.23%)</title><rect x="382.7" y="691.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="385.7" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (588 samples, 0.23%)</title><rect x="382.7" y="675.0" width="2.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="385.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (564 samples, 0.22%)</title><rect x="385.4" y="739.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="388.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (564 samples, 0.22%)</title><rect x="385.4" y="723.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="388.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (564 samples, 0.22%)</title><rect x="385.4" y="707.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="388.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (564 samples, 0.22%)</title><rect x="385.4" y="691.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="388.4" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (564 samples, 0.22%)</title><rect x="385.4" y="675.0" width="2.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="388.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (34,405 samples, 13.24%)</title><rect x="388.0" y="739.0" width="156.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="391.0" y="750.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (472 samples, 0.18%)</title><rect x="388.0" y="723.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="391.0" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (472 samples, 0.18%)</title><rect x="388.0" y="707.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="391.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$184/1238990080.get$Lambda (472 samples, 0.18%)</title><rect x="388.0" y="691.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="391.0" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$184 (472 samples, 0.18%)</title><rect x="388.0" y="675.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="391.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (31,980 samples, 12.30%)</title><rect x="390.1" y="723.0" width="145.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="393.1" y="734.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (31,980 samples, 12.30%)</title><rect x="390.1" y="707.0" width="145.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="393.1" y="718.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (31,463 samples, 12.11%)</title><rect x="390.1" y="691.0" width="142.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="393.1" y="702.0">java/util/concurre..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$184/1238990080.apply (31,463 samples, 12.11%)</title><rect x="390.1" y="675.0" width="142.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="393.1" y="686.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (31,463 samples, 12.11%)</title><rect x="390.1" y="659.0" width="142.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="393.1" y="670.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (31,463 samples, 12.11%)</title><rect x="390.1" y="643.0" width="142.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="393.1" y="654.0">jdk/internal/net/h..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (287 samples, 0.11%)</title><rect x="390.1" y="627.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="393.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (287 samples, 0.11%)</title><rect x="390.1" y="611.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="393.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$290/1393051360.get$Lambda (287 samples, 0.11%)</title><rect x="390.1" y="595.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="393.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$290 (287 samples, 0.11%)</title><rect x="390.1" y="579.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="393.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (12,915 samples, 4.97%)</title><rect x="391.4" y="627.0" width="58.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="394.4" y="638.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (12,915 samples, 4.97%)</title><rect x="391.4" y="611.0" width="58.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="394.4" y="622.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (12,915 samples, 4.97%)</title><rect x="391.4" y="595.0" width="58.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="394.4" y="606.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$290/1393051360.apply (12,363 samples, 4.76%)</title><rect x="391.4" y="579.0" width="56.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="394.4" y="590.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (12,363 samples, 4.76%)</title><rect x="391.4" y="563.0" width="56.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.4" y="574.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (12,363 samples, 4.76%)</title><rect x="391.4" y="547.0" width="56.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.4" y="558.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (12,363 samples, 4.76%)</title><rect x="391.4" y="531.0" width="56.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.4" y="542.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (7,788 samples, 3.00%)</title><rect x="391.4" y="515.0" width="35.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="394.4" y="526.0">jdk..</text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (2,265 samples, 0.87%)</title><rect x="391.4" y="499.0" width="10.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="394.4" y="510.0"></text>
</g>
<g>
<title>java.lang.String (453 samples, 0.17%)</title><rect x="391.4" y="483.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="394.4" y="494.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (966 samples, 0.37%)</title><rect x="393.5" y="483.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="396.5" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (966 samples, 0.37%)</title><rect x="393.5" y="467.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.5" y="478.0"></text>
</g>
<g>
<title>byte[] (961 samples, 0.37%)</title><rect x="393.5" y="451.0" width="4.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="396.5" y="462.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (846 samples, 0.33%)</title><rect x="397.9" y="483.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="400.9" y="494.0"></text>
</g>
<g>
<title>byte[] (839 samples, 0.32%)</title><rect x="397.9" y="467.0" width="3.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="400.9" y="478.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (348 samples, 0.13%)</title><rect x="401.7" y="499.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="404.7" y="510.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (348 samples, 0.13%)</title><rect x="401.7" y="483.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="404.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (3,746 samples, 1.44%)</title><rect x="403.3" y="499.0" width="17.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="406.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (358 samples, 0.14%)</title><rect x="403.3" y="483.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="406.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (2,708 samples, 1.04%)</title><rect x="404.9" y="483.0" width="12.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (2,708 samples, 1.04%)</title><rect x="404.9" y="467.0" width="12.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="407.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/501107890.linkToTargetMethod (1,999 samples, 0.77%)</title><rect x="404.9" y="451.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="407.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,999 samples, 0.77%)</title><rect x="404.9" y="435.0" width="9.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/1267556427.get$Lambda (1,999 samples, 0.77%)</title><rect x="404.9" y="419.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="407.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$78 (1,999 samples, 0.77%)</title><rect x="404.9" y="403.0" width="9.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="407.9" y="414.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (709 samples, 0.27%)</title><rect x="414.0" y="451.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="417.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/1267556427.run (709 samples, 0.27%)</title><rect x="414.0" y="435.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="417.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (709 samples, 0.27%)</title><rect x="414.0" y="419.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.0" y="430.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (709 samples, 0.27%)</title><rect x="414.0" y="403.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.0" y="414.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (709 samples, 0.27%)</title><rect x="414.0" y="387.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="417.0" y="398.0"></text>
</g>
<g>
<title>java.lang.Integer (709 samples, 0.27%)</title><rect x="414.0" y="371.0" width="3.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="417.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (680 samples, 0.26%)</title><rect x="417.2" y="483.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="420.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (680 samples, 0.26%)</title><rect x="417.2" y="467.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="420.2" y="478.0"></text>
</g>
<g>
<title>int[] (680 samples, 0.26%)</title><rect x="417.2" y="451.0" width="3.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="420.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (1,429 samples, 0.55%)</title><rect x="420.3" y="499.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="423.3" y="510.0"></text>
</g>
<g>
<title>byte[] (704 samples, 0.27%)</title><rect x="420.3" y="483.0" width="3.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="423.3" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (725 samples, 0.28%)</title><rect x="423.5" y="483.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="426.5" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (725 samples, 0.28%)</title><rect x="423.5" y="467.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="426.5" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (725 samples, 0.28%)</title><rect x="423.5" y="451.0" width="3.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="426.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4,575 samples, 1.76%)</title><rect x="426.8" y="515.0" width="20.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="429.8" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,326 samples, 0.51%)</title><rect x="426.8" y="499.0" width="6.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="429.8" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1,223 samples, 0.47%)</title><rect x="432.8" y="499.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="435.8" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,223 samples, 0.47%)</title><rect x="432.8" y="483.0" width="5.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="435.8" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2,026 samples, 0.78%)</title><rect x="438.3" y="499.0" width="9.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="441.3" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2,026 samples, 0.78%)</title><rect x="438.3" y="483.0" width="9.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="441.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (552 samples, 0.21%)</title><rect x="447.5" y="579.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="450.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (552 samples, 0.21%)</title><rect x="447.5" y="563.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="450.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (552 samples, 0.21%)</title><rect x="447.5" y="547.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="450.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (18,261 samples, 7.03%)</title><rect x="450.0" y="627.0" width="83.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="453.0" y="638.0">jdk/inter..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (1,191 samples, 0.46%)</title><rect x="450.0" y="611.0" width="5.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="453.0" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (193 samples, 0.07%)</title><rect x="455.5" y="611.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="458.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (16,365 samples, 6.30%)</title><rect x="456.3" y="611.0" width="74.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.3" y="622.0">jdk/inte..</text>
</g>
<g>
<title>java.lang.Object (264 samples, 0.10%)</title><rect x="456.3" y="595.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="459.3" y="606.0"></text>
</g>
<g>
<title>java.util.LinkedList (520 samples, 0.20%)</title><rect x="457.5" y="595.0" width="2.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="460.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (366 samples, 0.14%)</title><rect x="459.9" y="595.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="462.9" y="606.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (741 samples, 0.29%)</title><rect x="461.6" y="595.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="464.6" y="606.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (741 samples, 0.29%)</title><rect x="461.6" y="579.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="464.6" y="590.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (741 samples, 0.29%)</title><rect x="461.6" y="563.0" width="3.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="464.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (508 samples, 0.20%)</title><rect x="464.9" y="595.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="467.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (508 samples, 0.20%)</title><rect x="464.9" y="579.0" width="2.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="467.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (1,082 samples, 0.42%)</title><rect x="467.2" y="595.0" width="4.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="470.2" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (64 samples, 0.02%)</title><rect x="472.1" y="595.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="475.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (861 samples, 0.33%)</title><rect x="472.4" y="595.0" width="3.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="475.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (873 samples, 0.34%)</title><rect x="476.3" y="595.0" width="4.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="479.3" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1,090 samples, 0.42%)</title><rect x="480.5" y="595.0" width="5.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="483.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (4,914 samples, 1.89%)</title><rect x="485.5" y="595.0" width="22.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="488.5" y="606.0">j..</text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (412 samples, 0.16%)</title><rect x="485.5" y="579.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="488.5" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (240 samples, 0.09%)</title><rect x="487.3" y="579.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="490.3" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (413 samples, 0.16%)</title><rect x="488.4" y="579.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="491.4" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (264 samples, 0.10%)</title><rect x="490.3" y="579.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="493.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (271 samples, 0.10%)</title><rect x="491.5" y="579.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="494.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (271 samples, 0.10%)</title><rect x="491.5" y="563.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="494.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.get$Lambda (271 samples, 0.10%)</title><rect x="491.5" y="547.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="494.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$284 (271 samples, 0.10%)</title><rect x="491.5" y="531.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="494.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (340 samples, 0.13%)</title><rect x="492.7" y="579.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="495.7" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (340 samples, 0.13%)</title><rect x="492.7" y="563.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="495.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (415 samples, 0.16%)</title><rect x="494.3" y="579.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="497.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (511 samples, 0.20%)</title><rect x="496.2" y="579.0" width="2.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="499.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (2,048 samples, 0.79%)</title><rect x="498.5" y="579.0" width="9.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="501.5" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (376 samples, 0.14%)</title><rect x="498.5" y="563.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="501.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (561 samples, 0.22%)</title><rect x="500.2" y="563.0" width="2.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="503.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (286 samples, 0.11%)</title><rect x="502.7" y="563.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="505.7" y="574.0"></text>
</g>
<g>
<title>java.lang.Object (286 samples, 0.11%)</title><rect x="502.7" y="547.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="505.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (825 samples, 0.32%)</title><rect x="504.0" y="563.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="507.0" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (245 samples, 0.09%)</title><rect x="504.0" y="547.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="507.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (344 samples, 0.13%)</title><rect x="505.2" y="547.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="508.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (236 samples, 0.09%)</title><rect x="506.7" y="547.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="509.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (3,072 samples, 1.18%)</title><rect x="507.8" y="595.0" width="13.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="510.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (227 samples, 0.09%)</title><rect x="507.8" y="579.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="510.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (251 samples, 0.10%)</title><rect x="508.8" y="579.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="511.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (276 samples, 0.11%)</title><rect x="510.0" y="579.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="513.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (374 samples, 0.14%)</title><rect x="511.2" y="579.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="514.2" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (374 samples, 0.14%)</title><rect x="511.2" y="563.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="514.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1,944 samples, 0.75%)</title><rect x="512.9" y="579.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="515.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (355 samples, 0.14%)</title><rect x="512.9" y="563.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="515.9" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (527 samples, 0.20%)</title><rect x="514.5" y="563.0" width="2.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="517.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (282 samples, 0.11%)</title><rect x="516.9" y="563.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="519.9" y="574.0"></text>
</g>
<g>
<title>java.lang.Object (282 samples, 0.11%)</title><rect x="516.9" y="547.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="519.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (780 samples, 0.30%)</title><rect x="518.2" y="563.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="521.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (273 samples, 0.11%)</title><rect x="518.2" y="547.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="521.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (247 samples, 0.10%)</title><rect x="519.4" y="547.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="522.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (260 samples, 0.10%)</title><rect x="520.6" y="547.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="523.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (458 samples, 0.18%)</title><rect x="521.7" y="595.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="524.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (399 samples, 0.15%)</title><rect x="521.7" y="579.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="524.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (399 samples, 0.15%)</title><rect x="521.7" y="563.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="524.7" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.get (399 samples, 0.15%)</title><rect x="521.7" y="547.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="524.7" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (399 samples, 0.15%)</title><rect x="521.7" y="531.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="524.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (399 samples, 0.15%)</title><rect x="521.7" y="515.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="524.7" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (399 samples, 0.15%)</title><rect x="521.7" y="499.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="524.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getPlainConnection (59 samples, 0.02%)</title><rect x="523.5" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="526.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.&lt;init&gt; (56 samples, 0.02%)</title><rect x="523.6" y="563.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="526.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (1,502 samples, 0.58%)</title><rect x="523.8" y="595.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="526.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/501107890.linkToTargetMethod (418 samples, 0.16%)</title><rect x="523.8" y="579.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="526.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (418 samples, 0.16%)</title><rect x="523.8" y="563.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="526.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$194/211908476.get$Lambda (418 samples, 0.16%)</title><rect x="523.8" y="547.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="526.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$194 (418 samples, 0.16%)</title><rect x="523.8" y="531.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="526.8" y="542.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,084 samples, 0.42%)</title><rect x="525.7" y="579.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="528.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$194/211908476.run (1,084 samples, 0.42%)</title><rect x="525.7" y="563.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="528.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (1,084 samples, 0.42%)</title><rect x="525.7" y="547.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="528.7" y="558.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (207 samples, 0.08%)</title><rect x="525.7" y="531.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="528.7" y="542.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (877 samples, 0.34%)</title><rect x="526.7" y="531.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="529.7" y="542.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (385 samples, 0.15%)</title><rect x="526.7" y="515.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="529.7" y="526.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (492 samples, 0.19%)</title><rect x="528.4" y="515.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="531.4" y="526.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (492 samples, 0.19%)</title><rect x="528.4" y="499.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="531.4" y="510.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (492 samples, 0.19%)</title><rect x="528.4" y="483.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="531.4" y="494.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (492 samples, 0.19%)</title><rect x="528.4" y="467.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.4" y="478.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (450 samples, 0.17%)</title><rect x="528.4" y="451.0" width="2.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="531.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (512 samples, 0.20%)</title><rect x="530.6" y="611.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="533.6" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (512 samples, 0.20%)</title><rect x="530.6" y="595.0" width="2.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="533.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (517 samples, 0.20%)</title><rect x="533.0" y="691.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="536.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (517 samples, 0.20%)</title><rect x="533.0" y="675.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="536.0" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (517 samples, 0.20%)</title><rect x="533.0" y="659.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="536.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (446 samples, 0.17%)</title><rect x="535.3" y="723.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="538.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (446 samples, 0.17%)</title><rect x="535.3" y="707.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="538.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (446 samples, 0.17%)</title><rect x="535.3" y="691.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="538.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (446 samples, 0.17%)</title><rect x="535.3" y="675.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="538.3" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (446 samples, 0.17%)</title><rect x="535.3" y="659.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="538.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (1,507 samples, 0.58%)</title><rect x="537.3" y="723.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="540.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (1,017 samples, 0.39%)</title><rect x="537.3" y="707.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="540.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (1,017 samples, 0.39%)</title><rect x="537.3" y="691.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="540.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2128155258.linkToTargetMethod (1,017 samples, 0.39%)</title><rect x="537.3" y="675.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="540.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2090995829.invoke (1,017 samples, 0.39%)</title><rect x="537.3" y="659.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="540.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/892748663.invoke (1,017 samples, 0.39%)</title><rect x="537.3" y="643.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="540.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,017 samples, 0.39%)</title><rect x="537.3" y="627.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="540.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (422 samples, 0.16%)</title><rect x="537.3" y="611.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="540.3" y="622.0"></text>
</g>
<g>
<title>java.lang.String (422 samples, 0.16%)</title><rect x="537.3" y="595.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="540.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (595 samples, 0.23%)</title><rect x="539.2" y="611.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="542.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (595 samples, 0.23%)</title><rect x="539.2" y="595.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="542.2" y="606.0"></text>
</g>
<g>
<title>byte[] (595 samples, 0.23%)</title><rect x="539.2" y="579.0" width="2.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="542.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (490 samples, 0.19%)</title><rect x="541.9" y="707.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="544.9" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (490 samples, 0.19%)</title><rect x="541.9" y="691.0" width="2.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="544.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (646 samples, 0.25%)</title><rect x="544.2" y="803.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="547.2" y="814.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (646 samples, 0.25%)</title><rect x="544.2" y="787.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="547.2" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (646 samples, 0.25%)</title><rect x="544.2" y="771.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="547.2" y="782.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (646 samples, 0.25%)</title><rect x="544.2" y="755.0" width="2.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="547.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (2,892 samples, 1.11%)</title><rect x="547.1" y="803.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="550.1" y="814.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (2,118 samples, 0.81%)</title><rect x="547.1" y="787.0" width="9.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="550.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (774 samples, 0.30%)</title><rect x="556.7" y="787.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="559.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (774 samples, 0.30%)</title><rect x="556.7" y="771.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.7" y="782.0"></text>
</g>
<g>
<title>java/time/Instant.now (358 samples, 0.14%)</title><rect x="556.7" y="755.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="559.7" y="766.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (358 samples, 0.14%)</title><rect x="556.7" y="739.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="559.7" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (358 samples, 0.14%)</title><rect x="556.7" y="723.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="559.7" y="734.0"></text>
</g>
<g>
<title>java/time/Instant.create (358 samples, 0.14%)</title><rect x="556.7" y="707.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="559.7" y="718.0"></text>
</g>
<g>
<title>java.time.Instant (358 samples, 0.14%)</title><rect x="556.7" y="691.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="559.7" y="702.0"></text>
</g>
<g>
<title>java/time/Instant.plus (416 samples, 0.16%)</title><rect x="558.3" y="755.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="561.3" y="766.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (416 samples, 0.16%)</title><rect x="558.3" y="739.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="561.3" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.plus (416 samples, 0.16%)</title><rect x="558.3" y="723.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="561.3" y="734.0"></text>
</g>
<g>
<title>java/time/Instant.plus (416 samples, 0.16%)</title><rect x="558.3" y="707.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="561.3" y="718.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (416 samples, 0.16%)</title><rect x="558.3" y="691.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="561.3" y="702.0"></text>
</g>
<g>
<title>java/time/Instant.plus (416 samples, 0.16%)</title><rect x="558.3" y="675.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="561.3" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (416 samples, 0.16%)</title><rect x="558.3" y="659.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="561.3" y="670.0"></text>
</g>
<g>
<title>java/time/Instant.create (416 samples, 0.16%)</title><rect x="558.3" y="643.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="561.3" y="654.0"></text>
</g>
<g>
<title>java.time.Instant (416 samples, 0.16%)</title><rect x="558.3" y="627.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="561.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$151/1373859138.apply (123 samples, 0.05%)</title><rect x="560.2" y="851.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="563.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (123 samples, 0.05%)</title><rect x="560.2" y="835.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="563.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (114 samples, 0.04%)</title><rect x="560.3" y="819.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (102 samples, 0.04%)</title><rect x="560.3" y="803.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="563.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (101 samples, 0.04%)</title><rect x="560.3" y="787.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="563.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (85 samples, 0.03%)</title><rect x="560.4" y="771.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="563.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$587/849392828.run (85 samples, 0.03%)</title><rect x="560.4" y="755.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="563.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (85 samples, 0.03%)</title><rect x="560.4" y="739.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="563.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (59 samples, 0.02%)</title><rect x="560.5" y="723.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="563.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (59 samples, 0.02%)</title><rect x="560.5" y="707.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (59 samples, 0.02%)</title><rect x="560.5" y="691.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (59 samples, 0.02%)</title><rect x="560.5" y="675.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="563.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (59 samples, 0.02%)</title><rect x="560.5" y="659.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="563.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (59 samples, 0.02%)</title><rect x="560.5" y="643.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (59 samples, 0.02%)</title><rect x="560.5" y="627.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="563.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (59 samples, 0.02%)</title><rect x="560.5" y="611.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (58 samples, 0.02%)</title><rect x="560.5" y="595.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.5" y="606.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (58 samples, 0.02%)</title><rect x="560.5" y="579.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.5" y="590.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (58 samples, 0.02%)</title><rect x="560.5" y="563.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="563.5" y="574.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (58 samples, 0.02%)</title><rect x="560.5" y="547.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="563.5" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (58 samples, 0.02%)</title><rect x="560.5" y="531.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="563.5" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (58 samples, 0.02%)</title><rect x="560.5" y="515.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$LocalServiceClient$$Lambda$131/1534001839.get (9,842 samples, 3.79%)</title><rect x="561.0" y="883.0" width="44.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="564.0" y="894.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$LocalServiceClient.lambda$putAsync$1 (9,842 samples, 3.79%)</title><rect x="561.0" y="867.0" width="44.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.0" y="878.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.putEntityLocal (9,842 samples, 3.79%)</title><rect x="561.0" y="851.0" width="44.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.0" y="862.0">ru/m..</text>
</g>
<g>
<title>java/lang/Integer.valueOf (1,566 samples, 0.60%)</title><rect x="561.0" y="835.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.0" y="846.0"></text>
</g>
<g>
<title>java.lang.Integer (1,566 samples, 0.60%)</title><rect x="561.0" y="819.0" width="7.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="564.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/DAOImpl.upsert (5,552 samples, 2.14%)</title><rect x="568.1" y="835.0" width="25.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="571.1" y="846.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3,516 samples, 1.35%)</title><rect x="568.1" y="819.0" width="16.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="571.1" y="830.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3,516 samples, 1.35%)</title><rect x="568.1" y="803.0" width="16.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="571.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/MemTablePool.upsert (2,036 samples, 0.78%)</title><rect x="584.1" y="819.0" width="9.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="587.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (77 samples, 0.03%)</title><rect x="584.1" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="587.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (77 samples, 0.03%)</title><rect x="584.1" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="587.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (76 samples, 0.03%)</title><rect x="584.1" y="771.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="587.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/MemTable.upsert (1,958 samples, 0.75%)</title><rect x="584.4" y="803.0" width="8.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="587.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (883 samples, 0.34%)</title><rect x="584.4" y="787.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="587.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (883 samples, 0.34%)</title><rect x="584.4" y="771.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="587.4" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (328 samples, 0.13%)</title><rect x="584.4" y="755.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="587.4" y="766.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (554 samples, 0.21%)</title><rect x="585.9" y="755.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="588.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/TableEntry.upsert (1,075 samples, 0.41%)</title><rect x="588.4" y="787.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.4" y="798.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.vaddya.TableEntry (1,075 samples, 0.41%)</title><rect x="588.4" y="771.0" width="4.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="591.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ByteBufferUtils.wrapString (2,724 samples, 1.05%)</title><rect x="593.3" y="835.0" width="12.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="596.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ByteBufferUtils.wrapString (2,724 samples, 1.05%)</title><rect x="593.3" y="819.0" width="12.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="596.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (927 samples, 0.36%)</title><rect x="593.3" y="803.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="596.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (927 samples, 0.36%)</title><rect x="593.3" y="787.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="596.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (927 samples, 0.36%)</title><rect x="593.3" y="771.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="596.3" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (927 samples, 0.36%)</title><rect x="593.3" y="755.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="596.3" y="766.0"></text>
</g>
<g>
<title>byte[] (927 samples, 0.36%)</title><rect x="593.3" y="739.0" width="4.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="596.3" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,797 samples, 0.69%)</title><rect x="597.5" y="803.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="600.5" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,797 samples, 0.69%)</title><rect x="597.5" y="787.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.5" y="798.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,797 samples, 0.69%)</title><rect x="597.5" y="771.0" width="8.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="600.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4,132 samples, 1.59%)</title><rect x="605.7" y="899.0" width="18.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="608.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (2,699 samples, 1.04%)</title><rect x="605.7" y="883.0" width="12.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="608.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (2,699 samples, 1.04%)</title><rect x="605.7" y="867.0" width="12.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (2,699 samples, 1.04%)</title><rect x="605.7" y="851.0" width="12.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="608.7" y="862.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (2,699 samples, 1.04%)</title><rect x="605.7" y="835.0" width="12.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="608.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (1,432 samples, 0.55%)</title><rect x="617.9" y="883.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1,432 samples, 0.55%)</title><rect x="617.9" y="867.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="620.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1,432 samples, 0.55%)</title><rect x="617.9" y="851.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="620.9" y="862.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (1,432 samples, 0.55%)</title><rect x="617.9" y="835.0" width="6.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="620.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$498/375914915.run (19,324 samples, 7.43%)</title><rect x="624.4" y="899.0" width="87.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="627.4" y="910.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (19,324 samples, 7.43%)</title><rect x="624.4" y="883.0" width="87.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="627.4" y="894.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (19,324 samples, 7.43%)</title><rect x="624.4" y="867.0" width="87.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.4" y="878.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (19,324 samples, 7.43%)</title><rect x="624.4" y="851.0" width="87.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="627.4" y="862.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19,324 samples, 7.43%)</title><rect x="624.4" y="835.0" width="87.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="627.4" y="846.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19,324 samples, 7.43%)</title><rect x="624.4" y="819.0" width="87.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="627.4" y="830.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (19,324 samples, 7.43%)</title><rect x="624.4" y="803.0" width="87.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="627.4" y="814.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (19,324 samples, 7.43%)</title><rect x="624.4" y="787.0" width="87.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="627.4" y="798.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (19,324 samples, 7.43%)</title><rect x="624.4" y="771.0" width="87.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="627.4" y="782.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (19,324 samples, 7.43%)</title><rect x="624.4" y="755.0" width="87.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="627.4" y="766.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (19,324 samples, 7.43%)</title><rect x="624.4" y="739.0" width="87.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="627.4" y="750.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (17,825 samples, 6.86%)</title><rect x="624.4" y="723.0" width="81.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="627.4" y="734.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (932 samples, 0.36%)</title><rect x="624.4" y="707.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="627.4" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (932 samples, 0.36%)</title><rect x="624.4" y="691.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="627.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$499/1958732976.get$Lambda (554 samples, 0.21%)</title><rect x="624.4" y="675.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.4" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$499 (554 samples, 0.21%)</title><rect x="624.4" y="659.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="627.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$548/2025116764.get$Lambda (179 samples, 0.07%)</title><rect x="626.9" y="675.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="629.9" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$548 (179 samples, 0.07%)</title><rect x="626.9" y="659.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="629.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$550/783484924.get$Lambda (199 samples, 0.08%)</title><rect x="627.8" y="675.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="630.8" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$550 (199 samples, 0.08%)</title><rect x="627.8" y="659.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="630.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (16,893 samples, 6.50%)</title><rect x="628.7" y="707.0" width="76.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="631.7" y="718.0">java/uti..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (703 samples, 0.27%)</title><rect x="628.7" y="691.0" width="3.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="631.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (16,190 samples, 6.23%)</title><rect x="631.9" y="691.0" width="73.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="634.9" y="702.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (16,190 samples, 6.23%)</title><rect x="631.9" y="675.0" width="73.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="634.9" y="686.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (16,190 samples, 6.23%)</title><rect x="631.9" y="659.0" width="73.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="634.9" y="670.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,968 samples, 1.14%)</title><rect x="631.9" y="643.0" width="13.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="634.9" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (909 samples, 0.35%)</title><rect x="631.9" y="627.0" width="4.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="634.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$527/52661102.apply (1,540 samples, 0.59%)</title><rect x="636.0" y="627.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="639.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (1,540 samples, 0.59%)</title><rect x="636.0" y="611.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (1,540 samples, 0.59%)</title><rect x="636.0" y="595.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.0" y="606.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (380 samples, 0.15%)</title><rect x="636.0" y="579.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="639.0" y="590.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (380 samples, 0.15%)</title><rect x="636.0" y="563.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.0" y="574.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (380 samples, 0.15%)</title><rect x="636.0" y="547.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="639.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (1,160 samples, 0.45%)</title><rect x="637.7" y="579.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="640.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (208 samples, 0.08%)</title><rect x="637.7" y="563.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="640.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (208 samples, 0.08%)</title><rect x="637.7" y="547.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="640.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$553/1767458720.get$Lambda (208 samples, 0.08%)</title><rect x="637.7" y="531.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="640.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$553 (208 samples, 0.08%)</title><rect x="637.7" y="515.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="640.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (952 samples, 0.37%)</title><rect x="638.7" y="563.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="641.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (952 samples, 0.37%)</title><rect x="638.7" y="547.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="641.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (506 samples, 0.19%)</title><rect x="638.7" y="531.0" width="2.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="641.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (430 samples, 0.17%)</title><rect x="641.0" y="531.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (430 samples, 0.17%)</title><rect x="641.0" y="515.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="644.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (430 samples, 0.17%)</title><rect x="641.0" y="499.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="644.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$151/1373859138.apply (506 samples, 0.19%)</title><rect x="643.0" y="627.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (506 samples, 0.19%)</title><rect x="643.0" y="611.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (473 samples, 0.18%)</title><rect x="643.2" y="595.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="646.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (459 samples, 0.18%)</title><rect x="643.2" y="579.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (446 samples, 0.17%)</title><rect x="643.3" y="563.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="646.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (381 samples, 0.15%)</title><rect x="643.6" y="547.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="646.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$587/849392828.run (381 samples, 0.15%)</title><rect x="643.6" y="531.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (381 samples, 0.15%)</title><rect x="643.6" y="515.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="646.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (73 samples, 0.03%)</title><rect x="643.7" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="646.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (73 samples, 0.03%)</title><rect x="643.7" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="646.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (73 samples, 0.03%)</title><rect x="643.7" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="646.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (73 samples, 0.03%)</title><rect x="643.7" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (73 samples, 0.03%)</title><rect x="643.7" y="435.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (73 samples, 0.03%)</title><rect x="643.7" y="419.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="646.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.run (73 samples, 0.03%)</title><rect x="643.7" y="403.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (73 samples, 0.03%)</title><rect x="643.7" y="387.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (73 samples, 0.03%)</title><rect x="643.7" y="371.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="646.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (56 samples, 0.02%)</title><rect x="643.7" y="355.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="646.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (56 samples, 0.02%)</title><rect x="643.7" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="646.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$589/1973295159.run (56 samples, 0.02%)</title><rect x="643.7" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (56 samples, 0.02%)</title><rect x="643.7" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (56 samples, 0.02%)</title><rect x="643.7" y="291.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="646.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (254 samples, 0.10%)</title><rect x="644.0" y="499.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="647.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (254 samples, 0.10%)</title><rect x="644.0" y="483.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (251 samples, 0.10%)</title><rect x="644.0" y="467.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (251 samples, 0.10%)</title><rect x="644.0" y="451.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (251 samples, 0.10%)</title><rect x="644.0" y="435.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (247 samples, 0.10%)</title><rect x="644.0" y="419.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (247 samples, 0.10%)</title><rect x="644.0" y="403.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="647.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (247 samples, 0.10%)</title><rect x="644.0" y="387.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (241 samples, 0.09%)</title><rect x="644.1" y="371.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="647.1" y="382.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (241 samples, 0.09%)</title><rect x="644.1" y="355.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="647.1" y="366.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (241 samples, 0.09%)</title><rect x="644.1" y="339.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="647.1" y="350.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (241 samples, 0.09%)</title><rect x="644.1" y="323.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="647.1" y="334.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (241 samples, 0.09%)</title><rect x="644.1" y="307.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="647.1" y="318.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (241 samples, 0.09%)</title><rect x="644.1" y="291.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="647.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (13,222 samples, 5.09%)</title><rect x="645.3" y="643.0" width="60.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="648.3" y="654.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (13,222 samples, 5.09%)</title><rect x="645.3" y="627.0" width="60.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="648.3" y="638.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$443/90862708.apply (13,216 samples, 5.08%)</title><rect x="645.3" y="611.0" width="60.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="648.3" y="622.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (13,216 samples, 5.08%)</title><rect x="645.3" y="595.0" width="60.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="648.3" y="606.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (13,216 samples, 5.08%)</title><rect x="645.3" y="579.0" width="60.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="648.3" y="590.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$158/1087713702.apply (13,216 samples, 5.08%)</title><rect x="645.3" y="563.0" width="60.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="648.3" y="574.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (13,216 samples, 5.08%)</title><rect x="645.3" y="547.0" width="60.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="648.3" y="558.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (211 samples, 0.08%)</title><rect x="645.3" y="531.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="648.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (211 samples, 0.08%)</title><rect x="645.3" y="515.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="648.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$527/52661102.get$Lambda (211 samples, 0.08%)</title><rect x="645.3" y="499.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="648.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$527 (211 samples, 0.08%)</title><rect x="645.3" y="483.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="648.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,028 samples, 0.40%)</title><rect x="646.3" y="531.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="649.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,028 samples, 0.40%)</title><rect x="646.3" y="515.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="649.3" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (569 samples, 0.22%)</title><rect x="646.3" y="499.0" width="2.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="649.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (459 samples, 0.18%)</title><rect x="648.9" y="499.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="651.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (459 samples, 0.18%)</title><rect x="648.9" y="483.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="651.9" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (459 samples, 0.18%)</title><rect x="648.9" y="467.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="651.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (1,212 samples, 0.47%)</title><rect x="651.0" y="531.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (227 samples, 0.09%)</title><rect x="651.0" y="515.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="654.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (227 samples, 0.09%)</title><rect x="651.0" y="499.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$533/1265756444.get$Lambda (227 samples, 0.09%)</title><rect x="651.0" y="483.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$533 (227 samples, 0.09%)</title><rect x="651.0" y="467.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="654.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (985 samples, 0.38%)</title><rect x="652.0" y="515.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="655.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (985 samples, 0.38%)</title><rect x="652.0" y="499.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="655.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (535 samples, 0.21%)</title><rect x="652.0" y="483.0" width="2.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="655.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (450 samples, 0.17%)</title><rect x="654.4" y="483.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (450 samples, 0.17%)</title><rect x="654.4" y="467.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="657.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (450 samples, 0.17%)</title><rect x="654.4" y="451.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="657.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (10,765 samples, 4.14%)</title><rect x="656.5" y="531.0" width="48.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="659.5" y="542.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (373 samples, 0.14%)</title><rect x="656.5" y="515.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="659.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (373 samples, 0.14%)</title><rect x="656.5" y="499.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="659.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$507/1060480628.get$Lambda (181 samples, 0.07%)</title><rect x="656.5" y="483.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="659.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$507 (181 samples, 0.07%)</title><rect x="656.5" y="467.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="659.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$522/1925782679.get$Lambda (192 samples, 0.07%)</title><rect x="657.3" y="483.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="660.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$522 (192 samples, 0.07%)</title><rect x="657.3" y="467.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="660.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (3,973 samples, 1.53%)</title><rect x="658.1" y="515.0" width="18.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (3,973 samples, 1.53%)</title><rect x="658.1" y="499.0" width="18.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (3,973 samples, 1.53%)</title><rect x="658.1" y="483.0" width="18.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="661.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$507/1060480628.accept (1,310 samples, 0.50%)</title><rect x="658.1" y="467.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="661.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (1,310 samples, 0.50%)</title><rect x="658.1" y="451.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="661.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (1,310 samples, 0.50%)</title><rect x="658.1" y="435.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="661.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (328 samples, 0.13%)</title><rect x="658.1" y="419.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="661.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (328 samples, 0.13%)</title><rect x="658.1" y="403.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$518/627396116.get$Lambda (328 samples, 0.13%)</title><rect x="658.1" y="387.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="661.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$518 (328 samples, 0.13%)</title><rect x="658.1" y="371.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="661.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (982 samples, 0.38%)</title><rect x="659.6" y="419.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (982 samples, 0.38%)</title><rect x="659.6" y="403.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="662.6" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (560 samples, 0.22%)</title><rect x="659.6" y="387.0" width="2.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="662.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (422 samples, 0.16%)</title><rect x="662.2" y="387.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="665.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (422 samples, 0.16%)</title><rect x="662.2" y="371.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="665.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (422 samples, 0.16%)</title><rect x="662.2" y="355.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="665.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$522/1925782679.accept (1,710 samples, 0.66%)</title><rect x="664.1" y="467.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (1,710 samples, 0.66%)</title><rect x="664.1" y="451.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="667.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (1,710 samples, 0.66%)</title><rect x="664.1" y="435.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="667.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (1,710 samples, 0.66%)</title><rect x="664.1" y="419.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="667.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (1,710 samples, 0.66%)</title><rect x="664.1" y="403.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="667.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,710 samples, 0.66%)</title><rect x="664.1" y="387.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="667.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,710 samples, 0.66%)</title><rect x="664.1" y="371.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="667.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,710 samples, 0.66%)</title><rect x="664.1" y="355.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="667.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,710 samples, 0.66%)</title><rect x="664.1" y="339.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="667.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1,710 samples, 0.66%)</title><rect x="664.1" y="323.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="667.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (655 samples, 0.25%)</title><rect x="664.1" y="307.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="667.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (655 samples, 0.25%)</title><rect x="664.1" y="291.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="667.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (315 samples, 0.12%)</title><rect x="664.1" y="275.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="667.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (340 samples, 0.13%)</title><rect x="665.5" y="275.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (340 samples, 0.13%)</title><rect x="665.5" y="259.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="668.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (340 samples, 0.13%)</title><rect x="665.5" y="243.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="668.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (340 samples, 0.13%)</title><rect x="665.5" y="227.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="668.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (340 samples, 0.13%)</title><rect x="665.5" y="211.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="668.5" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (340 samples, 0.13%)</title><rect x="665.5" y="195.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="668.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1,055 samples, 0.41%)</title><rect x="667.1" y="307.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="670.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1,055 samples, 0.41%)</title><rect x="667.1" y="291.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="670.1" y="302.0"></text>
</g>
<g>
<title>java/util/List.of (353 samples, 0.14%)</title><rect x="667.1" y="275.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="670.1" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (353 samples, 0.14%)</title><rect x="667.1" y="259.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="670.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (702 samples, 0.27%)</title><rect x="668.7" y="275.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="671.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (354 samples, 0.14%)</title><rect x="668.7" y="259.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="671.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (348 samples, 0.13%)</title><rect x="670.3" y="259.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="673.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (348 samples, 0.13%)</title><rect x="670.3" y="243.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (348 samples, 0.13%)</title><rect x="670.3" y="227.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="673.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (348 samples, 0.13%)</title><rect x="670.3" y="211.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="673.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (348 samples, 0.13%)</title><rect x="670.3" y="195.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="673.3" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (348 samples, 0.13%)</title><rect x="670.3" y="179.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="673.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (953 samples, 0.37%)</title><rect x="671.9" y="467.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="674.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (953 samples, 0.37%)</title><rect x="671.9" y="451.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="674.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (953 samples, 0.37%)</title><rect x="671.9" y="435.0" width="4.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="674.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (6,419 samples, 2.47%)</title><rect x="676.2" y="515.0" width="29.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.2" y="526.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (573 samples, 0.22%)</title><rect x="676.2" y="499.0" width="2.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="679.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (475 samples, 0.18%)</title><rect x="678.8" y="499.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="681.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (475 samples, 0.18%)</title><rect x="678.8" y="483.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="681.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (475 samples, 0.18%)</title><rect x="678.8" y="467.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="681.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (5,371 samples, 2.07%)</title><rect x="680.9" y="499.0" width="24.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="683.9" y="510.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (331 samples, 0.13%)</title><rect x="680.9" y="483.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="683.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (2,818 samples, 1.08%)</title><rect x="682.4" y="483.0" width="12.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="685.4" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (435 samples, 0.17%)</title><rect x="682.4" y="467.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="685.4" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (435 samples, 0.17%)</title><rect x="682.4" y="451.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="685.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (565 samples, 0.22%)</title><rect x="684.4" y="467.0" width="2.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="687.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (1,818 samples, 0.70%)</title><rect x="687.0" y="467.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="690.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (212 samples, 0.08%)</title><rect x="687.0" y="451.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="690.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (200 samples, 0.08%)</title><rect x="688.0" y="451.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="691.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (447 samples, 0.17%)</title><rect x="688.9" y="451.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="691.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (317 samples, 0.12%)</title><rect x="690.9" y="451.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="693.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (317 samples, 0.12%)</title><rect x="690.9" y="435.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="693.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (642 samples, 0.25%)</title><rect x="692.3" y="451.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (213 samples, 0.08%)</title><rect x="692.3" y="435.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="695.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (234 samples, 0.09%)</title><rect x="693.3" y="435.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="696.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (195 samples, 0.08%)</title><rect x="694.4" y="435.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="697.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (2,222 samples, 0.85%)</title><rect x="695.2" y="483.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="698.2" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (359 samples, 0.14%)</title><rect x="695.2" y="467.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="698.2" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,049 samples, 0.40%)</title><rect x="696.9" y="467.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.9" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (655 samples, 0.25%)</title><rect x="696.9" y="451.0" width="2.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="699.9" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (394 samples, 0.15%)</title><rect x="699.8" y="451.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="702.8" y="462.0"></text>
</g>
<g>
<title>byte[] (394 samples, 0.15%)</title><rect x="699.8" y="435.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="702.8" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (814 samples, 0.31%)</title><rect x="701.6" y="467.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.6" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (814 samples, 0.31%)</title><rect x="701.6" y="451.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="704.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (814 samples, 0.31%)</title><rect x="701.6" y="435.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="704.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (814 samples, 0.31%)</title><rect x="701.6" y="419.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="704.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (814 samples, 0.31%)</title><rect x="701.6" y="403.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="704.6" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (772 samples, 0.30%)</title><rect x="701.6" y="387.0" width="3.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="704.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,499 samples, 0.58%)</title><rect x="705.4" y="723.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1,499 samples, 0.58%)</title><rect x="705.4" y="707.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1,499 samples, 0.58%)</title><rect x="705.4" y="691.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1,499 samples, 0.58%)</title><rect x="705.4" y="675.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="708.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1,499 samples, 0.58%)</title><rect x="705.4" y="659.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="708.4" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1,482 samples, 0.57%)</title><rect x="705.4" y="643.0" width="6.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="708.4" y="654.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (657 samples, 0.25%)</title><rect x="705.4" y="627.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="708.4" y="638.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (657 samples, 0.25%)</title><rect x="705.4" y="611.0" width="3.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="708.4" y="622.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (825 samples, 0.32%)</title><rect x="708.4" y="627.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="711.4" y="638.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (825 samples, 0.32%)</title><rect x="708.4" y="611.0" width="3.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="711.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (64,280 samples, 24.73%)</title><rect x="712.2" y="899.0" width="291.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="715.2" y="910.0">jdk/internal/net/http/common/Sequential..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (64,280 samples, 24.73%)</title><rect x="712.2" y="883.0" width="291.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="715.2" y="894.0">jdk/internal/net/http/common/Sequential..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (53,928 samples, 20.75%)</title><rect x="712.2" y="867.0" width="244.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="715.2" y="878.0">jdk/internal/net/http/common/Seq..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.run (53,928 samples, 20.75%)</title><rect x="712.2" y="851.0" width="244.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="715.2" y="862.0">jdk/internal/net/http/Http1Async..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (53,928 samples, 20.75%)</title><rect x="712.2" y="835.0" width="244.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="715.2" y="846.0">jdk/internal/net/http/Http1Async..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1,098 samples, 0.42%)</title><rect x="712.4" y="819.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="715.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (1,098 samples, 0.42%)</title><rect x="712.4" y="803.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="715.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1,098 samples, 0.42%)</title><rect x="712.4" y="787.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1,098 samples, 0.42%)</title><rect x="712.4" y="771.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="715.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1473981203.linkToTargetMethod (582 samples, 0.22%)</title><rect x="712.4" y="755.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2129442232.invoke (582 samples, 0.22%)</title><rect x="712.4" y="739.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="715.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (582 samples, 0.22%)</title><rect x="712.4" y="723.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="715.4" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (582 samples, 0.22%)</title><rect x="712.4" y="707.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="715.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (582 samples, 0.22%)</title><rect x="712.4" y="691.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="715.4" y="702.0"></text>
</g>
<g>
<title>byte[] (582 samples, 0.22%)</title><rect x="712.4" y="675.0" width="2.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="715.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (516 samples, 0.20%)</title><rect x="715.0" y="755.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (516 samples, 0.20%)</title><rect x="715.0" y="739.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="718.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (516 samples, 0.20%)</title><rect x="715.0" y="723.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="718.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$493/346832864.get$Lambda (516 samples, 0.20%)</title><rect x="715.0" y="707.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="718.0" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$493 (516 samples, 0.20%)</title><rect x="715.0" y="691.0" width="2.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="718.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (52,785 samples, 20.31%)</title><rect x="717.4" y="819.0" width="239.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="720.4" y="830.0">jdk/internal/net/http/Http1Respo..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (52,785 samples, 20.31%)</title><rect x="717.4" y="803.0" width="239.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="720.4" y="814.0">jdk/internal/net/http/Http1Respo..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (52,785 samples, 20.31%)</title><rect x="717.4" y="787.0" width="239.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.4" y="798.0">jdk/internal/net/http/Http1Respo..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (52,785 samples, 20.31%)</title><rect x="717.4" y="771.0" width="239.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="720.4" y="782.0">jdk/internal/net/http/Http1Respo..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (24,933 samples, 9.59%)</title><rect x="717.4" y="755.0" width="113.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.4" y="766.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (24,933 samples, 9.59%)</title><rect x="717.4" y="739.0" width="113.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="720.4" y="750.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (24,933 samples, 9.59%)</title><rect x="717.4" y="723.0" width="113.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="720.4" y="734.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (24,933 samples, 9.59%)</title><rect x="717.4" y="707.0" width="113.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="720.4" y="718.0">java/util/conc..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (24,933 samples, 9.59%)</title><rect x="717.4" y="691.0" width="113.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="720.4" y="702.0">jdk/internal/n..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (24,933 samples, 9.59%)</title><rect x="717.4" y="675.0" width="113.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="720.4" y="686.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (24,933 samples, 9.59%)</title><rect x="717.4" y="659.0" width="113.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="720.4" y="670.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (24,210 samples, 9.31%)</title><rect x="717.4" y="643.0" width="109.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="720.4" y="654.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (24,210 samples, 9.31%)</title><rect x="717.4" y="627.0" width="109.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="720.4" y="638.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (23,743 samples, 9.14%)</title><rect x="717.4" y="611.0" width="107.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="720.4" y="622.0">java/util/con..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (388 samples, 0.15%)</title><rect x="717.4" y="595.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="720.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$533/1265756444.apply (446 samples, 0.17%)</title><rect x="719.1" y="595.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="722.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (446 samples, 0.17%)</title><rect x="719.1" y="579.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="722.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (446 samples, 0.17%)</title><rect x="719.1" y="563.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="722.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (446 samples, 0.17%)</title><rect x="719.1" y="547.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="722.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (446 samples, 0.17%)</title><rect x="719.1" y="531.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="722.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$151/1373859138.apply (21,993 samples, 8.46%)</title><rect x="721.1" y="595.0" width="99.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.1" y="606.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (21,993 samples, 8.46%)</title><rect x="721.1" y="579.0" width="99.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="724.1" y="590.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (446 samples, 0.17%)</title><rect x="721.1" y="563.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="724.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (446 samples, 0.17%)</title><rect x="721.1" y="547.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="724.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$607/831886457.get$Lambda (446 samples, 0.17%)</title><rect x="721.1" y="531.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="724.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$607 (446 samples, 0.17%)</title><rect x="721.1" y="515.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="724.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1,040 samples, 0.40%)</title><rect x="723.2" y="563.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="726.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1,040 samples, 0.40%)</title><rect x="723.2" y="547.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="726.2" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (533 samples, 0.21%)</title><rect x="723.2" y="531.0" width="2.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="726.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (507 samples, 0.20%)</title><rect x="725.6" y="531.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="728.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (507 samples, 0.20%)</title><rect x="725.6" y="515.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="728.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (507 samples, 0.20%)</title><rect x="725.6" y="499.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="728.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (20,507 samples, 7.89%)</title><rect x="727.9" y="563.0" width="93.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="730.9" y="574.0">jdk/interna..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (285 samples, 0.11%)</title><rect x="727.9" y="547.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="730.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (285 samples, 0.11%)</title><rect x="727.9" y="531.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$605/871672554.get$Lambda (285 samples, 0.11%)</title><rect x="727.9" y="515.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="730.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$605 (285 samples, 0.11%)</title><rect x="727.9" y="499.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="730.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,120 samples, 0.43%)</title><rect x="729.2" y="547.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,120 samples, 0.43%)</title><rect x="729.2" y="531.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="732.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (654 samples, 0.25%)</title><rect x="729.2" y="515.0" width="2.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="732.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (466 samples, 0.18%)</title><rect x="732.1" y="515.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="735.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (466 samples, 0.18%)</title><rect x="732.1" y="499.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="735.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (466 samples, 0.18%)</title><rect x="732.1" y="483.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="735.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (19,102 samples, 7.35%)</title><rect x="734.3" y="547.0" width="86.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="737.3" y="558.0">jdk/intern..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$141/925456338.apply (1,093 samples, 0.42%)</title><rect x="734.3" y="531.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="737.3" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$discarding$6 (1,093 samples, 0.42%)</title><rect x="734.3" y="515.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="737.3" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.discarding (1,093 samples, 0.42%)</title><rect x="734.3" y="499.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="737.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$NullSubscriber (384 samples, 0.15%)</title><rect x="734.3" y="483.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="737.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (709 samples, 0.27%)</title><rect x="736.0" y="483.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="739.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (257 samples, 0.10%)</title><rect x="736.0" y="467.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="739.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (452 samples, 0.17%)</title><rect x="737.2" y="467.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="740.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (18,009 samples, 6.93%)</title><rect x="739.2" y="531.0" width="81.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="742.2" y="542.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (585 samples, 0.23%)</title><rect x="739.2" y="515.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="742.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (585 samples, 0.23%)</title><rect x="739.2" y="499.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="742.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$601/301086023.get$Lambda (287 samples, 0.11%)</title><rect x="739.2" y="483.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="742.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$601 (287 samples, 0.11%)</title><rect x="739.2" y="467.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="742.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$603/1621229556.get$Lambda (298 samples, 0.11%)</title><rect x="740.5" y="483.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="743.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$603 (298 samples, 0.11%)</title><rect x="740.5" y="467.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="743.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/538554855.linkToTargetMethod (641 samples, 0.25%)</title><rect x="741.9" y="515.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="744.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/643338743.invokeStatic (641 samples, 0.25%)</title><rect x="741.9" y="499.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="744.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$587/849392828.get$Lambda (641 samples, 0.25%)</title><rect x="741.9" y="483.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="744.9" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$587 (641 samples, 0.25%)</title><rect x="741.9" y="467.0" width="2.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="744.9" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (3,420 samples, 1.32%)</title><rect x="744.8" y="515.0" width="15.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.8" y="526.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,326 samples, 0.51%)</title><rect x="744.8" y="499.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.8" y="510.0"></text>
</g>
<g>
<title>java/util/List.spliterator (419 samples, 0.16%)</title><rect x="744.8" y="483.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="747.8" y="494.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (419 samples, 0.16%)</title><rect x="744.8" y="467.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="747.8" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (907 samples, 0.35%)</title><rect x="746.7" y="483.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="749.7" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (901 samples, 0.35%)</title><rect x="746.7" y="467.0" width="4.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="749.7" y="478.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (1,106 samples, 0.43%)</title><rect x="750.8" y="499.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="753.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1,106 samples, 0.43%)</title><rect x="750.8" y="483.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.8" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1,106 samples, 0.43%)</title><rect x="750.8" y="467.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="753.8" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (396 samples, 0.15%)</title><rect x="750.8" y="451.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.8" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (396 samples, 0.15%)</title><rect x="750.8" y="435.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="753.8" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (396 samples, 0.15%)</title><rect x="750.8" y="419.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="753.8" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (396 samples, 0.15%)</title><rect x="750.8" y="403.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="753.8" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$584/343512251.get (402 samples, 0.15%)</title><rect x="752.6" y="451.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="755.6" y="462.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (402 samples, 0.15%)</title><rect x="752.6" y="435.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="755.6" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (308 samples, 0.12%)</title><rect x="754.4" y="451.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="757.4" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (308 samples, 0.12%)</title><rect x="754.4" y="435.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="757.4" y="446.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (308 samples, 0.12%)</title><rect x="754.4" y="419.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="757.4" y="430.0"></text>
</g>
<g>
<title>java.util.OptionalLong (308 samples, 0.12%)</title><rect x="754.4" y="403.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="757.4" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (988 samples, 0.38%)</title><rect x="755.8" y="499.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="758.8" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (964 samples, 0.37%)</title><rect x="755.8" y="483.0" width="4.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="758.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2,152 samples, 0.83%)</title><rect x="760.3" y="515.0" width="9.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="763.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,063 samples, 0.41%)</title><rect x="760.3" y="499.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="763.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (615 samples, 0.24%)</title><rect x="760.3" y="483.0" width="2.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="763.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (448 samples, 0.17%)</title><rect x="763.1" y="483.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="766.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (448 samples, 0.17%)</title><rect x="763.1" y="467.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="766.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (448 samples, 0.17%)</title><rect x="763.1" y="451.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="766.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,089 samples, 0.42%)</title><rect x="765.1" y="499.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="768.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,089 samples, 0.42%)</title><rect x="765.1" y="483.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="768.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (589 samples, 0.23%)</title><rect x="765.1" y="467.0" width="2.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="768.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (500 samples, 0.19%)</title><rect x="767.8" y="467.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="770.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (500 samples, 0.19%)</title><rect x="767.8" y="451.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="770.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (500 samples, 0.19%)</title><rect x="767.8" y="435.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="770.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (479 samples, 0.18%)</title><rect x="770.1" y="515.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="773.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (436 samples, 0.17%)</title><rect x="772.3" y="515.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="775.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (524 samples, 0.20%)</title><rect x="774.2" y="515.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="777.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (299 samples, 0.12%)</title><rect x="776.6" y="515.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="779.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (299 samples, 0.12%)</title><rect x="776.6" y="499.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="779.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9,473 samples, 3.64%)</title><rect x="778.0" y="515.0" width="43.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="781.0" y="526.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$587/849392828.run (9,473 samples, 3.64%)</title><rect x="778.0" y="499.0" width="43.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="781.0" y="510.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (9,473 samples, 3.64%)</title><rect x="778.0" y="483.0" width="43.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="781.0" y="494.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,250 samples, 0.48%)</title><rect x="778.0" y="467.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="781.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,250 samples, 0.48%)</title><rect x="778.0" y="451.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$589/1973295159.get$Lambda (270 samples, 0.10%)</title><rect x="778.0" y="435.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="781.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$589 (270 samples, 0.10%)</title><rect x="778.0" y="419.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="781.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$592/820455260.get$Lambda (395 samples, 0.15%)</title><rect x="779.2" y="435.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="782.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$592 (395 samples, 0.15%)</title><rect x="779.2" y="419.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="782.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$597/999361704.get$Lambda (585 samples, 0.23%)</title><rect x="781.0" y="435.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="784.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$597 (585 samples, 0.23%)</title><rect x="781.0" y="419.0" width="2.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="784.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,328 samples, 0.51%)</title><rect x="783.7" y="467.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="786.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,328 samples, 0.51%)</title><rect x="783.7" y="451.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="786.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (813 samples, 0.31%)</title><rect x="783.7" y="435.0" width="3.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="786.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (515 samples, 0.20%)</title><rect x="787.3" y="435.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="790.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (515 samples, 0.20%)</title><rect x="787.3" y="419.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="790.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (515 samples, 0.20%)</title><rect x="787.3" y="403.0" width="2.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="790.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (740 samples, 0.28%)</title><rect x="789.7" y="467.0" width="3.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="792.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (637 samples, 0.25%)</title><rect x="793.0" y="467.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="796.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (637 samples, 0.25%)</title><rect x="793.0" y="451.0" width="2.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="796.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (1,386 samples, 0.53%)</title><rect x="795.9" y="467.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="798.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (1,386 samples, 0.53%)</title><rect x="795.9" y="451.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="798.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (341 samples, 0.13%)</title><rect x="795.9" y="435.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="798.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (341 samples, 0.13%)</title><rect x="795.9" y="419.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="798.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$599/2146609873.get$Lambda (341 samples, 0.13%)</title><rect x="795.9" y="403.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="798.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$599 (341 samples, 0.13%)</title><rect x="795.9" y="387.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="798.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,044 samples, 0.40%)</title><rect x="797.5" y="435.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="800.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1,044 samples, 0.40%)</title><rect x="797.5" y="419.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="800.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1,044 samples, 0.40%)</title><rect x="797.5" y="403.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="800.5" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (552 samples, 0.21%)</title><rect x="797.5" y="387.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="800.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (492 samples, 0.19%)</title><rect x="800.0" y="387.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="803.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (492 samples, 0.19%)</title><rect x="800.0" y="371.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="803.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (492 samples, 0.19%)</title><rect x="800.0" y="355.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="803.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1,488 samples, 0.57%)</title><rect x="802.2" y="467.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,485 samples, 0.57%)</title><rect x="802.2" y="451.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/282265585.invoke (1,485 samples, 0.57%)</title><rect x="802.2" y="435.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="805.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,485 samples, 0.57%)</title><rect x="802.2" y="419.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="805.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (395 samples, 0.15%)</title><rect x="802.2" y="403.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.2" y="414.0"></text>
</g>
<g>
<title>java.lang.String (395 samples, 0.15%)</title><rect x="802.2" y="387.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="805.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,090 samples, 0.42%)</title><rect x="804.0" y="403.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="807.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,090 samples, 0.42%)</title><rect x="804.0" y="387.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.0" y="398.0"></text>
</g>
<g>
<title>byte[] (1,048 samples, 0.40%)</title><rect x="804.0" y="371.0" width="4.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="807.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (2,644 samples, 1.02%)</title><rect x="809.0" y="467.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="812.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (836 samples, 0.32%)</title><rect x="809.0" y="451.0" width="3.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="812.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (1,770 samples, 0.68%)</title><rect x="813.0" y="451.0" width="8.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="816.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,770 samples, 0.68%)</title><rect x="813.0" y="435.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="816.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/282265585.invoke (1,770 samples, 0.68%)</title><rect x="813.0" y="419.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="816.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,770 samples, 0.68%)</title><rect x="813.0" y="403.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="816.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (317 samples, 0.12%)</title><rect x="813.0" y="387.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="816.0" y="398.0"></text>
</g>
<g>
<title>java.lang.String (317 samples, 0.12%)</title><rect x="813.0" y="371.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="816.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1,453 samples, 0.56%)</title><rect x="814.4" y="387.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="817.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1,453 samples, 0.56%)</title><rect x="814.4" y="371.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="817.4" y="382.0"></text>
</g>
<g>
<title>byte[] (1,214 samples, 0.47%)</title><rect x="814.4" y="355.0" width="5.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="817.4" y="366.0"></text>
</g>
<g>
<title>byte[] (239 samples, 0.09%)</title><rect x="819.9" y="355.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="822.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$446/989563096.apply (916 samples, 0.35%)</title><rect x="821.0" y="595.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="824.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (916 samples, 0.35%)</title><rect x="821.0" y="579.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="824.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (475 samples, 0.18%)</title><rect x="821.0" y="563.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.0" y="574.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (475 samples, 0.18%)</title><rect x="821.0" y="547.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="824.0" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (475 samples, 0.18%)</title><rect x="821.0" y="531.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="824.0" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (475 samples, 0.18%)</title><rect x="821.0" y="515.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="824.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (441 samples, 0.17%)</title><rect x="823.1" y="563.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (441 samples, 0.17%)</title><rect x="823.1" y="547.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="826.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (467 samples, 0.18%)</title><rect x="825.1" y="611.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (467 samples, 0.18%)</title><rect x="825.1" y="595.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="828.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$449/843290145.apply (467 samples, 0.18%)</title><rect x="825.1" y="579.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="828.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (467 samples, 0.18%)</title><rect x="825.1" y="563.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="828.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (467 samples, 0.18%)</title><rect x="825.1" y="547.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="828.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (467 samples, 0.18%)</title><rect x="825.1" y="531.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="828.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$553/1767458720.apply (723 samples, 0.28%)</title><rect x="827.3" y="643.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="830.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (723 samples, 0.28%)</title><rect x="827.3" y="627.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.3" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (723 samples, 0.28%)</title><rect x="827.3" y="611.0" width="3.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="830.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (27,852 samples, 10.72%)</title><rect x="830.6" y="755.0" width="126.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="833.6" y="766.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (1,849 samples, 0.71%)</title><rect x="830.6" y="739.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="833.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1,849 samples, 0.71%)</title><rect x="830.6" y="723.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="833.6" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1,849 samples, 0.71%)</title><rect x="830.6" y="707.0" width="8.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="833.6" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1,849 samples, 0.71%)</title><rect x="830.6" y="691.0" width="8.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="833.6" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,849 samples, 0.71%)</title><rect x="830.6" y="675.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="833.6" y="686.0"></text>
</g>
<g>
<title>byte[] (1,799 samples, 0.69%)</title><rect x="830.6" y="659.0" width="8.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="833.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (1,125 samples, 0.43%)</title><rect x="838.9" y="739.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="841.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1,125 samples, 0.43%)</title><rect x="838.9" y="723.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="841.9" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1,125 samples, 0.43%)</title><rect x="838.9" y="707.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="841.9" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1,125 samples, 0.43%)</title><rect x="838.9" y="691.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="841.9" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,125 samples, 0.43%)</title><rect x="838.9" y="675.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="841.9" y="686.0"></text>
</g>
<g>
<title>byte[] (1,099 samples, 0.42%)</title><rect x="838.9" y="659.0" width="5.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="841.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (2,310 samples, 0.89%)</title><rect x="844.1" y="739.0" width="10.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="847.1" y="750.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (411 samples, 0.16%)</title><rect x="844.1" y="723.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="847.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (405 samples, 0.16%)</title><rect x="845.9" y="723.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="848.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (405 samples, 0.16%)</title><rect x="845.9" y="707.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="848.9" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (405 samples, 0.16%)</title><rect x="845.9" y="691.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="848.9" y="702.0"></text>
</g>
<g>
<title>byte[] (405 samples, 0.16%)</title><rect x="845.9" y="675.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="848.9" y="686.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (514 samples, 0.20%)</title><rect x="847.8" y="723.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="850.8" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (514 samples, 0.20%)</title><rect x="847.8" y="707.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.8" y="718.0"></text>
</g>
<g>
<title>byte[] (514 samples, 0.20%)</title><rect x="847.8" y="691.0" width="2.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="850.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (980 samples, 0.38%)</title><rect x="850.1" y="723.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="853.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (980 samples, 0.38%)</title><rect x="850.1" y="707.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.1" y="718.0"></text>
</g>
<g>
<title>java.lang.String (351 samples, 0.14%)</title><rect x="850.1" y="691.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="853.1" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (629 samples, 0.24%)</title><rect x="851.7" y="691.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="854.7" y="702.0"></text>
</g>
<g>
<title>byte[] (629 samples, 0.24%)</title><rect x="851.7" y="675.0" width="2.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="854.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (7,307 samples, 2.81%)</title><rect x="854.5" y="739.0" width="33.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="857.5" y="750.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (7,307 samples, 2.81%)</title><rect x="854.5" y="723.0" width="33.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="857.5" y="734.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (7,307 samples, 2.81%)</title><rect x="854.5" y="707.0" width="33.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="857.5" y="718.0">ja..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (236 samples, 0.09%)</title><rect x="854.5" y="691.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="857.5" y="702.0"></text>
</g>
<g>
<title>java.util.ArrayList (456 samples, 0.18%)</title><rect x="855.6" y="691.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="858.6" y="702.0"></text>
</g>
<g>
<title>java.util.TreeMap (775 samples, 0.30%)</title><rect x="857.7" y="691.0" width="3.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="860.7" y="702.0"></text>
</g>
<g>
<title>java.util.TreeSet (270 samples, 0.10%)</title><rect x="861.2" y="691.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="864.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (490 samples, 0.19%)</title><rect x="862.4" y="691.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="865.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (490 samples, 0.19%)</title><rect x="862.4" y="675.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="865.4" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.get$Lambda (490 samples, 0.19%)</title><rect x="862.4" y="659.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="865.4" y="670.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$139 (490 samples, 0.19%)</title><rect x="862.4" y="643.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="865.4" y="654.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (502 samples, 0.19%)</title><rect x="864.7" y="691.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="867.7" y="702.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (502 samples, 0.19%)</title><rect x="864.7" y="675.0" width="2.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="867.7" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (3,865 samples, 1.49%)</title><rect x="866.9" y="691.0" width="17.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="869.9" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.accept (3,865 samples, 1.49%)</title><rect x="866.9" y="675.0" width="17.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="869.9" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3,865 samples, 1.49%)</title><rect x="866.9" y="659.0" width="17.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="869.9" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,008 samples, 0.39%)</title><rect x="866.9" y="643.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="869.9" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.accept (1,008 samples, 0.39%)</title><rect x="866.9" y="627.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="869.9" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1,008 samples, 0.39%)</title><rect x="866.9" y="611.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="869.9" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,008 samples, 0.39%)</title><rect x="866.9" y="595.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="869.9" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,008 samples, 0.39%)</title><rect x="866.9" y="579.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="869.9" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,008 samples, 0.39%)</title><rect x="866.9" y="563.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="869.9" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,008 samples, 0.39%)</title><rect x="866.9" y="547.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="869.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,008 samples, 0.39%)</title><rect x="866.9" y="531.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="869.9" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (997 samples, 0.38%)</title><rect x="866.9" y="515.0" width="4.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="869.9" y="526.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,555 samples, 0.60%)</title><rect x="871.5" y="643.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="874.5" y="654.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,555 samples, 0.60%)</title><rect x="871.5" y="627.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="874.5" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (767 samples, 0.30%)</title><rect x="871.5" y="611.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="874.5" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (767 samples, 0.30%)</title><rect x="871.5" y="595.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="874.5" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (767 samples, 0.30%)</title><rect x="871.5" y="579.0" width="3.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="874.5" y="590.0"></text>
</g>
<g>
<title>java/util/List.of (788 samples, 0.30%)</title><rect x="875.0" y="611.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="878.0" y="622.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (788 samples, 0.30%)</title><rect x="875.0" y="595.0" width="3.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="878.0" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1,302 samples, 0.50%)</title><rect x="878.6" y="643.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="881.6" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1,302 samples, 0.50%)</title><rect x="878.6" y="627.0" width="5.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="881.6" y="638.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (713 samples, 0.27%)</title><rect x="884.5" y="691.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="887.5" y="702.0"></text>
</g>
<g>
<title>java.util.TreeMap (713 samples, 0.27%)</title><rect x="884.5" y="675.0" width="3.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="887.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (15,261 samples, 5.87%)</title><rect x="887.7" y="739.0" width="69.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="890.7" y="750.0">jdk/int..</text>
</g>
<g>
<title>java.lang.StringBuilder (806 samples, 0.31%)</title><rect x="887.7" y="723.0" width="3.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="890.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (913 samples, 0.35%)</title><rect x="891.4" y="723.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="894.4" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (913 samples, 0.35%)</title><rect x="891.4" y="707.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="894.4" y="718.0"></text>
</g>
<g>
<title>byte[] (913 samples, 0.35%)</title><rect x="891.4" y="691.0" width="4.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="894.4" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2,056 samples, 0.79%)</title><rect x="895.5" y="723.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="898.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,056 samples, 0.79%)</title><rect x="895.5" y="707.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="898.5" y="718.0"></text>
</g>
<g>
<title>java.lang.String (715 samples, 0.28%)</title><rect x="895.5" y="691.0" width="3.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="898.5" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,341 samples, 0.52%)</title><rect x="898.8" y="691.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="901.8" y="702.0"></text>
</g>
<g>
<title>byte[] (1,341 samples, 0.52%)</title><rect x="898.8" y="675.0" width="6.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="901.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (11,486 samples, 4.42%)</title><rect x="904.9" y="723.0" width="52.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="907.9" y="734.0">jdk/i..</text>
</g>
<g>
<title>java/lang/String.substring (3,343 samples, 1.29%)</title><rect x="904.9" y="707.0" width="15.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="907.9" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,343 samples, 1.29%)</title><rect x="904.9" y="691.0" width="15.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="907.9" y="702.0"></text>
</g>
<g>
<title>java.lang.String (1,543 samples, 0.59%)</title><rect x="904.9" y="675.0" width="7.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="907.9" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,800 samples, 0.69%)</title><rect x="911.9" y="675.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="914.9" y="686.0"></text>
</g>
<g>
<title>byte[] (1,800 samples, 0.69%)</title><rect x="911.9" y="659.0" width="8.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="914.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1,807 samples, 0.70%)</title><rect x="920.0" y="707.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="923.0" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1,807 samples, 0.70%)</title><rect x="920.0" y="691.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="923.0" y="702.0"></text>
</g>
<g>
<title>byte[] (1,029 samples, 0.40%)</title><rect x="920.0" y="675.0" width="4.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="923.0" y="686.0"></text>
</g>
<g>
<title>java.lang.String (778 samples, 0.30%)</title><rect x="924.7" y="675.0" width="3.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="927.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.trim (1,571 samples, 0.60%)</title><rect x="928.2" y="707.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="931.2" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1,571 samples, 0.60%)</title><rect x="928.2" y="691.0" width="7.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="931.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,571 samples, 0.60%)</title><rect x="928.2" y="675.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="931.2" y="686.0"></text>
</g>
<g>
<title>java.lang.String (715 samples, 0.28%)</title><rect x="928.2" y="659.0" width="3.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="931.2" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (856 samples, 0.33%)</title><rect x="931.5" y="659.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="934.5" y="670.0"></text>
</g>
<g>
<title>byte[] (856 samples, 0.33%)</title><rect x="931.5" y="643.0" width="3.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="934.5" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,895 samples, 0.73%)</title><rect x="935.4" y="707.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="938.4" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,895 samples, 0.73%)</title><rect x="935.4" y="691.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="938.4" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,895 samples, 0.73%)</title><rect x="935.4" y="675.0" width="8.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="938.4" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,895 samples, 0.73%)</title><rect x="935.4" y="659.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="938.4" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,895 samples, 0.73%)</title><rect x="935.4" y="643.0" width="8.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="938.4" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,835 samples, 0.71%)</title><rect x="935.4" y="627.0" width="8.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="938.4" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (60 samples, 0.02%)</title><rect x="943.7" y="627.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="946.7" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2,870 samples, 1.10%)</title><rect x="944.0" y="707.0" width="13.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="947.0" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1,011 samples, 0.39%)</title><rect x="944.0" y="691.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="947.0" y="702.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1,011 samples, 0.39%)</title><rect x="944.0" y="675.0" width="4.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="947.0" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1,189 samples, 0.46%)</title><rect x="948.6" y="691.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="951.6" y="702.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1,036 samples, 0.40%)</title><rect x="948.6" y="675.0" width="4.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="951.6" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (153 samples, 0.06%)</title><rect x="953.3" y="675.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="956.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$577/496477348.apply (670 samples, 0.26%)</title><rect x="954.0" y="691.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="957.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (670 samples, 0.26%)</title><rect x="954.0" y="675.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="957.0" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList (670 samples, 0.26%)</title><rect x="954.0" y="659.0" width="3.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="957.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (10,352 samples, 3.98%)</title><rect x="957.0" y="867.0" width="47.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="960.0" y="878.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10,352 samples, 3.98%)</title><rect x="957.0" y="851.0" width="47.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="960.0" y="862.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (10,352 samples, 3.98%)</title><rect x="957.0" y="835.0" width="47.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="960.0" y="846.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$284/316544207.run (10,352 samples, 3.98%)</title><rect x="957.0" y="819.0" width="47.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="960.0" y="830.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (10,352 samples, 3.98%)</title><rect x="957.0" y="803.0" width="47.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="960.0" y="814.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (10,228 samples, 3.94%)</title><rect x="957.0" y="787.0" width="46.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="960.0" y="798.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (591 samples, 0.23%)</title><rect x="957.0" y="771.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="960.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (591 samples, 0.23%)</title><rect x="957.0" y="755.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="960.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$386/1151365282.get$Lambda (303 samples, 0.12%)</title><rect x="957.0" y="739.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="960.0" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$386 (303 samples, 0.12%)</title><rect x="957.0" y="723.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="960.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$394/574621129.get$Lambda (288 samples, 0.11%)</title><rect x="958.4" y="739.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="961.4" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$394 (288 samples, 0.11%)</title><rect x="958.4" y="723.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="961.4" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (576 samples, 0.22%)</title><rect x="959.7" y="771.0" width="2.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="962.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (594 samples, 0.23%)</title><rect x="962.3" y="771.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="965.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (594 samples, 0.23%)</title><rect x="962.3" y="755.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="965.3" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (263 samples, 0.10%)</title><rect x="962.3" y="739.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="965.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (331 samples, 0.13%)</title><rect x="963.5" y="739.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="966.5" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (331 samples, 0.13%)</title><rect x="963.5" y="723.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="966.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (8,467 samples, 3.26%)</title><rect x="965.0" y="771.0" width="38.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="968.0" y="782.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (8,467 samples, 3.26%)</title><rect x="965.0" y="755.0" width="38.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="968.0" y="766.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$589/1973295159.run (7,479 samples, 2.88%)</title><rect x="965.0" y="739.0" width="34.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="968.0" y="750.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (7,479 samples, 2.88%)</title><rect x="965.0" y="723.0" width="34.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="968.0" y="734.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (7,479 samples, 2.88%)</title><rect x="965.0" y="707.0" width="34.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="968.0" y="718.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2,243 samples, 0.86%)</title><rect x="965.0" y="691.0" width="10.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="968.0" y="702.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1,481 samples, 0.57%)</title><rect x="965.0" y="675.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="968.0" y="686.0"></text>
</g>
<g>
<title>java/util/List.spliterator (552 samples, 0.21%)</title><rect x="965.0" y="659.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="968.0" y="670.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (552 samples, 0.21%)</title><rect x="965.0" y="643.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="968.0" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (929 samples, 0.36%)</title><rect x="967.5" y="659.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="970.5" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (920 samples, 0.35%)</title><rect x="967.5" y="643.0" width="4.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="970.5" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (762 samples, 0.29%)</title><rect x="971.7" y="675.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="974.7" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (762 samples, 0.29%)</title><rect x="971.7" y="659.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="974.7" y="670.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (762 samples, 0.29%)</title><rect x="971.7" y="643.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="974.7" y="654.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$67/2082781203.get (356 samples, 0.14%)</title><rect x="971.7" y="627.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="974.7" y="638.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (356 samples, 0.14%)</title><rect x="971.7" y="611.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="974.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (406 samples, 0.16%)</title><rect x="973.3" y="627.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="976.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (406 samples, 0.16%)</title><rect x="973.3" y="611.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="976.3" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.of (406 samples, 0.16%)</title><rect x="973.3" y="595.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="976.3" y="606.0"></text>
</g>
<g>
<title>java.util.Optional (406 samples, 0.16%)</title><rect x="973.3" y="579.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="976.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5,236 samples, 2.01%)</title><rect x="975.2" y="691.0" width="23.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="978.2" y="702.0">j..</text>
</g>
<g>
<title>java/time/Instant.now (403 samples, 0.16%)</title><rect x="975.2" y="675.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="978.2" y="686.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (403 samples, 0.16%)</title><rect x="975.2" y="659.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="978.2" y="670.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (403 samples, 0.16%)</title><rect x="975.2" y="643.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="978.2" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.create (403 samples, 0.16%)</title><rect x="975.2" y="627.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="978.2" y="638.0"></text>
</g>
<g>
<title>java.time.Instant (403 samples, 0.16%)</title><rect x="975.2" y="611.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="978.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (4,833 samples, 1.86%)</title><rect x="977.0" y="675.0" width="22.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="980.0" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1,947 samples, 0.75%)</title><rect x="977.0" y="659.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="980.0" y="670.0"></text>
</g>
<g>
<title>java/time/Instant.plus (333 samples, 0.13%)</title><rect x="977.0" y="643.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="980.0" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (333 samples, 0.13%)</title><rect x="977.0" y="627.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="980.0" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.plus (333 samples, 0.13%)</title><rect x="977.0" y="611.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="980.0" y="622.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (333 samples, 0.13%)</title><rect x="977.0" y="595.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="980.0" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.create (333 samples, 0.13%)</title><rect x="977.0" y="579.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="980.0" y="590.0"></text>
</g>
<g>
<title>java.time.Instant (333 samples, 0.13%)</title><rect x="977.0" y="563.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="980.0" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (401 samples, 0.15%)</title><rect x="978.5" y="643.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="981.5" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (401 samples, 0.15%)</title><rect x="978.5" y="627.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="981.5" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.plus (401 samples, 0.15%)</title><rect x="978.5" y="611.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="981.5" y="622.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (401 samples, 0.15%)</title><rect x="978.5" y="595.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="981.5" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.create (401 samples, 0.15%)</title><rect x="978.5" y="579.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="981.5" y="590.0"></text>
</g>
<g>
<title>java.time.Instant (401 samples, 0.15%)</title><rect x="978.5" y="563.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="981.5" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (507 samples, 0.20%)</title><rect x="980.3" y="643.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="983.3" y="654.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (507 samples, 0.20%)</title><rect x="980.3" y="627.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="983.3" y="638.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (507 samples, 0.20%)</title><rect x="980.3" y="611.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="983.3" y="622.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (304 samples, 0.12%)</title><rect x="982.9" y="643.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="985.9" y="654.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (304 samples, 0.12%)</title><rect x="982.9" y="627.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="985.9" y="638.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (304 samples, 0.12%)</title><rect x="982.9" y="611.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="985.9" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (356 samples, 0.14%)</title><rect x="984.2" y="643.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="987.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (1,245 samples, 0.48%)</title><rect x="985.8" y="659.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="988.8" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.get (423 samples, 0.16%)</title><rect x="985.8" y="643.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="988.8" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (423 samples, 0.16%)</title><rect x="985.8" y="627.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="988.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (423 samples, 0.16%)</title><rect x="985.8" y="611.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="988.8" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (423 samples, 0.16%)</title><rect x="985.8" y="595.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="988.8" y="606.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (352 samples, 0.14%)</title><rect x="987.8" y="643.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="990.8" y="654.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (352 samples, 0.14%)</title><rect x="987.8" y="627.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="990.8" y="638.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (352 samples, 0.14%)</title><rect x="987.8" y="611.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="990.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (470 samples, 0.18%)</title><rect x="989.4" y="643.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="992.4" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (470 samples, 0.18%)</title><rect x="989.4" y="627.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="992.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1,641 samples, 0.63%)</title><rect x="991.5" y="659.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="994.5" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (345 samples, 0.13%)</title><rect x="991.5" y="643.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="994.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1,296 samples, 0.50%)</title><rect x="993.1" y="643.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="996.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (404 samples, 0.16%)</title><rect x="993.1" y="627.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="996.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (404 samples, 0.16%)</title><rect x="993.1" y="611.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="996.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (404 samples, 0.16%)</title><rect x="993.1" y="595.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="996.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (404 samples, 0.16%)</title><rect x="993.1" y="579.0" width="1.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="996.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (892 samples, 0.34%)</title><rect x="994.9" y="627.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="997.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (892 samples, 0.34%)</title><rect x="994.9" y="611.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="997.9" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (673 samples, 0.26%)</title><rect x="994.9" y="595.0" width="3.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="997.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (219 samples, 0.08%)</title><rect x="998.0" y="595.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1001.0" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (219 samples, 0.08%)</title><rect x="998.0" y="579.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1001.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (988 samples, 0.38%)</title><rect x="999.0" y="739.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1002.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (988 samples, 0.38%)</title><rect x="999.0" y="723.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1002.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (988 samples, 0.38%)</title><rect x="999.0" y="707.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1002.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (988 samples, 0.38%)</title><rect x="999.0" y="691.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1002.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (988 samples, 0.38%)</title><rect x="999.0" y="675.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1002.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (988 samples, 0.38%)</title><rect x="999.0" y="659.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1002.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (988 samples, 0.38%)</title><rect x="999.0" y="643.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1002.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$601/301086023.accept (988 samples, 0.38%)</title><rect x="999.0" y="627.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1002.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (988 samples, 0.38%)</title><rect x="999.0" y="611.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1002.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (988 samples, 0.38%)</title><rect x="999.0" y="595.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1002.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (988 samples, 0.38%)</title><rect x="999.0" y="579.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1002.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (988 samples, 0.38%)</title><rect x="999.0" y="563.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1002.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$607/831886457.apply (988 samples, 0.38%)</title><rect x="999.0" y="547.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1002.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (988 samples, 0.38%)</title><rect x="999.0" y="531.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1002.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (962 samples, 0.37%)</title><rect x="999.0" y="515.0" width="4.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1002.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (124 samples, 0.05%)</title><rect x="1003.4" y="787.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1006.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (124 samples, 0.05%)</title><rect x="1003.4" y="771.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1006.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (124 samples, 0.05%)</title><rect x="1003.4" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1006.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (124 samples, 0.05%)</title><rect x="1003.4" y="739.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1006.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (66 samples, 0.03%)</title><rect x="1003.4" y="723.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1006.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (66 samples, 0.03%)</title><rect x="1003.4" y="707.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1006.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (66 samples, 0.03%)</title><rect x="1003.4" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1006.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (66 samples, 0.03%)</title><rect x="1003.4" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1006.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (66 samples, 0.03%)</title><rect x="1003.4" y="659.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1006.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (66 samples, 0.03%)</title><rect x="1003.4" y="643.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1006.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (66 samples, 0.03%)</title><rect x="1003.4" y="627.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1006.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (62 samples, 0.02%)</title><rect x="1003.4" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1006.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (62 samples, 0.02%)</title><rect x="1003.4" y="595.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1006.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (61 samples, 0.02%)</title><rect x="1003.4" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1006.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (58 samples, 0.02%)</title><rect x="1003.7" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1006.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/TableFlusher$$Lambda$615/147485244.run (309 samples, 0.12%)</title><rect x="1004.0" y="899.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1007.0" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/TableFlusher.lambda$flush$0 (309 samples, 0.12%)</title><rect x="1004.0" y="883.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1007.0" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/DAOImpl.flushAndOpen (309 samples, 0.12%)</title><rect x="1004.0" y="867.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1007.0" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/DAOImpl.flushEntries (308 samples, 0.12%)</title><rect x="1004.0" y="851.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1007.0" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/Table.flushEntries (307 samples, 0.12%)</title><rect x="1004.0" y="835.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1007.0" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (91 samples, 0.04%)</title><rect x="1004.0" y="819.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1007.0" y="830.0"></text>
</g>
<g>
<title>java.lang.Integer (91 samples, 0.04%)</title><rect x="1004.0" y="803.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1007.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/vaddya/ByteBufferUtils.fromTableEntry (204 samples, 0.08%)</title><rect x="1004.5" y="819.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1007.5" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (204 samples, 0.08%)</title><rect x="1004.5" y="803.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1007.5" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (152 samples, 0.06%)</title><rect x="1004.7" y="787.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1007.7" y="798.0"></text>
</g>
<g>
<title>byte[] (152 samples, 0.06%)</title><rect x="1004.7" y="771.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1007.7" y="782.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (193 samples, 0.07%)</title><rect x="1005.4" y="899.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1008.4" y="910.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (192 samples, 0.07%)</title><rect x="1005.4" y="883.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1008.4" y="894.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$649/1665945264.run (192 samples, 0.07%)</title><rect x="1005.4" y="867.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1008.4" y="878.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (192 samples, 0.07%)</title><rect x="1005.4" y="851.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1008.4" y="862.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (192 samples, 0.07%)</title><rect x="1005.4" y="835.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1008.4" y="846.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (192 samples, 0.07%)</title><rect x="1005.4" y="819.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1008.4" y="830.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (162 samples, 0.06%)</title><rect x="1005.5" y="803.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1008.5" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (108 samples, 0.04%)</title><rect x="1005.5" y="787.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1008.5" y="798.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (108 samples, 0.04%)</title><rect x="1005.5" y="771.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1008.5" y="782.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (108 samples, 0.04%)</title><rect x="1005.5" y="755.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1008.5" y="766.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (108 samples, 0.04%)</title><rect x="1005.5" y="739.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1008.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (9,490 samples, 3.65%)</title><rect x="1006.3" y="947.0" width="43.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1009.3" y="958.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (9,490 samples, 3.65%)</title><rect x="1006.3" y="931.0" width="43.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1009.3" y="942.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (9,490 samples, 3.65%)</title><rect x="1006.3" y="915.0" width="43.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1009.3" y="926.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (9,490 samples, 3.65%)</title><rect x="1006.3" y="899.0" width="43.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1009.3" y="910.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (9,490 samples, 3.65%)</title><rect x="1006.3" y="883.0" width="43.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1009.3" y="894.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (9,490 samples, 3.65%)</title><rect x="1006.3" y="867.0" width="43.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1009.3" y="878.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (9,490 samples, 3.65%)</title><rect x="1006.3" y="851.0" width="43.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1009.3" y="862.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (9,490 samples, 3.65%)</title><rect x="1006.3" y="835.0" width="43.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1009.3" y="846.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9,490 samples, 3.65%)</title><rect x="1006.3" y="819.0" width="43.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1009.3" y="830.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (9,490 samples, 3.65%)</title><rect x="1006.3" y="803.0" width="43.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1009.3" y="814.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (9,490 samples, 3.65%)</title><rect x="1006.3" y="787.0" width="43.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1009.3" y="798.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils$$Lambda$170/1308121008.accept (9,490 samples, 3.65%)</title><rect x="1006.3" y="771.0" width="43.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1009.3" y="782.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils.lambda$firstN$0 (9,490 samples, 3.65%)</title><rect x="1006.3" y="755.0" width="43.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1009.3" y="766.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (9,487 samples, 3.65%)</title><rect x="1006.3" y="739.0" width="43.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1009.3" y="750.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9,487 samples, 3.65%)</title><rect x="1006.3" y="723.0" width="43.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1009.3" y="734.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (4,421 samples, 1.70%)</title><rect x="1006.3" y="707.0" width="20.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1009.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$180/792115192.accept (4,421 samples, 1.70%)</title><rect x="1006.3" y="691.0" width="20.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1009.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ServiceSession.send (4,421 samples, 1.70%)</title><rect x="1006.3" y="675.0" width="20.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1009.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4,421 samples, 1.70%)</title><rect x="1006.3" y="659.0" width="20.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1009.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (4,421 samples, 1.70%)</title><rect x="1006.3" y="643.0" width="20.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1009.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4,398 samples, 1.69%)</title><rect x="1006.3" y="627.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1009.3" y="638.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4,398 samples, 1.69%)</title><rect x="1006.3" y="611.0" width="20.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1009.3" y="622.0"></text>
</g>
<g>
<title>byte[] (4,341 samples, 1.67%)</title><rect x="1006.3" y="595.0" width="19.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1009.3" y="606.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.02%)</title><rect x="1026.0" y="595.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1029.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (5,066 samples, 1.95%)</title><rect x="1026.4" y="707.0" width="23.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1029.4" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (5,066 samples, 1.95%)</title><rect x="1026.4" y="691.0" width="23.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1029.4" y="702.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$176/1817393118.apply (5,066 samples, 1.95%)</title><rect x="1026.4" y="675.0" width="23.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1029.4" y="686.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.lambda$schedulePutEntity$8 (5,066 samples, 1.95%)</title><rect x="1026.4" y="659.0" width="23.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1029.4" y="670.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.handleResponses (5,066 samples, 1.95%)</title><rect x="1026.4" y="643.0" width="23.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1029.4" y="654.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$462/664147513.apply (5,066 samples, 1.95%)</title><rect x="1026.4" y="627.0" width="23.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1029.4" y="638.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.lambda$schedulePutEntity$7 (5,066 samples, 1.95%)</title><rect x="1026.4" y="611.0" width="23.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1029.4" y="622.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/ResponseUtils.emptyResponse (5,066 samples, 1.95%)</title><rect x="1026.4" y="595.0" width="23.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1029.4" y="606.0">r..</text>
</g>
<g>
<title>one.nio.http.Response (423 samples, 0.16%)</title><rect x="1026.4" y="579.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1029.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4,643 samples, 1.79%)</title><rect x="1028.3" y="579.0" width="21.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1031.3" y="590.0">o..</text>
</g>
<g>
<title>byte[] (444 samples, 0.17%)</title><rect x="1028.3" y="563.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1031.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (4,142 samples, 1.59%)</title><rect x="1030.3" y="563.0" width="18.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1033.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (57 samples, 0.02%)</title><rect x="1049.1" y="563.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1052.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (6,391 samples, 2.46%)</title><rect x="1049.4" y="947.0" width="29.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1052.4" y="958.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (183 samples, 0.07%)</title><rect x="1049.4" y="931.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1052.4" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (183 samples, 0.07%)</title><rect x="1049.4" y="915.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1052.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$464/438529285.get$Lambda (95 samples, 0.04%)</title><rect x="1049.4" y="899.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1052.4" y="910.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$464 (95 samples, 0.04%)</title><rect x="1049.4" y="883.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1052.4" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/501107890.linkToTargetMethod (160 samples, 0.06%)</title><rect x="1050.2" y="931.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1053.2" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (160 samples, 0.06%)</title><rect x="1050.2" y="915.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1053.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$465/316465657.get$Lambda (160 samples, 0.06%)</title><rect x="1050.2" y="899.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1053.2" y="910.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$465 (160 samples, 0.06%)</title><rect x="1050.2" y="883.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1053.2" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,632 samples, 0.63%)</title><rect x="1050.9" y="931.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1053.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$466/42157458.accept (1,409 samples, 0.54%)</title><rect x="1050.9" y="915.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1053.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (1,409 samples, 0.54%)</title><rect x="1050.9" y="899.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1053.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (1,409 samples, 0.54%)</title><rect x="1050.9" y="883.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1053.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (1,408 samples, 0.54%)</title><rect x="1050.9" y="867.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1053.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (1,408 samples, 0.54%)</title><rect x="1050.9" y="851.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1053.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (1,408 samples, 0.54%)</title><rect x="1050.9" y="835.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1053.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,408 samples, 0.54%)</title><rect x="1050.9" y="819.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1053.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,408 samples, 0.54%)</title><rect x="1050.9" y="803.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1053.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,408 samples, 0.54%)</title><rect x="1050.9" y="787.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1053.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1,408 samples, 0.54%)</title><rect x="1050.9" y="771.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1053.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$240/1948350730.run (1,408 samples, 0.54%)</title><rect x="1050.9" y="755.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1053.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1,408 samples, 0.54%)</title><rect x="1050.9" y="739.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1053.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (316 samples, 0.12%)</title><rect x="1050.9" y="723.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1053.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (316 samples, 0.12%)</title><rect x="1050.9" y="707.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1053.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (316 samples, 0.12%)</title><rect x="1050.9" y="691.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1053.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (139 samples, 0.05%)</title><rect x="1050.9" y="675.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1053.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (139 samples, 0.05%)</title><rect x="1050.9" y="659.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1053.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (139 samples, 0.05%)</title><rect x="1050.9" y="643.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1053.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (139 samples, 0.05%)</title><rect x="1050.9" y="627.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1053.9" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (139 samples, 0.05%)</title><rect x="1050.9" y="611.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1053.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (177 samples, 0.07%)</title><rect x="1051.6" y="675.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1054.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (177 samples, 0.07%)</title><rect x="1051.6" y="659.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1054.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (177 samples, 0.07%)</title><rect x="1051.6" y="643.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1054.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (177 samples, 0.07%)</title><rect x="1051.6" y="627.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1054.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (177 samples, 0.07%)</title><rect x="1051.6" y="611.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1054.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (177 samples, 0.07%)</title><rect x="1051.6" y="595.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1054.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (177 samples, 0.07%)</title><rect x="1051.6" y="579.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1054.6" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (177 samples, 0.07%)</title><rect x="1051.6" y="563.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1054.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (108 samples, 0.04%)</title><rect x="1052.5" y="723.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1055.5" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (108 samples, 0.04%)</title><rect x="1052.5" y="707.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1055.5" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (108 samples, 0.04%)</title><rect x="1052.5" y="691.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1055.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$493/346832864.get$Lambda (108 samples, 0.04%)</title><rect x="1052.5" y="675.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1055.5" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$493 (108 samples, 0.04%)</title><rect x="1052.5" y="659.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1055.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (949 samples, 0.37%)</title><rect x="1053.0" y="723.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1056.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (379 samples, 0.15%)</title><rect x="1053.0" y="707.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1056.0" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (260 samples, 0.10%)</title><rect x="1053.0" y="691.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1056.0" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (260 samples, 0.10%)</title><rect x="1053.0" y="675.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1056.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (119 samples, 0.05%)</title><rect x="1054.2" y="691.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1057.2" y="702.0"></text>
</g>
<g>
<title>java/util/List.of (119 samples, 0.05%)</title><rect x="1054.2" y="675.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1057.2" y="686.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (119 samples, 0.05%)</title><rect x="1054.2" y="659.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1057.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (570 samples, 0.22%)</title><rect x="1054.7" y="707.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1057.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$231/121351836.get (570 samples, 0.22%)</title><rect x="1054.7" y="691.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1057.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (570 samples, 0.22%)</title><rect x="1054.7" y="675.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1057.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (570 samples, 0.22%)</title><rect x="1054.7" y="659.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1057.7" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (567 samples, 0.22%)</title><rect x="1054.8" y="643.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1057.8" y="654.0"></text>
</g>
<g>
<title>byte[] (536 samples, 0.21%)</title><rect x="1054.9" y="627.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1057.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$487/568802140.accept (223 samples, 0.09%)</title><rect x="1057.3" y="915.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1060.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (223 samples, 0.09%)</title><rect x="1057.3" y="899.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1060.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$465/316465657.run (223 samples, 0.09%)</title><rect x="1057.3" y="883.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1060.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (223 samples, 0.09%)</title><rect x="1057.3" y="867.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1060.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (223 samples, 0.09%)</title><rect x="1057.3" y="851.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1060.3" y="862.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (222 samples, 0.09%)</title><rect x="1057.3" y="835.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1060.3" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (222 samples, 0.09%)</title><rect x="1057.3" y="819.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1060.3" y="830.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (222 samples, 0.09%)</title><rect x="1057.3" y="803.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1060.3" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (413 samples, 0.16%)</title><rect x="1058.3" y="931.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1061.3" y="942.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (413 samples, 0.16%)</title><rect x="1058.3" y="915.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1061.3" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (280 samples, 0.11%)</title><rect x="1060.2" y="931.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1063.2" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (152 samples, 0.06%)</title><rect x="1060.2" y="915.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1063.2" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (152 samples, 0.06%)</title><rect x="1060.2" y="899.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1063.2" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (152 samples, 0.06%)</title><rect x="1060.2" y="883.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1063.2" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (152 samples, 0.06%)</title><rect x="1060.2" y="867.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1063.2" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (152 samples, 0.06%)</title><rect x="1060.2" y="851.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1063.2" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (152 samples, 0.06%)</title><rect x="1060.2" y="835.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1063.2" y="846.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (152 samples, 0.06%)</title><rect x="1060.2" y="819.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1063.2" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (128 samples, 0.05%)</title><rect x="1060.9" y="915.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1063.9" y="926.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (128 samples, 0.05%)</title><rect x="1060.9" y="899.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1063.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (1,007 samples, 0.39%)</title><rect x="1061.5" y="931.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1064.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$247/53036235.run (498 samples, 0.19%)</title><rect x="1061.5" y="915.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1064.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (498 samples, 0.19%)</title><rect x="1061.5" y="899.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1064.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (498 samples, 0.19%)</title><rect x="1061.5" y="883.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (498 samples, 0.19%)</title><rect x="1061.5" y="867.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1064.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (498 samples, 0.19%)</title><rect x="1061.5" y="851.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (498 samples, 0.19%)</title><rect x="1061.5" y="835.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$240/1948350730.run (498 samples, 0.19%)</title><rect x="1061.5" y="819.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1064.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (498 samples, 0.19%)</title><rect x="1061.5" y="803.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1064.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (484 samples, 0.19%)</title><rect x="1061.5" y="787.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1064.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (484 samples, 0.19%)</title><rect x="1061.5" y="771.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1064.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (274 samples, 0.11%)</title><rect x="1061.5" y="755.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (274 samples, 0.11%)</title><rect x="1061.5" y="739.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1064.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (274 samples, 0.11%)</title><rect x="1061.5" y="723.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.5" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1473981203.linkToTargetMethod (184 samples, 0.07%)</title><rect x="1061.5" y="707.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1064.5" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2129442232.invoke (184 samples, 0.07%)</title><rect x="1061.5" y="691.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (184 samples, 0.07%)</title><rect x="1061.5" y="675.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1064.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (184 samples, 0.07%)</title><rect x="1061.5" y="659.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1064.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (184 samples, 0.07%)</title><rect x="1061.5" y="643.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.5" y="654.0"></text>
</g>
<g>
<title>byte[] (184 samples, 0.07%)</title><rect x="1061.5" y="627.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1064.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (90 samples, 0.03%)</title><rect x="1062.3" y="707.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1065.3" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (90 samples, 0.03%)</title><rect x="1062.3" y="691.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1065.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (90 samples, 0.03%)</title><rect x="1062.3" y="675.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1065.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$493/346832864.get$Lambda (90 samples, 0.03%)</title><rect x="1062.3" y="659.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1065.3" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$493 (90 samples, 0.03%)</title><rect x="1062.3" y="643.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1065.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (210 samples, 0.08%)</title><rect x="1062.7" y="755.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1065.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (210 samples, 0.08%)</title><rect x="1062.7" y="739.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1065.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (210 samples, 0.08%)</title><rect x="1062.7" y="723.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1065.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (210 samples, 0.08%)</title><rect x="1062.7" y="707.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1065.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (210 samples, 0.08%)</title><rect x="1062.7" y="691.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1065.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (209 samples, 0.08%)</title><rect x="1062.7" y="675.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1065.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (209 samples, 0.08%)</title><rect x="1062.7" y="659.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1065.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (209 samples, 0.08%)</title><rect x="1062.7" y="643.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1065.7" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (209 samples, 0.08%)</title><rect x="1062.7" y="627.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1065.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$265/945591197.run (509 samples, 0.20%)</title><rect x="1063.7" y="915.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1066.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (509 samples, 0.20%)</title><rect x="1063.7" y="899.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1066.7" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (179 samples, 0.07%)</title><rect x="1063.7" y="883.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1066.7" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (179 samples, 0.07%)</title><rect x="1063.7" y="867.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1066.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$498/375914915.get$Lambda (179 samples, 0.07%)</title><rect x="1063.7" y="851.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1066.7" y="862.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$498 (179 samples, 0.07%)</title><rect x="1063.7" y="835.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1066.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (330 samples, 0.13%)</title><rect x="1064.6" y="883.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1067.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (330 samples, 0.13%)</title><rect x="1064.6" y="867.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1067.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (330 samples, 0.13%)</title><rect x="1064.6" y="851.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1067.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (330 samples, 0.13%)</title><rect x="1064.6" y="835.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1067.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (330 samples, 0.13%)</title><rect x="1064.6" y="819.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1067.6" y="830.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (330 samples, 0.13%)</title><rect x="1064.6" y="803.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1067.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1,176 samples, 0.45%)</title><rect x="1066.1" y="931.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1069.1" y="942.0"></text>
</g>
<g>
<title>java/time/Instant.now (340 samples, 0.13%)</title><rect x="1066.1" y="915.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1069.1" y="926.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (340 samples, 0.13%)</title><rect x="1066.1" y="899.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1069.1" y="910.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (340 samples, 0.13%)</title><rect x="1066.1" y="883.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1069.1" y="894.0"></text>
</g>
<g>
<title>java/time/Instant.create (340 samples, 0.13%)</title><rect x="1066.1" y="867.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1069.1" y="878.0"></text>
</g>
<g>
<title>java.time.Instant (340 samples, 0.13%)</title><rect x="1066.1" y="851.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1069.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (836 samples, 0.32%)</title><rect x="1067.6" y="915.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1070.6" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (179 samples, 0.07%)</title><rect x="1067.6" y="899.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1070.6" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (179 samples, 0.07%)</title><rect x="1067.6" y="883.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1070.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$613/626382417.get$Lambda (179 samples, 0.07%)</title><rect x="1067.6" y="867.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1070.6" y="878.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$613 (179 samples, 0.07%)</title><rect x="1067.6" y="851.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1070.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (657 samples, 0.25%)</title><rect x="1068.4" y="899.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1071.4" y="910.0"></text>
</g>
<g>
<title>java.util.ArrayList (272 samples, 0.10%)</title><rect x="1068.4" y="883.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1071.4" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (385 samples, 0.15%)</title><rect x="1069.7" y="883.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1072.7" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (385 samples, 0.15%)</title><rect x="1069.7" y="867.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1072.7" y="878.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (385 samples, 0.15%)</title><rect x="1069.7" y="851.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1072.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (1,008 samples, 0.39%)</title><rect x="1071.4" y="931.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1074.4" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (85 samples, 0.03%)</title><rect x="1071.4" y="915.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1074.4" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (85 samples, 0.03%)</title><rect x="1071.4" y="899.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1074.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$463/582870490.get$Lambda (85 samples, 0.03%)</title><rect x="1071.4" y="883.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1074.4" y="894.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$463 (85 samples, 0.03%)</title><rect x="1071.4" y="867.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1074.4" y="878.0"></text>
</g>
<g>
<title>java/util/Collection.stream (512 samples, 0.20%)</title><rect x="1071.8" y="915.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1074.8" y="926.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (212 samples, 0.08%)</title><rect x="1071.8" y="899.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1074.8" y="910.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (212 samples, 0.08%)</title><rect x="1071.8" y="883.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1074.8" y="894.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (300 samples, 0.12%)</title><rect x="1072.7" y="899.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1075.7" y="910.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (299 samples, 0.12%)</title><rect x="1072.7" y="883.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1075.7" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (411 samples, 0.16%)</title><rect x="1074.1" y="915.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1077.1" y="926.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (407 samples, 0.16%)</title><rect x="1074.1" y="899.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1077.1" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (276 samples, 0.11%)</title><rect x="1076.0" y="931.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1079.0" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (276 samples, 0.11%)</title><rect x="1076.0" y="915.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1079.0" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (276 samples, 0.11%)</title><rect x="1076.0" y="899.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1079.0" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (271 samples, 0.10%)</title><rect x="1076.0" y="883.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1079.0" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (94 samples, 0.04%)</title><rect x="1076.0" y="867.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1079.0" y="878.0"></text>
</g>
<g>
<title>java.lang.Integer (94 samples, 0.04%)</title><rect x="1076.0" y="851.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1079.0" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (177 samples, 0.07%)</title><rect x="1076.4" y="867.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1079.4" y="878.0"></text>
</g>
<g>
<title>java/util/HashSet.add (177 samples, 0.07%)</title><rect x="1076.4" y="851.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1079.4" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.put (177 samples, 0.07%)</title><rect x="1076.4" y="835.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1079.4" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (177 samples, 0.07%)</title><rect x="1076.4" y="819.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1079.4" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (177 samples, 0.07%)</title><rect x="1076.4" y="803.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1079.4" y="814.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (177 samples, 0.07%)</title><rect x="1076.4" y="787.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1079.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (103 samples, 0.04%)</title><rect x="1077.2" y="931.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1080.2" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (103 samples, 0.04%)</title><rect x="1077.2" y="915.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1080.2" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (103 samples, 0.04%)</title><rect x="1077.2" y="899.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1080.2" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (103 samples, 0.04%)</title><rect x="1077.2" y="883.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1080.2" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (96 samples, 0.04%)</title><rect x="1077.2" y="867.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1080.2" y="878.0"></text>
</g>
<g>
<title>java.lang.Integer (96 samples, 0.04%)</title><rect x="1077.2" y="851.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1080.2" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (150 samples, 0.06%)</title><rect x="1077.7" y="931.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1080.7" y="942.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (150 samples, 0.06%)</title><rect x="1077.7" y="915.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1080.7" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (150 samples, 0.06%)</title><rect x="1077.7" y="899.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1080.7" y="910.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (150 samples, 0.06%)</title><rect x="1077.7" y="883.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1080.7" y="894.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (64 samples, 0.02%)</title><rect x="1078.4" y="947.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1081.4" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.createSession (64 samples, 0.02%)</title><rect x="1078.4" y="931.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1081.4" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.createSession (64 samples, 0.02%)</title><rect x="1078.4" y="915.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1081.4" y="926.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (24,520 samples, 9.43%)</title><rect x="1078.7" y="947.0" width="111.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1081.7" y="958.0">one/nio/serve..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (180 samples, 0.07%)</title><rect x="1078.7" y="931.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1081.7" y="942.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (180 samples, 0.07%)</title><rect x="1078.7" y="915.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1081.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (24,338 samples, 9.36%)</title><rect x="1079.5" y="931.0" width="110.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1082.5" y="942.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (24,338 samples, 9.36%)</title><rect x="1079.5" y="915.0" width="110.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1082.5" y="926.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (24,337 samples, 9.36%)</title><rect x="1079.5" y="899.0" width="110.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1082.5" y="910.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (22,661 samples, 8.72%)</title><rect x="1079.5" y="883.0" width="102.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1082.5" y="894.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (22,661 samples, 8.72%)</title><rect x="1079.5" y="867.0" width="102.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1082.5" y="878.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (22,519 samples, 8.66%)</title><rect x="1079.5" y="851.0" width="102.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1082.5" y="862.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (142 samples, 0.05%)</title><rect x="1079.5" y="835.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1082.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (142 samples, 0.05%)</title><rect x="1079.5" y="819.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1082.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (142 samples, 0.05%)</title><rect x="1079.5" y="803.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1082.5" y="814.0"></text>
</g>
<g>
<title>java.lang.String (67 samples, 0.03%)</title><rect x="1079.5" y="787.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1082.5" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (75 samples, 0.03%)</title><rect x="1079.8" y="787.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1082.8" y="798.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.03%)</title><rect x="1079.8" y="771.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1082.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.entity (22,377 samples, 8.61%)</title><rect x="1080.1" y="835.0" width="101.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1083.1" y="846.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.schedulePutEntity (22,377 samples, 8.61%)</title><rect x="1080.1" y="819.0" width="101.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1083.1" y="830.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (165 samples, 0.06%)</title><rect x="1080.1" y="803.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1083.1" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (165 samples, 0.06%)</title><rect x="1080.1" y="787.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1083.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$126/156629683.get$Lambda (63 samples, 0.02%)</title><rect x="1080.3" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1083.3" y="782.0"></text>
</g>
<g>
<title>ru.mail.polis.service.vaddya.HttpService$$Lambda$126 (63 samples, 0.02%)</title><rect x="1080.3" y="755.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1083.3" y="766.0"></text>
</g>
<g>
<title>java/util/Collection.stream (266 samples, 0.10%)</title><rect x="1080.9" y="803.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1083.9" y="814.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (93 samples, 0.04%)</title><rect x="1080.9" y="787.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1083.9" y="798.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (93 samples, 0.04%)</title><rect x="1080.9" y="771.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1083.9" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (173 samples, 0.07%)</title><rect x="1081.3" y="787.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1084.3" y="798.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (171 samples, 0.07%)</title><rect x="1081.3" y="771.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1084.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (179 samples, 0.07%)</title><rect x="1082.1" y="803.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1085.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (179 samples, 0.07%)</title><rect x="1082.1" y="787.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1085.1" y="798.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (120 samples, 0.05%)</title><rect x="1082.1" y="771.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1085.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (59 samples, 0.02%)</title><rect x="1082.6" y="771.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1085.6" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (59 samples, 0.02%)</title><rect x="1082.6" y="755.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1085.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (182 samples, 0.07%)</title><rect x="1082.9" y="803.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1085.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (182 samples, 0.07%)</title><rect x="1082.9" y="787.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1085.9" y="798.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (113 samples, 0.04%)</title><rect x="1082.9" y="771.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1085.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (69 samples, 0.03%)</title><rect x="1083.4" y="771.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1086.4" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (69 samples, 0.03%)</title><rect x="1083.4" y="755.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1086.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (98 samples, 0.04%)</title><rect x="1083.7" y="803.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1086.7" y="814.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (98 samples, 0.04%)</title><rect x="1083.7" y="787.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1086.7" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (18,286 samples, 7.04%)</title><rect x="1084.2" y="803.0" width="83.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1087.2" y="814.0">java/util..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (18,206 samples, 7.00%)</title><rect x="1084.2" y="787.0" width="82.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1087.2" y="798.0">java/util..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (18,206 samples, 7.00%)</title><rect x="1084.2" y="771.0" width="82.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1087.2" y="782.0">java/util..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (18,119 samples, 6.97%)</title><rect x="1084.2" y="755.0" width="82.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1087.2" y="766.0">java/util..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (17,984 samples, 6.92%)</title><rect x="1084.2" y="739.0" width="81.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1087.2" y="750.0">java/util..</text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (17,900 samples, 6.89%)</title><rect x="1084.2" y="723.0" width="81.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1087.2" y="734.0">java/util..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (17,900 samples, 6.89%)</title><rect x="1084.2" y="707.0" width="81.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1087.2" y="718.0">java/util..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (17,900 samples, 6.89%)</title><rect x="1084.2" y="691.0" width="81.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1087.2" y="702.0">java/util..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (161 samples, 0.06%)</title><rect x="1084.2" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1087.2" y="686.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$27/1043208434.accept (161 samples, 0.06%)</title><rect x="1084.2" y="659.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1087.2" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (161 samples, 0.06%)</title><rect x="1084.2" y="643.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1087.2" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (161 samples, 0.06%)</title><rect x="1084.2" y="627.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1087.2" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (161 samples, 0.06%)</title><rect x="1084.2" y="611.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1087.2" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (161 samples, 0.06%)</title><rect x="1084.2" y="595.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1087.2" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (161 samples, 0.06%)</title><rect x="1084.2" y="579.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1087.2" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (161 samples, 0.06%)</title><rect x="1084.2" y="563.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1087.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$$Lambda$126/156629683.apply (17,739 samples, 6.83%)</title><rect x="1084.9" y="675.0" width="80.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1087.9" y="686.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService.lambda$schedulePutEntity$6 (17,739 samples, 6.83%)</title><rect x="1084.9" y="659.0" width="80.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1087.9" y="670.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$LocalServiceClient.putAsync (281 samples, 0.11%)</title><rect x="1084.9" y="643.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1087.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (56 samples, 0.02%)</title><rect x="1084.9" y="627.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1087.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (56 samples, 0.02%)</title><rect x="1084.9" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1087.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpService$LocalServiceClient$$Lambda$131/1534001839.get$Lambda (56 samples, 0.02%)</title><rect x="1084.9" y="595.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1087.9" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.vaddya.HttpService$LocalServiceClient$$Lambda$131 (56 samples, 0.02%)</title><rect x="1084.9" y="579.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1087.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (225 samples, 0.09%)</title><rect x="1085.2" y="627.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1088.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (225 samples, 0.09%)</title><rect x="1085.2" y="611.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1088.2" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (71 samples, 0.03%)</title><rect x="1085.2" y="595.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1088.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (67 samples, 0.03%)</title><rect x="1085.5" y="595.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1088.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (87 samples, 0.03%)</title><rect x="1085.8" y="595.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1088.8" y="606.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (78 samples, 0.03%)</title><rect x="1085.8" y="579.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1088.8" y="590.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (78 samples, 0.03%)</title><rect x="1085.8" y="563.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1088.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (78 samples, 0.03%)</title><rect x="1085.8" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1088.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (78 samples, 0.03%)</title><rect x="1085.8" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1088.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (78 samples, 0.03%)</title><rect x="1085.8" y="515.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1088.8" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (78 samples, 0.03%)</title><rect x="1085.8" y="499.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1088.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpServiceClient.putAsync (17,458 samples, 6.72%)</title><rect x="1086.2" y="643.0" width="79.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1089.2" y="654.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/Integer.valueOf (76 samples, 0.03%)</title><rect x="1086.2" y="627.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1089.2" y="638.0"></text>
</g>
<g>
<title>java.lang.Integer (76 samples, 0.03%)</title><rect x="1086.2" y="611.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1089.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (411 samples, 0.16%)</title><rect x="1086.5" y="627.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1089.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (411 samples, 0.16%)</title><rect x="1086.5" y="611.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1089.5" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (228 samples, 0.09%)</title><rect x="1086.5" y="595.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1089.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (183 samples, 0.07%)</title><rect x="1087.6" y="595.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1090.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (183 samples, 0.07%)</title><rect x="1087.6" y="579.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1090.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (183 samples, 0.07%)</title><rect x="1087.6" y="563.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1090.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (10,855 samples, 4.18%)</title><rect x="1088.4" y="627.0" width="49.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1091.4" y="638.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (10,855 samples, 4.18%)</title><rect x="1088.4" y="611.0" width="49.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1091.4" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (10,855 samples, 4.18%)</title><rect x="1088.4" y="595.0" width="49.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1091.4" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (10,855 samples, 4.18%)</title><rect x="1088.4" y="579.0" width="49.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1091.4" y="590.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (106 samples, 0.04%)</title><rect x="1088.4" y="563.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1091.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (106 samples, 0.04%)</title><rect x="1088.4" y="547.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1091.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$154/180352869.get$Lambda (106 samples, 0.04%)</title><rect x="1088.4" y="531.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1091.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$154 (106 samples, 0.04%)</title><rect x="1088.4" y="515.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1091.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (368 samples, 0.14%)</title><rect x="1088.9" y="563.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1091.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (368 samples, 0.14%)</title><rect x="1088.9" y="547.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1091.9" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (210 samples, 0.08%)</title><rect x="1088.9" y="531.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1091.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (158 samples, 0.06%)</title><rect x="1089.8" y="531.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1092.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (158 samples, 0.06%)</title><rect x="1089.8" y="515.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1092.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (158 samples, 0.06%)</title><rect x="1089.8" y="499.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1092.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (353 samples, 0.14%)</title><rect x="1090.6" y="563.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1093.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (353 samples, 0.14%)</title><rect x="1090.6" y="547.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1093.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (208 samples, 0.08%)</title><rect x="1090.6" y="531.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1093.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (145 samples, 0.06%)</title><rect x="1091.5" y="531.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1094.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (145 samples, 0.06%)</title><rect x="1091.5" y="515.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1094.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (145 samples, 0.06%)</title><rect x="1091.5" y="499.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1094.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (300 samples, 0.12%)</title><rect x="1092.2" y="563.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1095.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (523 samples, 0.20%)</title><rect x="1093.5" y="563.0" width="2.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1096.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (5,191 samples, 2.00%)</title><rect x="1095.9" y="563.0" width="23.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1098.9" y="574.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (584 samples, 0.22%)</title><rect x="1095.9" y="547.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1098.9" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (467 samples, 0.18%)</title><rect x="1095.9" y="531.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1098.9" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (163 samples, 0.06%)</title><rect x="1095.9" y="515.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1098.9" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (163 samples, 0.06%)</title><rect x="1095.9" y="499.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1098.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (304 samples, 0.12%)</title><rect x="1096.7" y="515.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1099.7" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (298 samples, 0.11%)</title><rect x="1096.7" y="499.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1099.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (117 samples, 0.05%)</title><rect x="1098.1" y="531.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1101.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (117 samples, 0.05%)</title><rect x="1098.1" y="515.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1101.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (117 samples, 0.05%)</title><rect x="1098.1" y="499.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1101.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$67/2082781203.get (117 samples, 0.05%)</title><rect x="1098.1" y="483.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1101.1" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (117 samples, 0.05%)</title><rect x="1098.1" y="467.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1101.1" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,072 samples, 0.80%)</title><rect x="1098.6" y="547.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1101.6" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,072 samples, 0.80%)</title><rect x="1098.6" y="531.0" width="9.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1101.6" y="542.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (95 samples, 0.04%)</title><rect x="1098.6" y="515.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1101.6" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (119 samples, 0.05%)</title><rect x="1099.0" y="515.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1102.0" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (260 samples, 0.10%)</title><rect x="1099.6" y="515.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1102.6" y="526.0"></text>
</g>
<g>
<title>java.util.TreeSet (98 samples, 0.04%)</title><rect x="1100.7" y="515.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1103.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (168 samples, 0.06%)</title><rect x="1101.2" y="515.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1104.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (168 samples, 0.06%)</title><rect x="1101.2" y="499.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1104.2" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.get$Lambda (168 samples, 0.06%)</title><rect x="1101.2" y="483.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1104.2" y="494.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$139 (168 samples, 0.06%)</title><rect x="1101.2" y="467.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1104.2" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (892 samples, 0.34%)</title><rect x="1102.0" y="515.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1105.0" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (892 samples, 0.34%)</title><rect x="1102.0" y="499.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1105.0" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.accept (892 samples, 0.34%)</title><rect x="1102.0" y="483.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1105.0" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (892 samples, 0.34%)</title><rect x="1102.0" y="467.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1105.0" y="478.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (463 samples, 0.18%)</title><rect x="1102.0" y="451.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1105.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.accept (293 samples, 0.11%)</title><rect x="1102.0" y="435.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1105.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (293 samples, 0.11%)</title><rect x="1102.0" y="419.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1105.0" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (293 samples, 0.11%)</title><rect x="1102.0" y="403.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1105.0" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (293 samples, 0.11%)</title><rect x="1102.0" y="387.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1105.0" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (293 samples, 0.11%)</title><rect x="1102.0" y="371.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1105.0" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (293 samples, 0.11%)</title><rect x="1102.0" y="355.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1105.0" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (293 samples, 0.11%)</title><rect x="1102.0" y="339.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1105.0" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (293 samples, 0.11%)</title><rect x="1102.0" y="323.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1105.0" y="334.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (170 samples, 0.07%)</title><rect x="1103.3" y="435.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1106.3" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (170 samples, 0.07%)</title><rect x="1103.3" y="419.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1106.3" y="430.0"></text>
</g>
<g>
<title>java/util/List.copyOf (224 samples, 0.09%)</title><rect x="1104.1" y="451.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1107.1" y="462.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (224 samples, 0.09%)</title><rect x="1104.1" y="435.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1107.1" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (119 samples, 0.05%)</title><rect x="1104.1" y="419.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1107.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (119 samples, 0.05%)</title><rect x="1104.1" y="403.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1107.1" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (119 samples, 0.05%)</title><rect x="1104.1" y="387.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1107.1" y="398.0"></text>
</g>
<g>
<title>java/util/List.of (105 samples, 0.04%)</title><rect x="1104.6" y="419.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1107.6" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (105 samples, 0.04%)</title><rect x="1104.6" y="403.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1107.6" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (205 samples, 0.08%)</title><rect x="1105.1" y="451.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1108.1" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (205 samples, 0.08%)</title><rect x="1105.1" y="435.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1108.1" y="446.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (181 samples, 0.07%)</title><rect x="1106.0" y="515.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1109.0" y="526.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (181 samples, 0.07%)</title><rect x="1106.0" y="499.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1109.0" y="510.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (259 samples, 0.10%)</title><rect x="1106.8" y="515.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1109.8" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (259 samples, 0.10%)</title><rect x="1106.8" y="499.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1109.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (78 samples, 0.03%)</title><rect x="1108.0" y="547.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1111.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (1,648 samples, 0.63%)</title><rect x="1108.4" y="547.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1111.4" y="558.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (1,648 samples, 0.63%)</title><rect x="1108.4" y="531.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1111.4" y="542.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,462 samples, 0.56%)</title><rect x="1108.4" y="515.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1111.4" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,462 samples, 0.56%)</title><rect x="1108.4" y="499.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1111.4" y="510.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,462 samples, 0.56%)</title><rect x="1108.4" y="483.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1111.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (517 samples, 0.20%)</title><rect x="1108.4" y="467.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1111.4" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (517 samples, 0.20%)</title><rect x="1108.4" y="451.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1111.4" y="462.0"></text>
</g>
<g>
<title>byte[] (517 samples, 0.20%)</title><rect x="1108.4" y="435.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1111.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (945 samples, 0.36%)</title><rect x="1110.7" y="467.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1113.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (945 samples, 0.36%)</title><rect x="1110.7" y="451.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1113.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String (416 samples, 0.16%)</title><rect x="1110.7" y="435.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1113.7" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (529 samples, 0.20%)</title><rect x="1112.6" y="435.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1115.6" y="446.0"></text>
</g>
<g>
<title>byte[] (529 samples, 0.20%)</title><rect x="1112.6" y="419.0" width="2.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1115.6" y="430.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (186 samples, 0.07%)</title><rect x="1115.0" y="515.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1118.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (286 samples, 0.11%)</title><rect x="1115.8" y="547.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1118.8" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (286 samples, 0.11%)</title><rect x="1115.8" y="531.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1118.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (523 samples, 0.20%)</title><rect x="1117.1" y="547.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1120.1" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (133 samples, 0.05%)</title><rect x="1117.1" y="531.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1120.1" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (139 samples, 0.05%)</title><rect x="1117.7" y="531.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1120.7" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (139 samples, 0.05%)</title><rect x="1117.7" y="515.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1120.7" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (251 samples, 0.10%)</title><rect x="1118.4" y="531.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1121.4" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (251 samples, 0.10%)</title><rect x="1118.4" y="515.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1121.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (2,609 samples, 1.00%)</title><rect x="1119.5" y="563.0" width="11.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1122.5" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (95 samples, 0.04%)</title><rect x="1119.5" y="547.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1122.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (361 samples, 0.14%)</title><rect x="1119.9" y="547.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1122.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (75 samples, 0.03%)</title><rect x="1121.6" y="547.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1124.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (75 samples, 0.03%)</title><rect x="1121.6" y="531.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1124.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (2,069 samples, 0.80%)</title><rect x="1122.0" y="547.0" width="9.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1125.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (2,069 samples, 0.80%)</title><rect x="1122.0" y="531.0" width="9.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1125.0" y="542.0"></text>
</g>
<g>
<title>java.lang.Class[] (170 samples, 0.07%)</title><rect x="1122.0" y="515.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1125.0" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (195 samples, 0.08%)</title><rect x="1122.7" y="515.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1125.7" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList (175 samples, 0.07%)</title><rect x="1123.6" y="515.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1126.6" y="526.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (935 samples, 0.36%)</title><rect x="1124.4" y="515.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1127.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (935 samples, 0.36%)</title><rect x="1124.4" y="499.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1127.4" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (935 samples, 0.36%)</title><rect x="1124.4" y="483.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1127.4" y="494.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (935 samples, 0.36%)</title><rect x="1124.4" y="467.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1127.4" y="478.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (915 samples, 0.35%)</title><rect x="1124.4" y="451.0" width="4.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1127.4" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (293 samples, 0.11%)</title><rect x="1128.7" y="515.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1131.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (293 samples, 0.11%)</title><rect x="1128.7" y="499.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1131.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (81 samples, 0.03%)</title><rect x="1128.7" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1131.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (81 samples, 0.03%)</title><rect x="1128.7" y="467.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1131.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (212 samples, 0.08%)</title><rect x="1129.0" y="483.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1132.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (212 samples, 0.08%)</title><rect x="1129.0" y="467.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1132.0" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (301 samples, 0.12%)</title><rect x="1130.0" y="515.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1133.0" y="526.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (301 samples, 0.12%)</title><rect x="1130.0" y="499.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1133.0" y="510.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (301 samples, 0.12%)</title><rect x="1130.0" y="483.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1133.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (1,395 samples, 0.54%)</title><rect x="1131.4" y="563.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1134.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (252 samples, 0.10%)</title><rect x="1131.4" y="547.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1134.4" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (99 samples, 0.04%)</title><rect x="1131.4" y="531.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1134.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (153 samples, 0.06%)</title><rect x="1131.8" y="531.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1134.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (152 samples, 0.06%)</title><rect x="1131.8" y="515.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1134.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (152 samples, 0.06%)</title><rect x="1131.8" y="499.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1134.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (152 samples, 0.06%)</title><rect x="1131.8" y="483.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1134.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (152 samples, 0.06%)</title><rect x="1131.8" y="467.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1134.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (176 samples, 0.07%)</title><rect x="1132.5" y="547.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1135.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (967 samples, 0.37%)</title><rect x="1133.3" y="547.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1136.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (168 samples, 0.06%)</title><rect x="1133.3" y="531.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1136.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (168 samples, 0.06%)</title><rect x="1133.3" y="515.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$150/1603050069.get$Lambda (82 samples, 0.03%)</title><rect x="1133.3" y="499.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1136.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$150 (82 samples, 0.03%)</title><rect x="1133.3" y="483.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1136.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$151/1373859138.get$Lambda (86 samples, 0.03%)</title><rect x="1133.7" y="499.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$151 (86 samples, 0.03%)</title><rect x="1133.7" y="483.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1136.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (799 samples, 0.31%)</title><rect x="1134.1" y="531.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1137.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (799 samples, 0.31%)</title><rect x="1134.1" y="515.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1137.1" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (432 samples, 0.17%)</title><rect x="1134.1" y="499.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1137.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (367 samples, 0.14%)</title><rect x="1136.0" y="499.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1139.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (367 samples, 0.14%)</title><rect x="1136.0" y="483.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (367 samples, 0.14%)</title><rect x="1136.0" y="467.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1139.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (2,375 samples, 0.91%)</title><rect x="1137.7" y="627.0" width="10.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1140.7" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (222 samples, 0.09%)</title><rect x="1137.7" y="611.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1140.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (2,153 samples, 0.83%)</title><rect x="1138.7" y="611.0" width="9.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1141.7" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,984 samples, 0.76%)</title><rect x="1138.7" y="595.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1141.7" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,984 samples, 0.76%)</title><rect x="1138.7" y="579.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.7" y="590.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (106 samples, 0.04%)</title><rect x="1138.7" y="563.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1141.7" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (125 samples, 0.05%)</title><rect x="1139.2" y="563.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1142.2" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (259 samples, 0.10%)</title><rect x="1139.7" y="563.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1142.7" y="574.0"></text>
</g>
<g>
<title>java.util.TreeSet (89 samples, 0.03%)</title><rect x="1140.9" y="563.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1143.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (177 samples, 0.07%)</title><rect x="1141.3" y="563.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1144.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (177 samples, 0.07%)</title><rect x="1141.3" y="547.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1144.3" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.get$Lambda (177 samples, 0.07%)</title><rect x="1141.3" y="531.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1144.3" y="542.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$139 (177 samples, 0.07%)</title><rect x="1141.3" y="515.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1144.3" y="526.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (196 samples, 0.08%)</title><rect x="1142.1" y="563.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1145.1" y="574.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (196 samples, 0.08%)</title><rect x="1142.1" y="547.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1145.1" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (778 samples, 0.30%)</title><rect x="1143.0" y="563.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1146.0" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$139/1467099527.accept (778 samples, 0.30%)</title><rect x="1143.0" y="547.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1146.0" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (778 samples, 0.30%)</title><rect x="1143.0" y="531.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1146.0" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (303 samples, 0.12%)</title><rect x="1143.0" y="515.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1146.0" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$140/139677039.accept (303 samples, 0.12%)</title><rect x="1143.0" y="499.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1146.0" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (303 samples, 0.12%)</title><rect x="1143.0" y="483.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1146.0" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (303 samples, 0.12%)</title><rect x="1143.0" y="467.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1146.0" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (303 samples, 0.12%)</title><rect x="1143.0" y="451.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1146.0" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (303 samples, 0.12%)</title><rect x="1143.0" y="435.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1146.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (303 samples, 0.12%)</title><rect x="1143.0" y="419.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1146.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (303 samples, 0.12%)</title><rect x="1143.0" y="403.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1146.0" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (299 samples, 0.12%)</title><rect x="1143.0" y="387.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1146.0" y="398.0"></text>
</g>
<g>
<title>java/util/List.copyOf (262 samples, 0.10%)</title><rect x="1144.4" y="515.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1147.4" y="526.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (262 samples, 0.10%)</title><rect x="1144.4" y="499.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1147.4" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (112 samples, 0.04%)</title><rect x="1144.4" y="483.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1147.4" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (112 samples, 0.04%)</title><rect x="1144.4" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1147.4" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (112 samples, 0.04%)</title><rect x="1144.4" y="451.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1147.4" y="462.0"></text>
</g>
<g>
<title>java/util/List.of (150 samples, 0.06%)</title><rect x="1144.9" y="483.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1147.9" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (150 samples, 0.06%)</title><rect x="1144.9" y="467.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1147.9" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (213 samples, 0.08%)</title><rect x="1145.6" y="515.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1148.6" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (213 samples, 0.08%)</title><rect x="1145.6" y="499.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1148.6" y="510.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (254 samples, 0.10%)</title><rect x="1146.6" y="563.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1149.6" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (254 samples, 0.10%)</title><rect x="1146.6" y="547.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1149.6" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (169 samples, 0.07%)</title><rect x="1147.7" y="595.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1150.7" y="606.0"></text>
</g>
<g>
<title>java/util/Optional.of (169 samples, 0.07%)</title><rect x="1147.7" y="579.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1150.7" y="590.0"></text>
</g>
<g>
<title>java.util.Optional (169 samples, 0.07%)</title><rect x="1147.7" y="563.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1150.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpServiceClient.bytes (155 samples, 0.06%)</title><rect x="1148.5" y="627.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1151.5" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (155 samples, 0.06%)</title><rect x="1148.5" y="611.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1151.5" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (155 samples, 0.06%)</title><rect x="1148.5" y="595.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1151.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/HttpServiceClient.request (3,586 samples, 1.38%)</title><rect x="1149.2" y="627.0" width="16.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1152.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (492 samples, 0.19%)</title><rect x="1149.2" y="611.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1152.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (492 samples, 0.19%)</title><rect x="1149.2" y="595.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1152.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1806431167.invoke (492 samples, 0.19%)</title><rect x="1149.2" y="579.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1152.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (492 samples, 0.19%)</title><rect x="1149.2" y="563.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1152.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (145 samples, 0.06%)</title><rect x="1149.2" y="547.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1152.2" y="558.0"></text>
</g>
<g>
<title>java.lang.String (145 samples, 0.06%)</title><rect x="1149.2" y="531.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1152.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (347 samples, 0.13%)</title><rect x="1149.8" y="547.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1152.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (347 samples, 0.13%)</title><rect x="1149.8" y="531.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1152.8" y="542.0"></text>
</g>
<g>
<title>byte[] (344 samples, 0.13%)</title><rect x="1149.8" y="515.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1152.8" y="526.0"></text>
</g>
<g>
<title>java/net/URI.create (2,115 samples, 0.81%)</title><rect x="1151.4" y="611.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1154.4" y="622.0"></text>
</g>
<g>
<title>java.net.URI (426 samples, 0.16%)</title><rect x="1151.4" y="595.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1154.4" y="606.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1,686 samples, 0.65%)</title><rect x="1153.4" y="595.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1156.4" y="606.0"></text>
</g>
<g>
<title>java.net.URI$Parser (209 samples, 0.08%)</title><rect x="1153.4" y="579.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1156.4" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1,477 samples, 0.57%)</title><rect x="1154.3" y="579.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1157.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (245 samples, 0.09%)</title><rect x="1154.3" y="563.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (245 samples, 0.09%)</title><rect x="1154.3" y="547.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1157.3" y="558.0"></text>
</g>
<g>
<title>java.lang.String (119 samples, 0.05%)</title><rect x="1154.3" y="531.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1157.3" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (126 samples, 0.05%)</title><rect x="1154.8" y="531.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1157.8" y="542.0"></text>
</g>
<g>
<title>byte[] (126 samples, 0.05%)</title><rect x="1154.8" y="515.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1157.8" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1,232 samples, 0.47%)</title><rect x="1155.4" y="563.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1158.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (598 samples, 0.23%)</title><rect x="1155.4" y="547.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1158.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (598 samples, 0.23%)</title><rect x="1155.4" y="531.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1158.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (267 samples, 0.10%)</title><rect x="1155.4" y="515.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1158.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (331 samples, 0.13%)</title><rect x="1156.6" y="515.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1159.6" y="526.0"></text>
</g>
<g>
<title>byte[] (331 samples, 0.13%)</title><rect x="1156.6" y="499.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1159.6" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (634 samples, 0.24%)</title><rect x="1158.1" y="547.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1161.1" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (331 samples, 0.13%)</title><rect x="1158.1" y="531.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1161.1" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (331 samples, 0.13%)</title><rect x="1158.1" y="515.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1161.1" y="526.0"></text>
</g>
<g>
<title>java.lang.String (141 samples, 0.05%)</title><rect x="1158.1" y="499.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1161.1" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (190 samples, 0.07%)</title><rect x="1158.8" y="499.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1161.8" y="510.0"></text>
</g>
<g>
<title>byte[] (190 samples, 0.07%)</title><rect x="1158.8" y="483.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1161.8" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (303 samples, 0.12%)</title><rect x="1159.6" y="531.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1162.6" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (303 samples, 0.12%)</title><rect x="1159.6" y="515.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1162.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (303 samples, 0.12%)</title><rect x="1159.6" y="499.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1162.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (303 samples, 0.12%)</title><rect x="1159.6" y="483.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1162.6" y="494.0"></text>
</g>
<g>
<title>java.lang.String (141 samples, 0.05%)</title><rect x="1159.6" y="467.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1162.6" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (162 samples, 0.06%)</title><rect x="1160.3" y="467.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1163.3" y="478.0"></text>
</g>
<g>
<title>byte[] (162 samples, 0.06%)</title><rect x="1160.3" y="451.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1163.3" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (342 samples, 0.13%)</title><rect x="1161.0" y="611.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1164.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (342 samples, 0.13%)</title><rect x="1161.0" y="595.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1164.0" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (100 samples, 0.04%)</title><rect x="1161.0" y="579.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1164.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (242 samples, 0.09%)</title><rect x="1161.5" y="579.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1164.5" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (242 samples, 0.09%)</title><rect x="1161.5" y="563.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1164.5" y="574.0"></text>
</g>
<g>
<title>java/time/Duration.ofMillis (133 samples, 0.05%)</title><rect x="1162.6" y="611.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1165.6" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.create (133 samples, 0.05%)</title><rect x="1162.6" y="595.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1165.6" y="606.0"></text>
</g>
<g>
<title>java.time.Duration (133 samples, 0.05%)</title><rect x="1162.6" y="579.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1165.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (504 samples, 0.19%)</title><rect x="1163.2" y="611.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1166.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (504 samples, 0.19%)</title><rect x="1163.2" y="595.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1166.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (504 samples, 0.19%)</title><rect x="1163.2" y="579.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1166.2" y="590.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (504 samples, 0.19%)</title><rect x="1163.2" y="563.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1166.2" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (220 samples, 0.08%)</title><rect x="1163.2" y="547.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1166.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (220 samples, 0.08%)</title><rect x="1163.2" y="531.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1166.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$136/728132573.apply (284 samples, 0.11%)</title><rect x="1164.2" y="547.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1167.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (284 samples, 0.11%)</title><rect x="1164.2" y="531.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1167.2" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (131 samples, 0.05%)</title><rect x="1164.2" y="515.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1167.2" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (153 samples, 0.06%)</title><rect x="1164.8" y="515.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1167.8" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (153 samples, 0.06%)</title><rect x="1164.8" y="499.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1167.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (84 samples, 0.03%)</title><rect x="1165.5" y="723.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1168.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (84 samples, 0.03%)</title><rect x="1165.5" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1168.5" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (84 samples, 0.03%)</title><rect x="1165.5" y="691.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1168.5" y="702.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$26/1629687658.get (84 samples, 0.03%)</title><rect x="1165.5" y="675.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1168.5" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList (84 samples, 0.03%)</title><rect x="1165.5" y="659.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1168.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (135 samples, 0.05%)</title><rect x="1165.8" y="739.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1168.8" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (135 samples, 0.05%)</title><rect x="1165.8" y="723.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1168.8" y="734.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (135 samples, 0.05%)</title><rect x="1165.8" y="707.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1168.8" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (87 samples, 0.03%)</title><rect x="1166.5" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1169.5" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (87 samples, 0.03%)</title><rect x="1166.5" y="739.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1169.5" y="750.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (87 samples, 0.03%)</title><rect x="1166.5" y="723.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1169.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (80 samples, 0.03%)</title><rect x="1166.8" y="787.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1169.8" y="798.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (80 samples, 0.03%)</title><rect x="1166.8" y="771.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1169.8" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (313 samples, 0.12%)</title><rect x="1167.2" y="803.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1170.2" y="814.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (313 samples, 0.12%)</title><rect x="1167.2" y="787.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1170.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils.firstN (945 samples, 0.36%)</title><rect x="1168.6" y="803.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1171.6" y="814.0"></text>
</g>
<g>
<title>java.util.ArrayList (61 samples, 0.02%)</title><rect x="1168.6" y="787.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1171.6" y="798.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (58 samples, 0.02%)</title><rect x="1168.9" y="787.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1171.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1182594129.linkToTargetMethod (114 samples, 0.04%)</title><rect x="1169.5" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1172.5" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1191051212.invokeStatic (114 samples, 0.04%)</title><rect x="1169.5" y="771.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1172.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils$$Lambda$170/1308121008.get$Lambda (114 samples, 0.04%)</title><rect x="1169.5" y="755.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1172.5" y="766.0"></text>
</g>
<g>
<title>ru.mail.polis.service.vaddya.CompletableFutureUtils$$Lambda$170 (114 samples, 0.04%)</title><rect x="1169.5" y="739.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1172.5" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (64 samples, 0.02%)</title><rect x="1170.0" y="787.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1173.0" y="798.0"></text>
</g>
<g>
<title>java.lang.Object[] (64 samples, 0.02%)</title><rect x="1170.0" y="771.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1173.0" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (469 samples, 0.18%)</title><rect x="1170.3" y="787.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1173.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils$$Lambda$175/1236692729.accept (469 samples, 0.18%)</title><rect x="1170.3" y="771.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1173.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/CompletableFutureUtils.lambda$firstN$1 (469 samples, 0.18%)</title><rect x="1170.3" y="755.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1173.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (469 samples, 0.18%)</title><rect x="1170.3" y="739.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1173.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (469 samples, 0.18%)</title><rect x="1170.3" y="723.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1173.3" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (224 samples, 0.09%)</title><rect x="1170.3" y="707.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1173.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (64 samples, 0.02%)</title><rect x="1171.3" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1174.3" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (64 samples, 0.02%)</title><rect x="1171.3" y="691.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1174.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (181 samples, 0.07%)</title><rect x="1171.6" y="707.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1174.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (181 samples, 0.07%)</title><rect x="1171.6" y="691.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1174.6" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (181 samples, 0.07%)</title><rect x="1171.6" y="675.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1174.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.&lt;init&gt; (105 samples, 0.04%)</title><rect x="1172.4" y="787.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1175.4" y="798.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (105 samples, 0.04%)</title><rect x="1172.4" y="771.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1175.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/topology/ConsistentHashingTopology.primaryFor (1,943 samples, 0.75%)</title><rect x="1172.9" y="803.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1175.9" y="814.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (73 samples, 0.03%)</title><rect x="1173.1" y="787.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1176.1" y="798.0"></text>
</g>
<g>
<title>java.lang.Long (73 samples, 0.03%)</title><rect x="1173.1" y="771.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1176.1" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (235 samples, 0.09%)</title><rect x="1173.4" y="787.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1176.4" y="798.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (58 samples, 0.02%)</title><rect x="1173.4" y="771.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1176.4" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (177 samples, 0.07%)</title><rect x="1173.7" y="771.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1176.7" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (101 samples, 0.04%)</title><rect x="1173.7" y="755.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1176.7" y="766.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (101 samples, 0.04%)</title><rect x="1173.7" y="739.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1176.7" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (76 samples, 0.03%)</title><rect x="1174.2" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1177.2" y="766.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (76 samples, 0.03%)</title><rect x="1174.2" y="739.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1177.2" y="750.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (136 samples, 0.05%)</title><rect x="1174.7" y="787.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1177.7" y="798.0"></text>
</g>
<g>
<title>java.util.HashMap (136 samples, 0.05%)</title><rect x="1174.7" y="771.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1177.7" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.add (480 samples, 0.18%)</title><rect x="1175.3" y="787.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1178.3" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.put (480 samples, 0.18%)</title><rect x="1175.3" y="771.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1178.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (480 samples, 0.18%)</title><rect x="1175.3" y="755.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1178.3" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (268 samples, 0.10%)</title><rect x="1175.3" y="739.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1178.3" y="750.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (268 samples, 0.10%)</title><rect x="1175.3" y="723.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1178.3" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (212 samples, 0.08%)</title><rect x="1176.5" y="739.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1179.5" y="750.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (209 samples, 0.08%)</title><rect x="1176.5" y="723.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1179.5" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (143 samples, 0.06%)</title><rect x="1177.5" y="787.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1180.5" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (143 samples, 0.06%)</title><rect x="1177.5" y="771.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1180.5" y="782.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (143 samples, 0.06%)</title><rect x="1177.5" y="755.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1180.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vaddya/topology/ConsistentHashingTopology.hash (797 samples, 0.31%)</title><rect x="1178.1" y="787.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1181.1" y="798.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashString (797 samples, 0.31%)</title><rect x="1178.1" y="771.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1181.1" y="782.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHasher.putString (203 samples, 0.08%)</title><rect x="1178.1" y="755.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1181.1" y="766.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHasher.putBytes (139 samples, 0.05%)</title><rect x="1178.1" y="739.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1181.1" y="750.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytes (139 samples, 0.05%)</title><rect x="1178.1" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1181.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (139 samples, 0.05%)</title><rect x="1178.1" y="707.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1181.1" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (139 samples, 0.05%)</title><rect x="1178.1" y="691.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1181.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (64 samples, 0.02%)</title><rect x="1178.8" y="739.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1181.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (64 samples, 0.02%)</title><rect x="1178.8" y="723.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1181.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (64 samples, 0.02%)</title><rect x="1178.8" y="707.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1181.8" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (64 samples, 0.02%)</title><rect x="1178.8" y="691.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1181.8" y="702.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.02%)</title><rect x="1178.8" y="675.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1181.8" y="686.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (234 samples, 0.09%)</title><rect x="1179.0" y="755.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1182.0" y="766.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (234 samples, 0.09%)</title><rect x="1179.0" y="739.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1182.0" y="750.0"></text>
</g>
<g>
<title>byte[] (96 samples, 0.04%)</title><rect x="1179.0" y="723.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1182.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (138 samples, 0.05%)</title><rect x="1179.5" y="723.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1182.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (138 samples, 0.05%)</title><rect x="1179.5" y="707.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1182.5" y="718.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (138 samples, 0.05%)</title><rect x="1179.5" y="691.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1182.5" y="702.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (360 samples, 0.14%)</title><rect x="1180.1" y="755.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1183.1" y="766.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (119 samples, 0.05%)</title><rect x="1180.1" y="739.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1183.1" y="750.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (241 samples, 0.09%)</title><rect x="1180.6" y="739.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1183.6" y="750.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (241 samples, 0.09%)</title><rect x="1180.6" y="723.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1183.6" y="734.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (241 samples, 0.09%)</title><rect x="1180.6" y="707.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1183.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (241 samples, 0.09%)</title><rect x="1180.6" y="691.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1183.6" y="702.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (131 samples, 0.05%)</title><rect x="1180.6" y="675.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1183.6" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (110 samples, 0.04%)</title><rect x="1181.2" y="675.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1184.2" y="686.0"></text>
</g>
<g>
<title>byte[] (110 samples, 0.04%)</title><rect x="1181.2" y="659.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1184.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (142 samples, 0.05%)</title><rect x="1181.7" y="851.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1184.7" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (142 samples, 0.05%)</title><rect x="1181.7" y="835.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1184.7" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (142 samples, 0.05%)</title><rect x="1181.7" y="819.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1184.7" y="830.0"></text>
</g>
<g>
<title>java.lang.String (58 samples, 0.02%)</title><rect x="1181.7" y="803.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1184.7" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (84 samples, 0.03%)</title><rect x="1182.0" y="803.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1185.0" y="814.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.03%)</title><rect x="1182.0" y="787.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1185.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (863 samples, 0.33%)</title><rect x="1182.4" y="883.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1185.4" y="894.0"></text>
</g>
<g>
<title>one.nio.http.Request (73 samples, 0.03%)</title><rect x="1182.4" y="867.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1185.4" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (195 samples, 0.08%)</title><rect x="1182.7" y="867.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1185.7" y="878.0"></text>
</g>
<g>
<title>java.lang.String[] (192 samples, 0.07%)</title><rect x="1182.7" y="851.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1185.7" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (595 samples, 0.23%)</title><rect x="1183.6" y="867.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1186.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (595 samples, 0.23%)</title><rect x="1183.6" y="851.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1186.6" y="862.0"></text>
</g>
<g>
<title>char[] (448 samples, 0.17%)</title><rect x="1183.6" y="835.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1186.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (99 samples, 0.04%)</title><rect x="1185.9" y="835.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1188.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (99 samples, 0.04%)</title><rect x="1185.9" y="819.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1188.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (99 samples, 0.04%)</title><rect x="1185.9" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.9" y="814.0"></text>
</g>
<g>
<title>byte[] (99 samples, 0.04%)</title><rect x="1185.9" y="787.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1188.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (63 samples, 0.02%)</title><rect x="1186.3" y="883.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1189.3" y="894.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.02%)</title><rect x="1186.3" y="867.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1189.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (119 samples, 0.05%)</title><rect x="1186.6" y="883.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1189.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (119 samples, 0.05%)</title><rect x="1186.6" y="867.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1189.6" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (119 samples, 0.05%)</title><rect x="1186.6" y="851.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1189.6" y="862.0"></text>
</g>
<g>
<title>java.lang.String (64 samples, 0.02%)</title><rect x="1186.6" y="835.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1189.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (631 samples, 0.24%)</title><rect x="1187.1" y="883.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1190.1" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (631 samples, 0.24%)</title><rect x="1187.1" y="867.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1190.1" y="878.0"></text>
</g>
<g>
<title>char[] (278 samples, 0.11%)</title><rect x="1187.1" y="851.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1190.1" y="862.0"></text>
</g>
<g>
<title>java.lang.String (134 samples, 0.05%)</title><rect x="1188.4" y="851.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1191.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (219 samples, 0.08%)</title><rect x="1189.0" y="851.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1192.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (219 samples, 0.08%)</title><rect x="1189.0" y="835.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1192.0" y="846.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (219 samples, 0.08%)</title><rect x="1189.0" y="819.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1192.0" y="830.0"></text>
</g>
<g>
<title>byte[] (219 samples, 0.08%)</title><rect x="1189.0" y="803.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1192.0" y="814.0"></text>
</g>
</g>
</svg>
